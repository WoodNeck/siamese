{"version":3,"sources":["../../node_modules/discord.js/src/client/websocket/handlers sync /^/.//.*/.js$","pages/IconList.tsx","redux/actionTypes.ts","redux/actions.ts","component/SubcategoryLink.tsx","../../src/const/category.ts","../../src/const/emoji.ts","component/Sidebar.tsx","component/Login.tsx","component/Profile.tsx","component/Header.tsx","pages/Home.tsx","pages/GuildList.tsx","pages/NotFound.tsx","../../src/api/const/url.ts","component/IconHeaderMenu.tsx","component/Loading.tsx","component/MasterCheckbox.tsx","component/ItemCheckbox.tsx","component/NameInput.tsx","component/IconChat.tsx","pages/AuthNeeded.tsx","pages/Icon.tsx","component/command/CommandItem.tsx","../../src/util/helper.ts","../../src/const/command/bot.ts","../../src/util/markdown.ts","pages/command/Bot.tsx","pages/Command.tsx","pages/Setting.tsx","Main.tsx","reportWebVitals.js","redux/reducers/guilds.ts","redux/reducers/hamburger.ts","redux/reducers/icon.ts","redux/reducers/index.ts","redux/reducers/user.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ItemType","SET_USER","SET_GUILDS","TOGGLE_HAMBURGER","TOGGLE_ICON","SET_ICONS","SELECT_ALL_ICON","UNSELECT_ALL_ICON","toggleHamburger","type","ACTION","setCheckedIcons","ids","payload","Subcategory","to","className","children","dispatch","useDispatch","location","useLocation","activeClassName","isActive","pathname","onClick","BOT","ID","NAME","DESC","EMOJI","UTILITY","SEARCH","SOUND","HISTORY","STEAM","GAME","ICON","Sidebar","hamburger","useSelector","state","guilds","routes","useMemo","path","name","icon","active","startsWith","subcategories","guild","src","iconURL","process","values","CATEGORY","category","containerClass","classes","open","push","join","route","xlinkHref","target","rel","href","Login","window","Profile","user","avatarURL","Header","alt","Home","GuildList","hasPermission","data-tip","data-for","place","effect","NotFound","ICONS","DIRECTORY","DIRECTORIES","IconHeaderMenu","icons","iconGroups","iconGroup","openDropzone","forceUpdate","checkedState","createFolder","useCallback","formData","FormData","append","fetch","URL","method","credentials","body","then","res","a","status","text","toast","catch","err","error","message","toString","selectedGroups","filter","group","checked","selectedIcons","length","removeGroups","headers","JSON","stringify","directories","guildID","removeIcons","Promise","all","res1","res2","ok","removed","success","Loading","MasterCheckbox","useState","allChecked","setAllChecked","useEffect","every","onClickCapture","preventDefault","stopPropagation","color","bigger","shape","variant","readOnly","ItemCheckbox","toggleIconChecked","animation","style","pointerEvents","Boolean","NameInput","onUpdate","editing","setEditing","updateName","newName","maxLength","onBlur","value","onKeyDown","key","currentTarget","defaultValue","autoFocus","IconChat","modal","clickConfirm","username","marginLeft","width","height","viewBox","d","fill","url","IconList","useParams","groupID","setIconGroups","setIcons","setIconGroup","find","useReducer","x","iconFetcher","withReactContent","Swal","json","images","item","groups","selected","showIcon","fire","html","heightAuto","prevName","replace","endPoint","itemName","GROUP","useDropzone","accept","disabled","noClick","noKeyboard","maxSize","onDrop","files","forEach","file","uploadingToast","autoClose","update","render","TYPE","SUCCESS","ERROR","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","author","tag","iconCount","Date","createdTimestamp","toLocaleDateString","position","closeOnClick","AuthNeeded","Icon","match","useRouteMatch","setGuilds","CommandItem","command","CMD","dedent","callSite","args","format","str","split","substr","trim","output","slice","i","PING","MSG","ping","bot","uptime","word","Josa","c","getDisplayName","getUTCHours","getUTCMinutes","getUTCSeconds","Bot","Command","component","Setting","Main","setUser","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","rootReducer","combineReducers","action","reduce","newState","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee42e94.chunk.js","sourcesContent":["var map = {\n\t\"./CHANNEL_CREATE.js\": 282,\n\t\"./CHANNEL_DELETE.js\": 283,\n\t\"./CHANNEL_PINS_UPDATE.js\": 284,\n\t\"./CHANNEL_UPDATE.js\": 285,\n\t\"./GUILD_BAN_ADD.js\": 286,\n\t\"./GUILD_BAN_REMOVE.js\": 287,\n\t\"./GUILD_CREATE.js\": 288,\n\t\"./GUILD_DELETE.js\": 289,\n\t\"./GUILD_EMOJIS_UPDATE.js\": 290,\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": 291,\n\t\"./GUILD_MEMBERS_CHUNK.js\": 292,\n\t\"./GUILD_MEMBER_ADD.js\": 293,\n\t\"./GUILD_MEMBER_REMOVE.js\": 294,\n\t\"./GUILD_MEMBER_UPDATE.js\": 295,\n\t\"./GUILD_ROLE_CREATE.js\": 296,\n\t\"./GUILD_ROLE_DELETE.js\": 297,\n\t\"./GUILD_ROLE_UPDATE.js\": 298,\n\t\"./GUILD_UPDATE.js\": 299,\n\t\"./INVITE_CREATE.js\": 300,\n\t\"./INVITE_DELETE.js\": 301,\n\t\"./MESSAGE_CREATE.js\": 302,\n\t\"./MESSAGE_DELETE.js\": 303,\n\t\"./MESSAGE_DELETE_BULK.js\": 304,\n\t\"./MESSAGE_REACTION_ADD.js\": 305,\n\t\"./MESSAGE_REACTION_REMOVE.js\": 306,\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": 307,\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": 308,\n\t\"./MESSAGE_UPDATE.js\": 309,\n\t\"./PRESENCE_UPDATE.js\": 310,\n\t\"./READY.js\": 311,\n\t\"./RESUMED.js\": 312,\n\t\"./TYPING_START.js\": 313,\n\t\"./USER_UPDATE.js\": 314,\n\t\"./VOICE_SERVER_UPDATE.js\": 315,\n\t\"./VOICE_STATE_UPDATE.js\": 316,\n\t\"./WEBHOOKS_UPDATE.js\": 317,\n\t\"./index.js\": 151\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 281;","import React, { useState, useEffect, useMemo, useReducer, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { useDropzone } from \"react-dropzone\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NotFound from \"./NotFound\";\nimport IconHeaderMenu from \"../component/IconHeaderMenu\";\nimport Loading from \"../component/Loading\";\nimport MasterCheckbox from \"../component/MasterCheckbox\";\nimport ItemCheckbox from \"../component/ItemCheckbox\";\nimport NameInput from \"../component/NameInput\";\nimport IconChat from \"../component/IconChat\";\nimport { RootState } from \"../redux/reducers\";\nimport { setCheckedIcons } from \"../redux/actions\";\nimport * as URL from \"~/api/const/url\";\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\n\nimport \"./IconList.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"@djthoms/pretty-checkbox\";\n\nenum ItemType {\n  ICON,\n  GROUP\n}\n\nconst IconList: React.FC = () => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const user = useSelector((state: RootState) => state.user);\n  const dispatch = useDispatch();\n\n  const { guildID, groupID } = useParams<{ guildID: string, groupID?: string }>();\n  const [iconGroups, setIconGroups] = useState<IconGroup[] | null>(null);\n  const [icons, setIcons] = useState<Icon[] | null>(null);\n  const [iconGroup, setIconGroup] = useState<IconGroup | null>(null);\n\n  const guild = guilds.find(guild => guild.id === guildID)!;\n  const [iconFetcher, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const modal = withReactContent(Swal);\n  const hasPermission = guild ? guild.hasPermission : false;\n\n  useEffect(() => {\n    if (groupID) {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}?id=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}&groupID=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([group, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[]].map(item => item.id)));\n        setIconGroups([]);\n        setIcons(images);\n        setIconGroup(group as IconGroup);\n      });\n    } else {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}?id=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([groups, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[], ...groups as IconGroup[]].map(item => item.id)));\n        setIconGroups(groups.map((group: IconGroup) => ({...group, selected: false, editing: false})));\n        setIcons(images.map((icon: Icon) => ({...icon, selected: false})));\n        setIconGroup(null);\n      });\n    }\n  }, [guildID, groupID, iconFetcher, dispatch]);\n\n  const showIcon = useCallback((icon: Icon) => {\n    modal.fire({\n      html: <IconChat user={user!} icon={icon} iconGroup={iconGroup} modal={modal} />,\n      heightAuto: false\n    });\n  }, [user, modal, iconGroup]);\n\n  const updateName = useCallback((item: Icon | IconGroup, type: ItemType, newName: string) => {\n    const prevName = item.name;\n    newName = newName.replace(/\\s+/, \"\");\n\n    const endPoint = type === ItemType.ICON ? URL.ICON : URL.DIRECTORY;\n    const itemName = type === ItemType.ICON ? \"아이콘 이름\" : \"그룹명\";\n\n    item.name = newName;\n    if (type === ItemType.ICON && icons) {\n      setIcons([...icons]);\n    } else if (type === ItemType.GROUP && iconGroups) {\n      setIconGroups([...iconGroups]);\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}${endPoint}`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        id: item.id,\n        name: newName\n      })\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast.success(`${itemName}을 업데이트했습니다!`);\n    }).catch(err => {\n      item.name = prevName;\n      if (type === ItemType.ICON && icons) {\n        setIcons([...icons]);\n      } else if (type === ItemType.GROUP && iconGroups) {\n        setIconGroups([...iconGroups]);\n      }\n      toast.error(() => <div>❌ {itemName}을 변경하지 못했습니다<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [icons, iconGroups]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    open: openDropzone,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: \"image/jpg, image/jpeg, image/png, image/gif, image/webp\",\n    disabled: !hasPermission,\n    noClick: true,\n    noKeyboard: true,\n    maxSize: 8388608, // 8MB\n    onDrop: files => {\n      if (files.length <= 0) {\n        modal.fire({\n          icon: \"error\",\n          html: \"이미지 크기가 너무 크거나(8MB 이상)<br/>지원하지 않는 파일 포맷이 섞여있어요!\",\n          heightAuto: false\n        });\n        return;\n      }\n\n      const formData = new FormData();\n\n      formData.append(\"guildID\", guildID);\n      if (groupID) {\n        formData.append(\"groupID\", groupID);\n      }\n\n      files.forEach(file => {\n        formData.append(\"icons[]\", file, file.name);\n      });\n\n      const uploadingToast = toast(`${files.length}개의 아이콘을 업로드중입니다...`, { autoClose: false });\n\n      fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      }).then(async res => {\n        if (res.status !== 200) {\n          throw new Error(await res.text());\n        }\n        // Re-render component\n        toast.update(uploadingToast, {\n          render: `${files.length}개의 아이콘을 추가했습니다!`,\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n        forceUpdate();\n      }).catch(err => {\n        toast.update(uploadingToast, {\n          render: () => <div>❌ 아이콘 업로드에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n    }\n  });\n\n  const containerClass = useMemo(() => {\n    const classes = [\"icon-container\"];\n\n    isDragActive && classes.push(\"drag-active\");\n    isDragAccept && classes.push(\"drag-accept\");\n    isDragReject && classes.push(\"drag-reject\");\n\n    return classes.join(\" \");\n  }, [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  if (!guild) return <NotFound />\n  if (!iconGroups || !icons) return <Loading />\n\n  return (\n    <div {...getRootProps({className: containerClass})}>\n      <IconHeaderMenu\n        icons={icons} iconGroups={iconGroups} iconGroup={iconGroup}\n        guild={guild} hasPermission={hasPermission} openDropzone={openDropzone} forceUpdate={forceUpdate}\n      />\n      <div className=\"icon-item-container\">\n        <div className=\"icon-item icon-item-header\">\n          { hasPermission && <MasterCheckbox /> }\n          <div className=\"icon-item-name-container header-name\">이름</div>\n          <div className=\"icon-item-author\">생성자</div>\n          <div className=\"icon-item-count\">아이콘 개수</div>\n          <div className=\"icon-item-date\">생성일자</div>\n        </div>\n        {\n          iconGroups.map(iconGroup => (\n            <Link key={iconGroup.id} className=\"icon-item\" to={`/icon/${guildID}/${iconGroup.id}`}>\n                { guild.hasPermission && <ItemCheckbox id={iconGroup.id} />}\n                <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n                </svg>\n                <NameInput name={iconGroup.name} onUpdate={newName => updateName(iconGroup, ItemType.GROUP, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ iconGroup.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ iconGroup.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\">{ iconGroup.iconCount }</div>\n              <div className=\"icon-item-date\">{ new Date(iconGroup.createdTimestamp).toLocaleDateString() }</div>\n            </Link>\n          ))\n        }\n        {\n          icons.map(icon => (\n            <div key={icon.id} className=\"icon-item\" onClick={() => showIcon(icon)}>\n              { guild.hasPermission && <ItemCheckbox id={icon.id} />}\n              <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/image.svg#icon`} />\n                </svg>\n                <NameInput name={icon.name} onUpdate={newName => updateName(icon, ItemType.ICON, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ icon.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ icon.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\"></div>\n              <div className=\"icon-item-date\">{ new Date(icon.createdTimestamp).toLocaleDateString() }</div>\n            </div>\n          ))\n        }\n      </div>\n      <div className=\"icon-footer\">\n        <img className=\"icon-footer-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        <div className=\"icon-footer-chat-bubble\">드래그 & 드롭으로도 업로드할 수 있다냥!</div>\n      </div>\n      <div className=\"icon-drag-visualizer\">\n        <svg className=\"icon-drag-add\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add.svg#icon`} />\n        </svg>\n        <div className=\"icon-drag-reject-container\">\n          <svg className=\"icon-drag-reject\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} />\n          </svg>\n          <div>지원하지 않는 파일 포맷이 섞여있어요!</div>\n        </div>\n      </div>\n      <input {...getInputProps()} />\n      <ToastContainer position=\"bottom-right\" closeOnClick />\n    </div>\n  );\n}\n\nexport default IconList;\n","export const SET_USER = \"user/SET\" as const;\n\nexport const SET_GUILDS = \"guilds/SET\" as const;\n\nexport const TOGGLE_HAMBURGER = \"hamburger/TOGGLE\" as const;\n\nexport const TOGGLE_ICON = \"icon/TOGGLE\" as const;\nexport const SET_ICONS = \"icon/SET\" as const;\nexport const SELECT_ALL_ICON = \"icon/SELECT_ALL\" as const;\nexport const UNSELECT_ALL_ICON = \"icon/UNSELECT_ALL\" as const;\n","import Guild from \"~/api/type/Guild\";\nimport User from \"~/api/type/User\";\nimport * as ACTION from \"./actionTypes\";\n\nexport const setUser = (user: User) => ({\n  type: ACTION.SET_USER,\n  payload: user\n});\n\nexport const setGuilds = (guilds: Guild[]) => ({\n  type: ACTION.SET_GUILDS,\n  payload: guilds\n});\n\nexport const toggleHamburger = () => ({\n  type: ACTION.TOGGLE_HAMBURGER\n});\n\nexport const toggleIconChecked = (id: string) => ({\n  type: ACTION.TOGGLE_ICON,\n  payload: { id }\n});\n\nexport const setCheckedIcons = (ids: string[]) => ({\n  type: ACTION.SET_ICONS,\n  payload: ids\n});\n\nexport const selectAllIcons = () => ({\n  type: ACTION.SELECT_ALL_ICON\n});\n\nexport const unselectAllIcons = () => ({\n  type: ACTION.UNSELECT_ALL_ICON\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { toggleHamburger } from \"../redux/actions\";\n\nimport \"./SubcategoryLink.css\";\n\nconst Subcategory: React.FC<{\n  to: string;\n  className?: string;\n}> = ({ to, className, children }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  return <NavLink to={to} className={`subcategory-item ${className ? className : \"\"}`} activeClassName=\"selected\"\n    isActive={() => location.pathname === to}\n    onClick={() => dispatch(toggleHamburger())}\n  >\n    { children }\n  </NavLink>\n}\n\nexport default Subcategory;\n","import * as EMOJI from \"~/const/emoji\";\n\nexport const BOT = {\n  ID: \"bot\",\n  NAME: \"봇\",\n  DESC: \"봇과 관련된 정보들을 확인할 수 있다냥!\",\n  EMOJI: EMOJI.BOT\n};\nexport const UTILITY = {\n  ID: \"utility\",\n  NAME: \"유틸리티\",\n  DESC: \"유용한 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.TOOLS\n};\nexport const SEARCH = {\n  ID: \"search\",\n  NAME: \"검색\",\n  DESC: \"인터넷으로 검색한 결과를 보여주는 명령어들이다냥!\",\n  EMOJI: EMOJI.MAGNIFYING_GLASS_LEFT\n};\nexport const SOUND = {\n  ID: \"sound\",\n  NAME: \"음악\",\n  DESC: \"음성 채널에서 사용할 수 있는 명령어들이다냥!\",\n  EMOJI: EMOJI.MUSIC_NOTES\n};\nexport const HISTORY = {\n  ID: \"history\",\n  NAME: \"기록\",\n  DESC: \"서버의 각종 기록들을 열람할 수 있다냥!\",\n  EMOJI: EMOJI.SCROLL\n};\nexport const STEAM = {\n  ID: \"steam\",\n  NAME: \"스팀\",\n  DESC: \"스팀에서 여러가지 정보를 검색한다냥!\",\n  EMOJI: EMOJI.MONEY_WITH_WINGS\n};\nexport const GAME = {\n  ID: \"game\",\n  NAME: \"게임\",\n  DESC: \"다양한 게임과 관련된 명령어들이다냥!\",\n  EMOJI: EMOJI.VIDEO_GAME\n};\nexport const ICON = {\n  ID: \"icon\",\n  NAME: \"아이콘\",\n  DESC: \"아이콘 관련 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.PICTURE\n};\n","export const TOOLS = \"🛠️\";\nexport const SMALL_BLUE_DIAMOND = \"🔹\";\nexport const SMALL_ORANGE_DIAMOND = \"🔸\";\nexport const SMALL_WHITE_SQUARE = \"▫️\";\nexport const SMALL_BLACK_SQUARE = \"▪️\";\nexport const UP_TRIANGLE = \"🔺\";\nexport const SPEAKING_HEAD = \"🗣️\";\nexport const LOUD_SPEAKER = \"📢\";\nexport const EXCLAMATION = \"❗\";\nexport const BANGBANG = \"‼️\";\nexport const QUESTION_MARK = \"❓\";\nexport const MIDDLE_DOT = \"•\";\nexport const DICE = \"🎲\";\nexport const WWW = \"🌐\";\nexport const MAGNIFYING_GLASS_LEFT = \"🔍\";\nexport const ARROW_SHADED_RIGHT = \"➩\";\nexport const ARROW_LEFT = \"⬅\";\nexport const ARROW_RIGHT = \"➡\";\nexport const ARROW_UP = \"↑\";\nexport const PLAY = \"▶\";\nexport const PAUSE = \"⏸️\";\nexport const CROSS = \"❌\";\nexport const WARNING = \"⚠️\";\nexport const WAVY_DASH = \"〰️\";\nexport const ALARM = \"⏰\";\nexport const STOPWATCH = \"⏱️\";\nexport const CLOCK_3 = \"🕒\";\nexport const HEADPHONES = \"🎧\";\nexport const MICROPHONE = \"🎤\";\nexport const CD = \"💿\";\nexport const MUSIC_NOTE = \"🎵\";\nexport const MUSIC_NOTES = \"🎶\";\nexport const MUSIC_8TH = \"♪\";\nexport const LOOP = \"🔁\";\nexport const HOURGLASS_NOT_DONE = \"⏳\";\nexport const DOLLAR = \"💵\";\nexport const BOOKS = \"📚\";\nexport const MONEY_WITH_WINGS = \"💸\";\nexport const GREEN_CHECK = \"✅\";\nexport const ANGER = \"💢\";\nexport const NO_ENTRY = \"⛔\";\nexport const LARGE_CIRCLE = \"⭕\";\nexport const BLUE_CIRCLE = \"🔵\";\nexport const VIDEO_GAME = \"🎮\";\nexport const PEOPLE = \"👥\";\nexport const NSFW = \"🔞\";\nexport const EGGPLANT = \"🍆\";\nexport const SPARKLING_HEART = \"💖\";\nexport const BLACK_HEART = \"🖤\";\nexport const BOT = \"🤖\";\nexport const WRENCH = \"🔧\";\nexport const GEAR = \"⚙️\";\nexport const BAR_CHART = \"📊\";\nexport const THINKING = \"🤔\";\nexport const KEYCAP = \"⃣\";\nexport const TEN = \"🔟\";\nexport const STAR = \"⭐\";\nexport const GLOWING_STAR = \"🌟\";\nexport const LOW_BRIGHTNESS = \"🔅\";\nexport const THERMOMETER = \"🌡️\";\nexport const SPEECH_BUBBLE = \"💬\";\nexport const RULER = \"📏\";\nexport const SCALES = \"⚖️\";\nexport const CAT = {\n  KISSING: \"😽\",\n  GRINNING: \"😸\"\n};\nexport const CROSSED_SWORDS = \"⚔️\";\nexport const SHIELD = \"🛡️\";\nexport const GOLD_MEDAL = \"🥇\";\nexport const SILVER_MEDAL = \"🥈\";\nexport const BRONZE_MEDAL = \"🥉\";\nexport const FILE = \"📁\";\nexport const FLOPPY_DISC = \"💾\";\nexport const PICTURE = \"🖼️\";\nexport const MEMO = \"📝\";\nexport const WHITE_FLOWER = \"💮\";\nexport const PUSH_PIN = \"📌\";\nexport const ENVELOPE_WITH_ARROW = \"📩\";\nexport const LINK = \"🔗\";\nexport const CROWN = \"👑\";\nexport const BALLOT_BOX = \"🗳️\";\nexport const MILITARY_HELMET = \"🪖\";\nexport const SCROLL = \"📜\";\nexport const LETTER = {\n  A: \"🇦\",\n  B: \"🇧\",\n  C: \"🇨\",\n  D: \"🇩\",\n  E: \"🇪\",\n  F: \"🇫\",\n  G: \"🇬\",\n  H: \"🇭\",\n  I: \"🇮\",\n  J: \"🇯\",\n  K: \"🇰\",\n  L: \"🇱\",\n  M: \"🇲\",\n  N: \"🇳\",\n  O: \"🇴\",\n  P: \"🇵\",\n  Q: \"🇶\",\n  R: \"🇷\",\n  S: \"🇸\",\n  T: \"🇹\",\n  U: \"🇺\",\n  V: \"🇻\",\n  W: \"🇼\",\n  X: \"🇽\",\n  Y: \"🇾\",\n  Z: \"🇿\"\n};\nexport const ZERO_WIDTH_SPACE = \"​\";\n","import React, { useMemo } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport SubcategoryLink from \"./SubcategoryLink\";\n\nimport \"./Sidebar.css\";\nimport { RootState } from \"../redux/reducers\";\nimport * as CATEGORY from \"~/const/category\";\n\ninterface Route {\n  path: string;\n  name: string;\n  icon: string;\n  active: boolean;\n  subcategories?: JSX.Element[];\n}\n\nconst Sidebar: React.FC = () => {\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const location = useLocation();\n\n  const routes: Route[] = useMemo(() => [\n    {\n      path: \"/\",\n      name: \"홈\",\n      icon: \"home\",\n      active: location.pathname === \"/\"\n    },\n    {\n      path: \"/icon\",\n      name: \"아이콘\",\n      icon: \"archive\",\n      active: location.pathname.startsWith(\"/icon\"),\n      subcategories: guilds?.map(guild =>\n        <SubcategoryLink to={`/icon/${guild.id}`} key={guild.id} className=\"guild-link\">\n          <img className=\"subcategory-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n          { guild.name }\n        </SubcategoryLink>\n      )\n    },\n    {\n      path: \"/command/bot\",\n      name: \"명령어 목록\",\n      icon: \"bolt\",\n      active: location.pathname.startsWith(\"/command\"),\n      subcategories: Object.values(CATEGORY)\n        .map(category => <SubcategoryLink to={`/command/${category.ID}`} key={category.ID}>{category.EMOJI} {category.NAME}</SubcategoryLink>)\n    },\n    {\n      path: \"/setting\",\n      name: \"서버 설정\",\n      icon: \"setting\",\n      active: location.pathname.startsWith(\"/setting\"),\n    }\n  ], [guilds, location]);\n\n  const containerClass = useMemo(() => {\n    const classes = [\"sidebar-container\"];\n    if (hamburger.open) classes.push(\"visible\");\n\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <div className={containerClass}>\n      <div className=\"sidebar-menu\">\n        {routes.map((route) => (\n          <div className=\"sidebar-menu-item-container\" key={route.name}>\n            <NavLink to={route.path} className=\"sidebar-menu-item\" activeClassName=\"selected\"\n              isActive={() => route.active}\n            >\n              <svg className=\"sidebar-menu-icon\">\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${route.icon}.svg#icon`} />\n              </svg>\n              <span>{route.name}</span>\n            </NavLink>\n            { route.active && route.subcategories }\n          </div>\n        ))}\n      </div>\n      <div className=\"sidebar-others\">\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\">\n          <div className=\"sidebar-others-item\">\n            <svg className=\"sidebar-others-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n            </svg>\n            <span>샴고양이 초대하기</span>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./Login.css\";\n\nconst Login = () => {\n  return (\n    <div className=\"header-menu\">\n      <div className=\"header-menu-item\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"header-menu-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/login.svg#icon`} />\n        </svg>\n        <span>로그인</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Login;\n","import React from \"react\";\nimport User from \"~/api/type/User\";\nimport \"./Profile.css\";\n\nconst Profile: React.FC<{ user: User }> = ({ user }) => {\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-overlay\"\n        onClick={() => {\n          window.location.href = `${process.env.REACT_APP_API_URL}/logout`\n        }}\n      >로그아웃</div>\n      <img className=\"profile-avatar\" src={user.avatarURL} />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React, { useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport { RootState } from \"../redux/reducers\";\nimport { toggleHamburger } from \"../redux/actions\";\n\nimport \"./Header.css\";\n\nconst Header: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n  const dispatch = useDispatch();\n\n  const containerClass = useMemo(() => {\n    const classes = [\"header-container\"];\n    if (hamburger.open) classes.push(\"sidebar\");\n\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <div className={containerClass}>\n      <div className=\"header-menu-left\">\n      <div className=\"header-burger\" onClick={() => dispatch(toggleHamburger())}>\n        <svg className=\"header-burger-icon\">\n          <use xlinkHref={\n            hamburger.open\n              ? `${process.env.PUBLIC_URL}/icons/cancel.svg#icon`\n              : `${process.env.PUBLIC_URL}/icons/hamburger.svg#icon`\n            } />\n        </svg>\n      </div>\n      <Link to=\"/\" className=\"header-logo\">\n        <div className=\"header-logo-text\">\n          <span>샴고양이</span>\n        </div>\n        <img className=\"header-logo-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n      </Link>\n      </div>\n      <div className=\"header-menu-right\">\n        {user != null\n          ? user.id\n            ? <Profile user={user} />\n            : <Login />\n          : <></>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <img className=\"home-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n    안냥\n    </div>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./GuildList.css\";\n\nconst GuildList: React.FC = () => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n\n  return (\n    <div className=\"guild-container\">\n      <div className=\"guild-header\">\n        <div className=\"guild-header-text\">\n          <span>서버 목록</span>\n        </div>\n      </div>\n      <div className=\"guild-subtitle\">\n        아이콘을 편집할 서버를 선택해주세요\n      </div>\n      {\n        guilds.map(guild => (\n          <div key={guild.id}>\n            <div className=\"guild-separator\"></div>\n            <Link to={`/icon/${guild.id}`} className=\"guild-item\">\n              <img className=\"guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n              <div className=\"guild-name\">{ guild.name }</div>\n              <svg className={`guild-approved-icon ${guild.hasPermission ? \"yes\" : \"no\"}`} data-tip data-for=\"guild-permission-tooltip\">\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${guild.hasPermission ? \"approve\" : \"cancel\"}.svg#icon`} />\n              </svg>\n              <ReactTooltip id=\"guild-permission-tooltip\" place=\"right\" type=\"dark\" effect=\"solid\">\n                <span>{ guild.hasPermission ? \"아이콘을 편집할 수 있는 서버입니다\" : \"아이콘 편집 권한이 없습니다\"}</span>\n              </ReactTooltip>\n              <div className=\"guild-enter-icon-container\">\n                <svg className=\"guild-enter-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/right-arrow.svg#icon`} />\n                </svg>\n              </div>\n            </Link>\n          </div>\n        ))\n      }\n      <div className=\"guild-footer\">\n        - 서버가 표시되지 않나요? 샴고양이를 사용하는 서버에서 아무 메시지나 보낸 다음 다시 확인해보세요!\n      </div>\n    </div>\n  );\n};\n\nexport default GuildList;\n","import \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default NotFound;\n","export const LOGOUT = \"/logout\";\nexport const USER = \"/user\";\nexport const GUILDS = \"/guilds\";\nexport const ICON = \"/icon\";\nexport const ICONS = \"/icons\";\nexport const DIRECTORY = \"/directory\";\nexport const DIRECTORIES = \"/directories\";\n","import React, { useCallback } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nimport { RootState } from \"../redux/reducers\";\nimport * as URL from \"~/api/const/url\";\nimport Guild from \"~/api/type/Guild\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport Icon from \"~/api/type/Icon\";\n\nimport \"./IconHeaderMenu.css\";\n\nconst IconHeaderMenu: React.FC<{\n  icons: Icon[] | null;\n  iconGroups: IconGroup[] | null;\n  iconGroup: IconGroup | null;\n  guild: Guild;\n  hasPermission: boolean;\n  openDropzone: () => void;\n  forceUpdate: React.DispatchWithoutAction;\n}> = ({ icons, iconGroups, guild, iconGroup, hasPermission, openDropzone, forceUpdate }) => {\n  const checkedState = useSelector((state: RootState) => state.icon);\n\n  const createFolder = useCallback(() => {\n    const formData = new FormData();\n    formData.append(\"guildID\", guild.id);\n\n    fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}`, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: formData\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast(\"📁 폴더를 추가했습니다!\");\n      forceUpdate();\n    }).catch(err => {\n      toast.error(() => <div>❌ 새 폴더 생성에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [guild, forceUpdate]);\n\n  const removeSelected = () => {\n    if (!iconGroups || !icons) return;\n\n    const selectedGroups = iconGroups.filter(group => checkedState[group.id].checked);\n    const selectedIcons = icons.filter(icon => checkedState[icon.id].checked);\n\n    if (selectedGroups.length <= 0 && selectedIcons.length <= 0) return;\n\n    const removeGroups = fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        directories: selectedGroups.map(iconGroup => iconGroup.id),\n        guildID: guild.id,\n      })\n    });\n\n    const removeIcons = fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        icons: selectedIcons.map(icon => icon.id),\n        guildID: guild.id,\n      })\n    });\n\n    Promise.all([removeGroups, removeIcons]).then(([res1, res2]) => {\n      if (!res1.ok || !res2.ok) throw new Error();\n\n      const removed: string[] = [];\n      if (selectedGroups.length > 0) removed.push(`${selectedGroups.length}개의 그룹`);\n      if (selectedIcons.length > 0) removed.push(`${selectedIcons.length}개의 아이콘`);\n\n      toast.success(`${removed.join(\" 및 \")}을 삭제했습니다!`)\n      forceUpdate();\n    }).catch(() => {\n      toast(\"❌ 아이콘/폴더 삭제에 실패했습니다.\")\n    });\n  };\n\n  return <div className=\"icon-menu-container\">\n    <div className=\"icon-menu-left\">\n      <Link to={iconGroup ? `/icon/${guild.id}` : \"/icon\"} className=\"icon-menu-item icon-back-button-container\">\n        <svg className=\"icon-arrow-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/left-arrow.svg#icon`} />\n        </svg>\n      </Link>\n      <img className=\"icon-guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n      <div className=\"icon-guild-title\">\n        <span>{ guild.name }</span>\n        {\n          iconGroup &&\n          <div className=\"icon-group-title\">\n            <span className=\"icon-group-separator\"> / </span>\n            <svg className=\"icon-group-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n            </svg>\n            <span>{ iconGroup.name }</span>\n          </div>\n        }\n      </div>\n    </div>\n    {\n      hasPermission &&\n      <div className=\"icon-menu-right\">\n        {\n          !iconGroup &&\n          <div className=\"icon-menu-item icon-add-folder-btn\" onClick={createFolder} data-tip data-for=\"icon-menu-add-folder-tooltip\">\n            <svg className=\"icon-menu-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add-folder.svg#icon`} />\n            </svg>\n            <ReactTooltip id=\"icon-menu-add-folder-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n              <span>아이콘 그룹 추가</span>\n            </ReactTooltip>\n          </div>\n        }\n        <div className=\"icon-menu-item icon-remove-btn\" onClick={removeSelected} data-tip data-for=\"icon-menu-remove-tooltip\">\n          <svg className=\"icon-menu-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/trash.svg#icon`} />\n          </svg>\n          <ReactTooltip id=\"icon-menu-remove-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n            <span>선택된 항목들 삭제</span>\n          </ReactTooltip>\n        </div>\n        <div className=\"icon-menu-item\" onClick={openDropzone}>\n          <svg className=\"icon-upload-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/upload.svg#icon`} />\n          </svg>\n          <span className=\"icon-upload-text\">업로드</span>\n        </div>\n      </div>\n    }\n  </div>\n}\n\nexport default IconHeaderMenu;\n","import \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllIcons, unselectAllIcons } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst MasterCheckbox: React.FC = () => {\n  const icons = useSelector((state: RootState) => state.icon);\n  const dispatch = useDispatch();\n  const [allChecked, setAllChecked] = useState(false);\n\n  useEffect(() => {\n    setAllChecked(Object.values(icons).every(icon => icon.checked))\n  }, [icons])\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (allChecked) {\n      dispatch(unselectAllIcons());\n    } else {\n      dispatch(selectAllIcons());\n    }\n  }}>\n    <Checkbox color=\"danger\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={allChecked} readOnly />\n  </div>\n}\n\nexport default MasterCheckbox;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleIconChecked } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst ItemCheckbox: React.FC<{\n  id: string;\n}> = ({ id }) => {\n  const icon = useSelector((state: RootState) => state.icon[id]);\n  const dispatch = useDispatch();\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(toggleIconChecked(id));\n  }}>\n    <Checkbox color=\"danger\" animation=\"jelly\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      style={{ pointerEvents: \"none\" }}\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={Boolean(icon && icon.checked)} readOnly={true}\n    />\n  </div>\n}\n\nexport default ItemCheckbox;\n","import React, { useCallback, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./NameInput.css\";\n\nconst NameInput: React.FC<{\n  name: string;\n  onUpdate: (newName: string) => any;\n}> = ({ name, onUpdate }) => {\n  const [editing, setEditing] = useState(false);\n\n  const updateName = useCallback((newName: string) => {\n    if (newName !== name) {\n      onUpdate(newName);\n    }\n    setEditing(false);\n  }, [name, onUpdate]);\n\n  return editing\n    ? <>\n        <input type=\"text\" maxLength={10}\n          onBlur={e => updateName(e.target.value)}\n          onClick={e => {\n            e.stopPropagation();\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\n              updateName(e.currentTarget.value);\n            }\n          }}\n          defaultValue={name} autoFocus={true}\n          className=\"icon-item-name editing\" />\n        <svg key={1} className=\"icon-item-icon icon-edit-finish-icon\" onClick={e => {\n          e.stopPropagation();\n          e.preventDefault();\n        }}>\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/approve.svg#icon`} />\n        </svg>\n      </>\n    : <>\n      <span className=\"icon-item-name\">{name}</span>\n      <svg key={2} className=\"icon-item-icon icon-edit-icon\" onClick={e => {\n        e.stopPropagation();\n        e.preventDefault();\n        setEditing(true);\n      }} data-tip data-for=\"icon-edit-tooltip\">\n        <use xlinkHref={`${process.env.PUBLIC_URL}/icons/edit.svg#icon`} />\n      </svg>\n      <ReactTooltip id=\"icon-edit-tooltip\" place=\"right\" type=\"light\" effect=\"solid\">\n        <span>이름 변경하기</span>\n      </ReactTooltip>\n    </>;\n};\n\nexport default NameInput;\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { ReactSweetAlert } from \"sweetalert2-react-content\";\n\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport User from \"~/api/type/User\";\n\nimport \"./IconChat.css\";\n\nconst IconChat: React.FC<{\n  user: User;\n  icon: Icon;\n  iconGroup: IconGroup | null;\n  modal: typeof Swal & ReactSweetAlert;\n}> = ({ user, icon, iconGroup, modal }) => {\n  return <div className=\"chat-container\" onClick={() => {\n    modal.clickConfirm();\n  }}>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={user.avatarURL} />\n      <div className=\"chat-contents\">\n        <span className=\"chat-author-name\">{ user.username }</span>\n        <span>~{ iconGroup ? `${iconGroup.name} ${icon.name}` : icon.name }</span>\n      </div>\n    </div>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n      <div className=\"chat-contents\">\n        <div className=\"chat-name-wrapper\">\n          <span className=\"chat-author-name\">샴고양이</span>\n          <div className=\"chat-bot-tag\">\n            <svg style={{marginLeft: \"-4px\"}} width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\"><path d=\"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\" fill=\"currentColor\"></path></svg>\n            <span>봇</span>\n          </div>\n        </div>\n        <div className=\"chat-embed-wrapper\">\n          <div className=\"chat-embed-author\">\n            <img className=\"chat-embed-author-image\" src={user.avatarURL} />\n            <span className=\"chat-embed-author-name\">{ user.username }</span>\n          </div>\n          <img className=\"chat-icon-image\" src={icon.url} />\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default IconChat;\n","import \"./AuthNeeded.css\";\n\nconst AuthNeeded = () => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-header\">로그인이 필요합니다</div>\n      <div className=\"auth-login-button\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"auth-discord-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n        </svg>\n        <div className=\"auth-login-separator\"></div>\n        <span>디스코드로 로그인하기</span>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthNeeded;\n","import React, { useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GuildList from \"./GuildList\";\nimport IconList from \"./IconList\";\nimport AuthNeeded from \"./AuthNeeded\";\nimport Loading from \"../component/Loading\";\nimport { RootState } from \"../redux/reducers\";\nimport { setGuilds } from \"../redux/actions\";\nimport Guild from \"~/api/type/Guild\";\n\nimport \"./Icon.css\";\n\nconst Icon: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/guilds`, {\n      credentials: \"include\"\n    }).then(res => res.json())\n      .then(guilds => dispatch(setGuilds(guilds as Guild[])))\n  }, [dispatch]);\n\n  if (!user) return <></>;\n  if (!user.id) return <AuthNeeded />;\n  if (!guilds) return <Loading />;\n\n  return (<Switch>\n    <Route path={[\n      `${match.path}/:guildID/:groupID`,\n      `${match.path}/:guildID`\n    ]}>\n      <IconList />\n    </Route>\n    <Route path={match.path}>\n      <GuildList />\n    </Route>\n  </Switch>)\n}\n\nexport default Icon;\n","import \"./CommandItem.css\";\n\nconst CommandItem: React.FC<{\n  command: {\n    CMD: string;\n    DESC: string;\n  }\n}> = ({ command, children }) => {\n  return <div className=\"command-item\">\n    <div className=\"command-header\">\n      <div className=\"command-title\">{ command.CMD }</div>\n      <div className=\"command-subtitle\">{ command.DESC }</div>\n    </div>\n    {children}\n  </div>\n}\n\nexport default CommandItem;\n","// Dedent from string, useful for multiline string template\nexport const dedent = (callSite: TemplateStringsArray, ...args: any[]) => {\n  const format = (str: string) => {\n    const strSplitted = str.split(\"\\n\");\n\n    return strSplitted.map(substr => substr.trim())\n      .filter(substr => substr.length > 0)\n      .join(\"\\n\");\n  };\n\n  if (typeof callSite === \"string\") {\n    return format(callSite);\n  }\n\n  const output = callSite\n    .slice(0, args.length + 1)\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    .map((text, i) => (i === 0 ? \"\" : args[i - 1]) + text)\n    .join(\"\");\n\n  return format(output);\n};\n\nexport const isBetween = (val: number, min: number, max: number) => val >= min && val <= max;\nexport const clamp = (val: number, min: number, max: number) => Math.min(Math.max(val, min), max);\n\nexport const getRandom = <T>(arr: T[]): T => arr[Math.floor((Math.random() * arr.length))];\n\nexport const shuffle = <T>(arr: T[]) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nexport const toValidUrl = (url: string) => {\n  if (url.startsWith(\"//\")) return `https:${url}`;\n  return url;\n};\n\nexport const rgbaToHex = (val: string) => {\n  const regex = /^rgba?\\((\\d{1,3})\\s?,\\s?(\\d{1,3})\\s?,\\s?(\\d{1,3})(?:,\\s?\\d.?\\d*)?\\s?\\)$/;\n  const matched = regex.exec(val);\n  if (!matched) return val;\n\n  const rgb = [matched[1], matched[2], matched[3]];\n\n  return rgb.map(color => clamp(parseFloat(color), 0, 255)) as [number, number, number];\n};\n\nexport default dedent;\n","import type { Guild } from \"discord.js\";\nimport Josa from \"josa-js\";\n\nimport type Siamese from \"~/Siamese\";\nimport { dedent } from \"~/util/helper\";\nimport { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const PING = {\n  CMD: \"핑\",\n  DESC: \"퐁을 대답한다냥!\",\n  MSG: (ping: string, bot: Siamese, guild: Guild, uptime: Date) => dedent`\n    퐁이다냥! 현재 샴고양이 웹소켓 핑 평균은 ${strong(`${ping}ms`)}다냥!\n    ${bot.user.toString()}${Josa.c(bot.getDisplayName(guild), \"은/는\")} ${uptime.getUTCHours()}시간 ${uptime.getUTCMinutes()}분 ${uptime.getUTCSeconds()}초동안 일하고 있다냥!`\n} as const;\n\nexport const INVITE = {\n  CMD: \"초대\",\n  DESC: \"봇을 초대할 수 있는 링크를 준다냥!\",\n  TITLE: (botName: string) => `${botName}의 초대링크다냥!`,\n  MSG: (botName: string) => `${EMOJI.LINK} 클릭해서 ${botName} 초대하기`\n} as const;\n\nexport const HELP = {\n  CMD: \"도움\",\n  DESC: \"명령어 목록을 보여준다냥!\",\n  MENU_TIME: 30\n} as const;\n\nexport const DEV_SERVER = {\n  CMD: \"개발서버\",\n  DESC: \"개발 서버로 올 수 있는 초대 링크를 준다냥!\",\n  INVITE_LINK: (bot: Siamese, inviteLink: string) => dedent`\n    ${bot.user.toString()}의 개발 서버 초대 링크다냥!\n    와서 사용/개발에 관한 질문, 기능요청, 버그제보 등을 할 수 있다냥!\n    ${inviteLink}`\n} as const;\n\nexport const INFO = {\n  CMD: \"정보\",\n  DESC: \"봇과 관련된 정보를 볼 수 있다냥!\",\n  GUILD_CNT: (guildCnt: number) => `${EMOJI.UP_TRIANGLE} 서버 수 - ${guildCnt}개`,\n  USER_CNT: (userCnt: number) => `${EMOJI.PEOPLE} 사용자 수 - ${userCnt}명`,\n  DEV_SERVER: (server: Guild, inviteLink: string) => `${EMOJI.ENVELOPE_WITH_ARROW} [${server.name}](${inviteLink})`,\n  GITHUB_ICON_URL: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n} as const;\n","import { Util } from \"discord.js\";\n\nexport const strong = (word: string) => `**${word.trim().replace(/^[*]{2,}|[*]{2,}$/gm, \"\")}**`;\nexport const underline = (word: string) => `__${word.trim().replace(/^[_]{2,}|[_]{2,}$/gm, \"\")}__`;\nexport const italics = (word: string) => `*${word.trim().replace(/^\\*{1}[^*]*\\*{1}$/gm, word.trim().slice(1, -1))}*`;\nexport const strike = (word: string) => `~~${word.trim().replace(/[~]{2}/gm, \"\")}~~`;\nexport const code = (word: string) => `\\`${Util.escapeMarkdown(word.trim().replace(/^[`]{1,}|[`]{1,}$/gm, \"\"))}\\``;\nexport const block = (word: string, lang = \"\") => `\\`\\`\\`${Util.escapeMarkdown(lang.trim())}\\n${Util.escapeMarkdown(word.trim())}\\`\\`\\``;\nexport const blockMd = (word: string, lang = \"\") => `\\`\\`\\`${lang}\\n${word}\\`\\`\\``;\nexport const link = (word: string, url: string) => `[${word}](${url})`;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport * as BOT from \"~/const/command/bot\";\n\nconst Bot = () => {\n  return <>\n    <CommandItem command={BOT.PING}>\n      <div>테스트용 명령어입니다.</div>\n      <div>추가적으로 업타임을 알 수 있습니다.</div>\n    </CommandItem>\n  </>\n}\n\nexport default Bot;\n","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Bot from \"./command/Bot\";\nimport NotFound from \"./NotFound\";\nimport \"./Command.css\";\n\nconst Command = () => {\n  return (\n    <div className=\"command-container\">\n      <Switch>\n        <Route path=\"/command/bot\" component={Bot} />\n        <Route path=\"/command/*\" component={NotFound} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default Command;\n","import \"./Setting.css\";\n\nconst Setting = () => (\n  <div className=\"not-found-container\">\n    <svg className=\"not-found-icon\">\n      <use xlinkHref={`${process.env.PUBLIC_URL}/icons/warn.svg#icon`} />\n    </svg>\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default Setting;\n","import { useEffect } from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport Sidebar from \"./component/Sidebar\";\nimport Header from \"./component/Header\";\n\nimport Home from \"./pages/Home\";\nimport Icon from \"./pages/Icon\";\nimport Command from \"./pages/Command\";\nimport Setting from \"./pages/Setting\";\nimport NotFound from \"./pages/NotFound\";\n\nimport { setUser } from \"./redux/actions\";\n\nimport User from \"~/api/type/User\";\n\nimport \"./Main.css\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/user`, {\n      credentials: \"include\"\n    }).then(user => user.json())\n      .then(user => dispatch(setUser(user as User)))\n  }, [dispatch]);\n\n  return (\n    <HashRouter>\n      <div className=\"main-container\">\n        <Header />\n        <div className=\"contents-container\">\n          <Sidebar />\n          <div className=\"page-container\">\n            <Switch>\n              <Route path=\"/icon\" component={Icon} />\n              <Route path=\"/command\" component={Command} />\n              <Route path=\"/setting\" component={Setting} />\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_GUILDS } from \"../actionTypes\";\nimport { setGuilds } from \"../actions\";\nimport Guild from \"~/api/type/Guild\";\n\nconst defaultState: Guild[] = [];\n\ntype GuildAction = ReturnType<typeof setGuilds>;\n\nexport default (state = defaultState, action: GuildAction) => {\n  switch (action.type) {\n    case SET_GUILDS: {\n      return [\n        ...action.payload\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_HAMBURGER } from \"../actionTypes\";\nimport { toggleHamburger } from \"../actions\";\n\nconst defaultState = {\n  open: false\n};\n\ntype HamburgerAction = ReturnType<typeof toggleHamburger>;\n\nexport default (state = defaultState, action: HamburgerAction) => {\n  switch (action.type) {\n    case TOGGLE_HAMBURGER: {\n      return {\n        ...state,\n        open: !state.open\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SELECT_ALL_ICON, SET_ICONS, TOGGLE_ICON, UNSELECT_ALL_ICON } from \"../actionTypes\";\nimport { toggleIconChecked, setCheckedIcons, selectAllIcons, unselectAllIcons } from \"../actions\";\n\nconst defaultState: {\n  [id: string]: {\n    checked: boolean;\n  };\n} = {};\n\ntype IconAction =\n  | ReturnType<typeof toggleIconChecked>\n  | ReturnType<typeof setCheckedIcons>\n  | ReturnType<typeof selectAllIcons>\n  | ReturnType<typeof unselectAllIcons>;\n\nexport default (state = defaultState, action: IconAction) => {\n  switch (action.type) {\n    case TOGGLE_ICON: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          checked: state[id] ? !state[id].checked : true\n        }\n      };\n    }\n    case SET_ICONS: {\n      const ids = action.payload;\n      return ids.reduce((state, id) => ({\n        ...state,\n        [id]: { checked: false }\n      }), {});\n    }\n    case SELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: true }\n        }\n      }, state);\n    }\n    case UNSELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: false }\n        }\n      }, state);\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport guilds from \"./guilds\";\nimport hamburger from \"./hamburger\";\nimport icon from \"./icon\";\n\nconst rootReducer = combineReducers({\n  user,\n  guilds,\n  hamburger,\n  icon\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { SET_USER } from \"../actionTypes\";\nimport { setUser } from \"../actions\";\nimport User from \"~/api/type/User\";\n\nconst defaultState: User | null = null;\n\ntype UserAction = ReturnType<typeof setUser>;\n\nexport default (state: User | null = defaultState, action: UserAction) => {\n  switch (action.type) {\n    case SET_USER: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\";\n\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}