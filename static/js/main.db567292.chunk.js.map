{"version":3,"sources":["pages/IconList.tsx","component/Login.tsx","component/Profile.tsx","redux/actionTypes.ts","redux/actions.ts","component/SubcategoryLink.tsx","const.ts","../../src/const/emoji.ts","../../src/const/category.ts","component/Sidebar.tsx","pages/Home.tsx","pages/GuildList.tsx","pages/NotFound.tsx","../../src/api/const/url.ts","component/IconHeaderMenu.tsx","component/Loading.tsx","component/MasterCheckbox.tsx","component/ItemCheckbox.tsx","component/NameInput.tsx","component/IconChat.tsx","pages/AuthNeeded.tsx","pages/Icon.tsx","component/command/CommandItem.tsx","component/command/ChatBubble.tsx","component/command/ChatContainer.tsx","component/command/CommandDesc.tsx","component/embed/EmbedHeader.tsx","component/embed/EmbedFooter.tsx","../../src/util/helper.ts","../../src/const/mahjong.ts","../../src/util/markdown.ts","../../src/const/command/bot.ts","pages/command/Bot.tsx","component/embed/EmbedMenu.tsx","component/command/Mention.tsx","../../src/const/command/utility.ts","pages/command/Utility.tsx","component/embed/EmbedField.tsx","component/command/Warn.tsx","../../src/const/command/search.ts","pages/command/Search.tsx","../../src/const/command/history.ts","pages/command/History.tsx","../../src/const/command/steam.ts","pages/command/Steam.tsx","component/command/CommandInfo.tsx","../../src/const/command/icon.ts","pages/command/Icon.tsx","../../src/const/command/setting.ts","pages/command/Setting.tsx","../../src/const/color.ts","../../src/const/discord.ts","../../src/core/game/PlayingCard.ts","../../src/const/command/minigame.ts","pages/command/Minigame.tsx","../../src/const/command/game.ts","pages/command/Game.tsx","pages/Command.tsx","Main.tsx","reportWebVitals.js","redux/reducers/guilds.ts","redux/reducers/hamburger.ts","redux/reducers/icon.ts","redux/reducers/index.ts","redux/reducers/user.ts","index.tsx"],"names":["ItemType","Login","className","onClick","window","location","href","process","xlinkHref","Profile","user","logout","src","avatarURL","tag","SET_USER","SET_GUILDS","TOGGLE_HAMBURGER","TOGGLE_ICON","SET_ICONS","SELECT_ALL_ICON","UNSELECT_ALL_ICON","toggleHamburger","type","ACTION","setCheckedIcons","ids","payload","Subcategory","to","children","dispatch","useDispatch","useLocation","activeClassName","isActive","pathname","startsWith","BOT_INVITE_LINK","SMALL_BLUE_DIAMOND","SMALL_ORANGE_DIAMOND","SMALL_WHITE_SQUARE","MIDDLE_DOT","DICE","ARROW_LEFT","ARROW_RIGHT","CROSS","STOPWATCH","DOLLAR","CIRCLE","HEART","VIDEO_GAME","JOYSTICK","FILE","PICTURE","MEMO","LINK","TROPHY","BOT","ID","NAME","DESC","EMOJI","UTILITY","SEARCH","HISTORY","STEAM","ICON","SETTING","MINIGAME","GAME","Sidebar","useSelector","state","hamburger","routes","useMemo","path","name","icon","active","subcategories","guilds","map","guild","id","iconURL","Object","values","CATEGORY","category","containerClass","classes","open","push","join","alt","route","target","rel","Home","GuildList","subtitle","taskName","hasPermission","hasSiamese","data-tip","data-for","place","effect","NotFound","ICONS","DIRECTORY","DIRECTORIES","IconHeaderMenu","icons","iconGroups","iconGroup","openDropzone","forceUpdate","checkedState","createFolder","useCallback","formData","FormData","append","fetch","URL","method","credentials","body","then","res","a","status","Error","text","toast","catch","err","error","message","toString","selectedGroups","filter","group","checked","selectedIcons","length","removeGroups","headers","JSON","stringify","directories","guildID","removeIcons","Promise","all","res1","res2","ok","removed","success","Loading","MasterCheckbox","useState","allChecked","setAllChecked","useEffect","iconList","every","onClickCapture","e","preventDefault","stopPropagation","color","bigger","shape","variant","readOnly","ItemCheckbox","toggleIconChecked","animation","style","pointerEvents","Boolean","NameInput","onUpdate","editing","setEditing","updateName","newName","maxLength","onBlur","value","onKeyDown","key","currentTarget","defaultValue","autoFocus","IconChat","modal","clickConfirm","username","marginLeft","width","height","viewBox","d","fill","url","IconList","useParams","groupID","setIconGroups","setIcons","setIconGroup","find","useReducer","x","iconFetcher","withReactContent","Swal","json","images","item","groups","selected","showIcon","fire","html","heightAuto","prevName","replace","endPoint","itemName","GROUP","useDropzone","accept","disabled","noClick","noKeyboard","maxSize","onDrop","files","forEach","file","uploadingToast","autoClose","update","render","TYPE","SUCCESS","ERROR","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","author","iconCount","Date","createdTimestamp","toLocaleDateString","position","closeOnClick","AuthNeeded","Icon","match","useRouteMatch","setGuilds","CommandItem","command","parent","voiceOnly","commandName","CMD","ALIAS","alias","USAGE","ChatBubble","avatar","ChatContainer","CommandDesc","EmbedHeader","EmbedFooter","image","dedent","callSite","args","format","str","split","substr","trim","output","slice","i","range","end","Array","_","idx","toEmoji","TILE_TYPE","WIND","BODY_TYPE","KANG_TYPE","ACTION_TYPE","strong","word","code","block","lang","PING","MSG","ping","botName","botDisplayName","uptime","Josa","c","FORMAT","DAYS","val","HOURS","MINUTES","SECONDS","INVITE","TITLE","HELP","WEB_CATEGORY_INVITE_LINK","WEB_PRIVACY_LINK","INFO","GUILD_CNT","guildCnt","USER_CNT","userCnt","DEV_SERVER","serverName","inviteLink","GITHUB_ICON_URL","Bot","siamese","scrollTo","EmbedMenu","items","emoji","count","Mention","DESC_OPTION","USAGE_OPTION","MIN","MAX","DEFAULT","userName","num","maxNum","numStr","ARG_INCORRECT","min","max","CHOOSE","ARG_NOT_SUFFICIENT","prefix","SAY","TARGET","SLASH_PLACEHOLDER","VOTE","CONVERSATION_TIME","OPTIONS_TITLE","OPTIONS_DESC","OPTIONS_FOOTER","DURATION_TITLE","DURATION_DESC","DURATION_FOOTER","DURATION_MIN","DURATION_MAX","HELP_DESC","RESULT_DESC","votes","RESULT_DESC_TIE","options","vote","DEFAULT_TITLE","displayName","title","FOOTER","time","COUNT","cnt","RANDOM_LABEL","RANDOM_SYMBOL","RANDOM_VOTE_MSG","index","STOP_LABEL","STOP_SYMBOL","OPTIONS_BETWEEN_2_9","DURATION_SHOULD_CLAMPED","ONLY_AUTHOR_CAN_STOP","AVATAR","TRANSLATE","LANG_DESC","LANG_OPTION","FOOTER_FORMAT","orig","DEFAULT_LANG","LANGS","NO_CONTENT","LIST","ENTRY_PER_PAGE","ENTRY","MENU_TIME","SPELLING","USAGE_DESC","API_URL","COMMON_PARAMS","where","color_blindness","RESULT_TITLE_OKAY","RESULT_TITLE","styles","red","close","yellow","green","blue","RESULT_FOOTER","Utility","keys","EmbedField","Warn","IMAGE","SEARCH_URL","SEARCH_PARAMS","query","isSafeSearch","q","tbm","nfpr","safe","pws","gl","gws_rd","FAKE_HEADER","YOUTUBE","MAX_RESULTS","VIDEO_URL","videoId","KIN","SERVICE_NAME","ITEMS_PER_PAGE","display","sort","CHEAPEST","sortBy","pageSize","pageNumber","REDIRECT_URL","GAME_SALE_DESC","price","originalPrice","savings","metaScore","metaLink","link","GAME_NO_SALE_DESC","METASCORE_IMG","METASCORE_COLOR","score","REVIEW_TEXT","REVIEW_FOOTER","percent","REVIEW_ICON","SHOPPING","PRICE","low","high","PRODUCT_TYPE","1","2","3","4","5","6","7","8","9","10","11","12","PARAMS","STOCK","encodeURIComponent","DOME_STOCK_HEADER_URL","DOME_STOCK_INFO_URL","DOME_SISE_URL","WORLD_BASIC_URL","WORLD_SISE_URL","TIMES","CURRENCY","DOME_IMAGE","WORLD_IMAGE","isStock","DOME_THUMB","WORLD_THUMB","COIN","MARKET_KEY","MARKET_URL","TICKER_URL","CHART_ID_URL","CHART_IMAGE_URL","COIN_IMAGE_URL","HIGH_PRICE","LOW_PRICE","TRADE_VOLUME_24H","TRADE_PRICE_24H","HIGHEST_52_WEEK_PRICE","LOWEST_52_WEEK_PRICE","EXCHANGE","CACHE_KEY","DEFAULT_UNIT","CHANGE","RISE","FALL","WRONG_FORM","WRONG_UNIT","unit","r","Search","DATE","date","getFullYear","getMonth","getDate","FORCES","DISCHARGE","CHECK","SHORTEN_AFTER_THIS_DATE","FORCE_INFO","육군","duration","maxShortenMonth","의경","해병","해군","해경","의방","공군","공익","DETAILED","PROGRESS_EMOJI","repeat","FORCE_DETAIL","force","SHORTEN_DATE","days","JOIN_DATE","DISCHARGE_DATE","DAYS_PROGRESSED","DAYS_LEFT","PERCENTAGE","toFixed","ADD","NAME_MAX_LENGTH","PROMPT_TIME","NAME_ALREADY_EXISTS","DIALOGUE_JOIN_DATE_TITLE","DIALOGUE_JOIN_DATE_DESC","DIALOGUE_JOIN_DATE_EXAMPLE","DIALOGUE_FORCES_TITLE","DIALOGUE_FORCES_EXAMPLE","info","joinDate","REMOVE","NOT_FOUND","EMPTY_RESULT","NAME_TOO_LONG","PROVIDE_NAME_TO_ADD","PROVIDE_NAME_TO_REMOVE","JOIN_DATE_NOT_FORMATTED","FORCES_NOT_LISTED","History","wordBreak","COMMUNITY_ID_DESC","SEARCH_BY_COMMUNITY_ID_URL","SEARCH_BY_GAME_NAME_URL","SUMMARY_URL","BAN_URL","RECENT_GAME_URL","LEVEL_URL","FRIEND_URL","OWNING_GAME_URL","CURRENT_PLAYERS_URL","ICON_URL","PROFILE_GAME_URL","baseUrl","GAME_IMG_URL","appid","STORE_URL","SEARCH_BY_COMMUNITY_ID_PARAMS","env","vanityurl","STEAM_API_KEY","SEARCH_BY_GAME_NAME_PARAMS","term","l","cc","STEAM_IDS_PARAMS","steamids","RECENT_GAME_PARAMS","steamid","STEAM_ID_PARAMS","GAME_ID_PARAMS","OWNING_GAME_PARAMS","include_appinfo","include_played_free_games","FRIEND_PARAMS","relationship","PLAYTIME","minute","PLAYTIME_SHORT","USER_NOT_FOUND","EMPTY_GAMES","PROFILE","PERSONA_STATE","0","PLAYING_STATE","game","REGISTERED","timestamp","getUTCFullYear","getUTCMonth","LAST_LOGOFF","dateDiff","getTime","diff","year","Math","floor","month","week","getUTCDate","day","hour","getUTCHours","getUTCMinutes","last","flag","FIELD_DETAIL","FIELD_BAN","FIELD_RECENT_GAME","BAN_COMMUNITY","BAN_VAC","BAN_GAME","BAN_ECONOMY","LEVEL","level","FRIENDS","friends","GAMES","gamesCount","GAME_DESC","playtime_2weeks","RANDOM","LIBRARY","GAMES_PER_PAGE","MAX_PAGES","PLAYERS","CURRENT","players","TOP","FORMAT_INFO","GAME_TITLE","GAME_STATISTICS","Steam","SLASH_DESC","MANAGE","guildName","REPLACE_TITLE","TUTORIAL_URL","PROVIDE_IMAGES","IMAGE_TOO_MANY","GROUP_NAME_TOO_LONG","ICON_NAME_TOO_LONG","SLASH_USAGE_ICON","SLASH_USAGE_GROUP","USAGE_DESC_ICON","USAGE_DESC_GROUP","ITEMS_NAME","ITEM_PER_PAGE","NO_GROUP","ROLE","SLASH_USAGE","DESC_USAGE","SUCCESS_WITH_ROLE","roleMention","SUCCESS_WITHOUT_ROLE","PROVIDE_EXACTLY_ONE_ROLE","marginTop","fontSize","ROLE_RESTRICT","ADDED","bot","roles","getDisplayName","role","CAN_BE_USED_FOR_EVERYONE","ACTIVE_ROLES","REMOVED","MENTION_ROLE","NO_ROLES_TO_REMOVE","Setting","BLACK","BUTTON_STYLE","MAN","PIN","SOU","KAZE","SANGEN","CardSymbol","WIND_NAME","SANGEN_NAME","CARD_EMOJI","SPADE","CLUB","DIAMOND","JOKER","OTHELLO","USAGE_SLASH","DESC_SLASH","JOIN_MSG_TITLE","TURN_HEADER","playerIdx","DISC","FIELD_TITLE","FIELD_DESC","whiteCount","blackCount","DIRECTIONS","DISC_ACTIVE","CANDIDATE_MARKERS","YACHT","ALL_LOCKED","NAMES","SYMBOL","ROLL","EYE","NEXT_TURN","GG","LABEL","rerollLeft","CONNECT4","COLOR","TICTACTOE","MARK","STYLE","ONECARD","TAKE_PENALTY","added","cardCount","HELP_TITLE","desc","HELP_SPECIAL_TITLE","HELP_SPECIAL_DESC","HELP_DEFEAT_TITLE","HELP_DEFEAT_DESC","INITIAL_CARD","CARD_LEFT","player","CHANGE_HEADER","WINNER_HEADER","winner","lastCard","getEmoji","getName","DEFEATED","SKIP","LADDER","ARG_NOT_IN_RANGE","NUMBER_URL","SHOW_RESULT","RESULT_SENT_ALREADY","CONNECT5","MAHJONG_EMOJI","RIICHI","DIR_INDEX_MAP","PIECE","CURSOR","FFXIV","ITEM","ENTRIES_ENDPOINT","ITEM_ENDPOINT","subURL","HQ_ITEM_FOOTER","HQ_ITEM_IMAGE","LOG","CHAR_SEARCH_ENDPOINT","REQUEST_HEADERS","referer","CHAR_TYPE","PERSON_ICON_URL","ZONE_THUMB_URL","ZONE_INFO_URL","zoneID","charID","ZONE_INFO_FOOTER","artifact","legendary","astounding","magnificent","epic","rare","uncommon","common","HEARTHSTONE","CARD","ENDPOINT","DEFAULT_PARAMS","locale","RARITY_COLOR","Command","component","Minigame","Game","Main","setUser","pageContainerClass","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","rootReducer","combineReducers","action","reduce","newState","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"ihCA0BKA,E,sFCTUC,EAfD,WACZ,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,mBAAmBC,QAAS,WACzCC,OAAOC,SAASC,KAAhB,UAA0BC,+BAA1B,kBADF,UAGE,qBAAKL,UAAU,mBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,6BAEhB,4DCUOE,G,MAjB2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrCC,EAAS,WACbP,OAAOC,SAASC,KAAhB,UAA0BC,+BAA1B,YAGF,OACE,sBAAKL,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBACbC,QAASQ,EADX,sCAGA,qBAAKT,UAAU,iBAAiBU,IAAKF,EAAKG,YAC1C,sBAAMX,UAAU,mBAAhB,SAAqCQ,EAAKI,MAC1C,qBAAKZ,UAAU,iBAAiBC,QAASQ,EAAzC,2CChBOI,EAAW,WAEXC,EAAa,aAEbC,EAAmB,mBAEnBC,EAAc,cACdC,EAAY,WACZC,EAAkB,kBAClBC,EAAoB,oBCKpBC,EAAkB,iBAAO,CACpCC,KAAMC,IAQKC,EAAkB,SAACC,GAAD,MAAoB,CACjDH,KAAMC,EACNG,QAASD,ICHIE,G,MAZV,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,GAAI3B,EAA0B,EAA1BA,UAAW4B,EAAe,EAAfA,SACfC,EAAWC,cACX3B,EAAW4B,cAEjB,OAAO,cAAC,IAAD,CAASJ,GAAIA,EAAI3B,UAAS,2BAAsBA,GAAwB,IAAMgC,gBAAgB,WACnGC,SAAU,kBAAM9B,EAAS+B,SAASC,WAAWR,IAC7C1B,QAAS,kBAAM4B,EAAST,MAFnB,SAIHQ,MClBOQ,EAAkB,kGCElBC,EAAqB,eACrBC,EAAuB,eAGvBC,EAAqB,eASrBC,EAAa,SACbC,EAAO,eAKPC,EAAa,SACbC,EAAc,SAIdC,EAAQ,SAIRC,EAAY,eAcZC,EAAS,eAOTC,EACL,eADKA,EAEH,eAFGA,EAIN,eAJMA,EAKH,eALGA,EAMJ,SANIA,EAOJ,SAEIC,EACN,SADMA,EAEH,eAaGC,EAAa,eACbC,EAAW,qBAgCXC,EAAO,eAEPC,EAAU,qBACVC,EAAO,eAKPC,EAAO,eAIPC,EAAS,eCtHTC,EAAM,CACjBC,GAAI,MACJC,KAAM,SACNC,KAAM,yGACNC,MD4EiB,gBC1ENC,EAAU,CACrBJ,GAAI,UACJC,KAAM,2BACNC,KAAM,oFACNC,MDXmB,sBCaRE,GAAS,CACpBL,GAAI,SACJC,KAAM,eACNC,KAAM,4IACNC,MDCmC,gBCCxBG,GAAU,CACrBN,GAAI,UACJC,KAAM,eACNC,KAAM,yGACNC,MDiGoB,gBC/FTI,GAAQ,CACnBP,GAAI,QACJC,KAAM,eACNC,KAAM,uGACNC,MDgB8B,gBCdnBK,GAAO,CAClBR,GAAI,OACJC,KAAM,qBACNC,KAAM,iGACNC,MAAOA,GAEIM,GAAU,CACrBT,GAAI,UACJC,KAAM,eACNC,KAAM,qFACNC,MD0CkB,gBCxCPO,GAAW,CACtBV,GAAI,WACJC,KAAM,2BACNC,KAAM,0HACNC,MAAOA,GAEIQ,GAAO,CAClBX,GAAI,OACJC,KAAM,eACNC,KAAM,+IACNC,MAAOA,GCsEMS,I,MApGW,WACxB,IAAM7D,EAAO8D,aAAY,SAACC,GAAD,OAAsBA,EAAM/D,QAC/CgE,EAAYF,aAAY,SAACC,GAAD,OAAsBA,EAAMC,aACpD3C,EAAWC,cACX3B,EAAW4B,cAEX0C,EAAkBC,mBAAQ,uBAAM,CACpC,CACEC,KAAM,IACNC,KAAM,SACNC,KAAM,OACNC,OAA8B,MAAtB3E,EAAS+B,UAEnB,CACEyC,KAAM,QACNC,KAAM,qBACNC,KAAM,UACNC,OAAQ3E,EAAS+B,SAASC,WAAW,SACrC4C,cAAa,OAAEvE,QAAF,IAAEA,GAAF,UAAEA,EAAMwE,cAAR,aAAE,EAAcC,KAAI,SAAAC,GAAK,OACpC,eAAC,EAAD,CAAiBvD,GAAE,gBAAWuD,EAAMC,IAAqBnF,UAAU,aAAnE,UACE,qBAAKA,UAAU,mBAAmBU,IAAMwE,EAAME,QAAUF,EAAME,QAAtB,UAAmC/E,GAAnC,6BACtC6E,EAAMN,OAFqCM,EAAMC,QAMzD,CACER,KAAM,eACNC,KAAM,kCACNC,KAAM,OACNC,OAAQ3E,EAAS+B,SAASC,WAAW,YACrC4C,cAAeM,OAAOC,OAAOC,GAC1BN,KAAI,SAAAO,GAAQ,OAAI,eAAC,EAAD,CAAiB7D,GAAE,mBAAc6D,EAAS/B,IAA1C,UAAmE+B,EAAS5B,MAA5E,IAAoF4B,EAAS9B,OAAxC8B,EAAS/B,WAElF,CAACjD,EAAML,IAEJsF,EAAiBf,mBAAQ,WAC7B,IAAMgB,EAAU,CAAC,qBAGjB,OAFIlB,EAAUmB,MAAMD,EAAQE,KAAK,WAE1BF,EAAQG,KAAK,OACnB,CAACrB,IAEJ,OACE,sBAAKxE,UAAWyF,EAAhB,UACE,sBAAKzF,UAAU,qCAAf,UACE,qBAAKA,UAAU,gBAAgBC,QAAS,kBAAM4B,EAAST,MAAvD,SACE,qBAAKpB,UAAU,qBAAf,SACE,qBAAKM,UACHkE,EAAUmB,KAAV,UACOtF,GADP,oCAEOA,GAFP,mCAMN,sBAAKL,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,8DAEF,qBAAKA,UAAU,kBAAkB8F,IAAI,OAAOpF,IAAG,UAAKL,GAAL,uBAGnD,qBAAKL,UAAU,eAAf,SACGyE,EAAOQ,KAAI,SAACc,GAAD,OACV,sBAAK/F,UAAU,8BAAf,UACE,eAAC,IAAD,CAAS2B,GAAIoE,EAAMpB,KAAM3E,UAAU,oBAAoBgC,gBAAgB,WACrEC,SAAU,kBAAM8D,EAAMjB,QADxB,UAGE,qBAAK9E,UAAU,oBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,kBAAqC0F,EAAMlB,KAA3C,iBAEhB,+BAAOkB,EAAMnB,UAEbmB,EAAMjB,QAAUiB,EAAMhB,gBATwBgB,EAAMnB,WAa5D,sBAAK5E,UAAU,iBAAf,UACI,qBAAKA,UAAU,8BAAf,SACW,MAARQ,EACGA,EAAK2E,GACH,cAAC,EAAD,CAAS3E,KAAMA,IACf,cAAC,EAAD,IACF,+BAGN,qBAAKR,UAAU,8BAAf,SACE,mBAAGgG,OAAO,SAASC,IAAI,aAAa7F,KAAMgC,EAA1C,SACE,sBAAKpC,UAAU,sBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,+BAEhB,oGCvGD6F,I,MAVF,WACX,OACE,sBAAKlG,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAWU,IAAI,yDAC9B,wIACA,gCAAK,mBAAGN,KAAK,gCAAR,gDAAL,0C,SCkDS+F,I,MAtCV,SAAC,GAA+C,IAA7CxE,EAA4C,EAA5CA,GAAIyE,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACxBtB,EAASV,aAAY,SAACC,GAAD,OAAsBA,EAAMS,UAEvD,OACE,sBAAKhF,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,iEAGJ,qBAAKA,UAAU,iBAAf,SAAiCoG,IAE/BpB,EAAOC,KAAI,SAAAC,GAAK,OACd,gCACE,qBAAKlF,UAAU,oBACf,eAAC,IAAD,CAAM2B,GAAE,WAAMA,EAAN,YAAYuD,EAAMC,IAAMnF,UAAU,aAA1C,UACE,qBAAKA,UAAU,aAAaU,IAAMwE,EAAME,QAAUF,EAAME,QAAtB,UAAmC/E,GAAnC,6BAClC,qBAAKL,UAAU,aAAf,SAA8BkF,EAAMN,OACnCM,EAAMqB,YAAc,qBAAKvG,UAAU,oBAAoBU,IAAG,UAAKL,GAAL,iBAC3D,qBAAKL,UAAS,8BAAyBsG,EAAcpB,GAAS,MAAQ,MAAQsB,YAAA,EAASC,WAAA,mCAAsCvB,EAAMC,IAAnI,SACE,qBAAK7E,UAAS,UAAKD,GAAL,kBAAqCiG,EAAcpB,GAAS,UAAY,SAAxE,iBAEhB,cAAC,KAAD,CAAcC,GAAE,mCAA8BD,EAAMC,IAAMuB,MAAM,QAAQrF,KAAK,OAAOsF,OAAO,QAA3F,SACE,+BAAQL,EAAcpB,GAAd,UAA0BmB,EAA1B,mDAAiDA,EAAjD,oDAEV,qBAAKrG,UAAU,6BAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,0CAdZ6E,EAAMC,Y,+GCxBXyB,I,MANE,kBACf,qBAAK5G,UAAU,sBAAf,SACE,qDCAS6G,GAAQ,SACRC,GAAY,aACZC,GAAc,eC4IZC,I,MA5HV,SAAC,GAAuF,IAArFC,EAAoF,EAApFA,MAAOC,EAA6E,EAA7EA,WAAYhC,EAAiE,EAAjEA,MAAOiC,EAA0D,EAA1DA,UAAWb,EAA+C,EAA/CA,cAAec,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAClEC,EAAehD,aAAY,SAACC,GAAD,OAAsBA,EAAMM,QAEvD0C,EAAeC,uBAAY,WAC/B,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWzC,EAAMC,IAEjCyC,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,IAAiB,CACxDC,OAAQ,OACRC,YAAa,UACbC,KAAMP,IACLQ,KAJH,yCAIQ,WAAMC,GAAN,UAAAC,EAAA,yDACa,MAAfD,EAAIE,OADF,4BAEMC,MAFN,SAEkBH,EAAII,OAFtB,+CAKNC,aAAM,yEACNlB,IANM,2CAJR,uDAWGmB,OAAM,SAAAC,GACPF,KAAMG,OAAM,kBAAM,wHAAyB,uBAAMD,EAAIE,QAAUF,EAAIE,QAAUF,EAAIG,sBAElF,CAAC1D,EAAOmC,IAgDX,OAAO,sBAAKrH,UAAU,sBAAf,UACL,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAM2B,GAAIwF,EAAS,gBAAYjC,EAAMC,IAAO,QAASnF,UAAU,4CAA/D,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,oCAGlB,qBAAKL,UAAU,kBAAkBU,IAAMwE,EAAME,QAAUF,EAAME,QAAtB,UAAmC/E,GAAnC,6BACvC,sBAAKL,UAAU,mBAAf,UACE,+BAAQkF,EAAMN,OAEZuC,GACA,sBAAKnH,UAAU,mBAAf,UACE,sBAAMA,UAAU,uBAAhB,iBACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,8BAEhB,+BAAQ8G,EAAUvC,gBAMxB0B,GACA,sBAAKtG,UAAU,kBAAf,WAEKmH,GACD,sBAAKnH,UAAU,qCAAqCC,QAASsH,EAAcf,YAAA,EAASC,WAAS,+BAA7F,UACE,qBAAKzG,UAAU,iBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,kCAEhB,cAAC,KAAD,CAAc8E,GAAG,+BAA+BuB,MAAM,MAAMrF,KAAK,OAAOsF,OAAO,QAA/E,SACE,qFAIN,sBAAK3G,UAAU,iCAAiCC,QAlF/B,WACrB,GAAKiH,GAAeD,EAApB,CAEA,IAAM4B,EAAiB3B,EAAW4B,QAAO,SAAAC,GAAK,OAAIzB,EAAayB,EAAM5D,IAAI6D,WACnEC,EAAgBhC,EAAM6B,QAAO,SAAAjE,GAAI,OAAIyC,EAAazC,EAAKM,IAAI6D,WAEjE,KAAIH,EAAeK,QAAU,GAAKD,EAAcC,QAAU,GAA1D,CAEA,IAAMC,EAAevB,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,IAAmB,CAC/EC,OAAQ,SACRC,YAAa,UACbqB,QAAS,CACP,eAAgB,mCAElBpB,KAAMqB,KAAKC,UAAU,CACnBC,YAAaV,EAAe5D,KAAI,SAAAkC,GAAS,OAAIA,EAAUhC,MACvDqE,QAAStE,EAAMC,OAIbsE,EAAc7B,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,IAAa,CACxEC,OAAQ,SACRC,YAAa,UACbqB,QAAS,CACP,eAAgB,mCAElBpB,KAAMqB,KAAKC,UAAU,CACnBrC,MAAOgC,EAAchE,KAAI,SAAAJ,GAAI,OAAIA,EAAKM,MACtCqE,QAAStE,EAAMC,OAInBuE,QAAQC,IAAI,CAACR,EAAcM,IAAcxB,MAAK,YAAmB,IAAD,oBAAhB2B,EAAgB,KAAVC,EAAU,KAC9D,IAAKD,EAAKE,KAAOD,EAAKC,GAAI,MAAM,IAAIzB,MAEpC,IAAM0B,EAAoB,GACtBlB,EAAeK,OAAS,GAAGa,EAAQnE,KAAR,UAAgBiD,EAAeK,OAA/B,8BAC3BD,EAAcC,OAAS,GAAGa,EAAQnE,KAAR,UAAgBqD,EAAcC,OAA9B,oCAE9BX,KAAMyB,QAAN,UAAiBD,EAAQlE,KAAK,YAA9B,iDACAwB,OACCmB,OAAM,WACPD,aAAM,yGAwCqE/B,YAAA,EAASC,WAAS,2BAA3F,UACE,qBAAKzG,UAAU,iBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,6BAEhB,cAAC,KAAD,CAAc8E,GAAG,2BAA2BuB,MAAM,MAAMrF,KAAK,OAAOsF,OAAO,QAA3E,SACE,2FAGJ,sBAAK3G,UAAU,iBAAiBC,QAASmH,EAAzC,UACE,qBAAKpH,UAAU,mBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,8BAEhB,sBAAML,UAAU,mBAAhB,2CCjIKiK,I,MARC,WACd,OACE,qBAAKjK,UAAU,oBAAf,SACE,sBAAKA,UAAU,cAAf,UAA6B,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,+B,SC+B7IkK,I,MA5BkB,WAC/B,IAAMjD,EAAQ3C,aAAY,SAACC,GAAD,OAAsBA,EAAMM,QAChDhD,EAAWC,cAFoB,EAGDqI,oBAAS,GAHR,oBAG9BC,EAH8B,KAGlBC,EAHkB,KAYrC,OAPAC,qBAAU,WACR,IAAMC,EAAWlF,OAAOC,OAAO2B,GAE3BsD,EAASrB,QAAU,EAAGmB,GAAc,GACnCA,EAAcE,EAASC,OAAM,SAAA3F,GAAI,OAAIA,EAAKmE,cAC9C,CAAC/B,IAEG,qBAAKjH,UAAU,+BAA+ByK,eAAgB,SAAAC,GACnEA,EAAEC,iBACFD,EAAEE,kBAGA/I,EADEuI,EZQ+B,CACrC/I,KAAMC,GAL6B,CACnCD,KAAMC,KYTC,SAUL,cAAC,KAAD,CAAUuJ,MAAM,SAASC,QAAM,EAACC,MAAM,QAAQC,QAAQ,QAAQhL,UAAU,qBACtE6E,KAAM,qBAAK7E,UAAU,qBAAf,SAAoC,qBAAKM,UAAS,UAAKD,GAAL,8BACxD2I,QAASoB,EAAYa,UAAQ,QCNpBC,GAjBV,SAAC,GAAY,IAAV/F,EAAS,EAATA,GACAN,EAAOP,aAAY,SAACC,GAAD,OAAsBA,EAAMM,KAAKM,MACpDtD,EAAWC,cAEjB,OAAO,qBAAK9B,UAAU,+BAA+ByK,eAAgB,SAAAC,GACnEA,EAAEC,iBACFD,EAAEE,kBACF/I,EbE6B,SAACsD,GAAD,MAAiB,CAChD9D,KAAMC,EACNG,QAAS,CAAE0D,OaJAgG,CAAkBhG,KAHtB,SAKL,cAAC,KAAD,CAAU0F,MAAM,SAASO,UAAU,QAAQN,QAAM,EAACC,MAAM,QAAQC,QAAQ,QAAQhL,UAAU,qBACxFqL,MAAO,CAAEC,cAAe,QACxBzG,KAAM,qBAAK7E,UAAU,qBAAf,SAAoC,qBAAKM,UAAS,UAAKD,GAAL,8BACxD2I,QAASuC,QAAQ1G,GAAQA,EAAKmE,SAAUiC,UAAU,OCkCzCO,I,MA/CV,SAAC,GAAwB,IAAtB5G,EAAqB,EAArBA,KAAM6G,EAAe,EAAfA,SAAe,EACGtB,oBAAS,GADZ,oBACpBuB,EADoB,KACXC,EADW,KAGrBC,EAAapE,uBAAY,SAACqE,GAC1BA,IAAYjH,GACd6G,EAASI,GAEXF,GAAW,KACV,CAAC/G,EAAM6G,IAEV,OAAOC,EACH,qCACE,uBAAOrK,KAAK,OAAOyK,UAAW,GAC5BC,OAAQ,SAAArB,GAAC,OAAIkB,EAAWlB,EAAE1E,OAAOgG,QACjC/L,QAAS,SAAAyK,GACPA,EAAEE,kBACFF,EAAEC,kBAEJsB,UAAW,SAAAvB,GACK,UAAVA,EAAEwB,KAA6B,WAAVxB,EAAEwB,KACzBN,EAAWlB,EAAEyB,cAAcH,QAG/BI,aAAcxH,EAAMyH,WAAW,EAC/BrM,UAAU,2BACZ,qBAAaA,UAAU,uCAAuCC,QAAS,SAAAyK,GACrEA,EAAEE,kBACFF,EAAEC,kBAFJ,SAIE,qBAAKrK,UAAS,UAAKD,GAAL,8BAJN,MAOZ,qCACA,sBAAML,UAAU,iBAAhB,SAAkC4E,IAClC,qBAAa5E,UAAU,gCAAgCC,QAAS,SAAAyK,GAC9DA,EAAEE,kBACFF,EAAEC,iBACFgB,GAAW,IACVnF,YAAA,EAASC,WAAS,oBAJrB,SAKE,qBAAKnG,UAAS,UAAKD,GAAL,2BALN,GAOV,cAAC,KAAD,CAAc8E,GAAG,oBAAoBuB,MAAM,QAAQrF,KAAK,QAAQsF,OAAO,QAAvE,SACE,gFCFO2F,I,MAjCV,SAAC,GAAsC,IAApC9L,EAAmC,EAAnCA,KAAMqE,EAA6B,EAA7BA,KAAMsC,EAAuB,EAAvBA,UAAWoF,EAAY,EAAZA,MAC7B,OAAO,sBAAKvM,UAAU,iBAAiBC,QAAS,WAC9CsM,EAAMC,gBADD,UAGL,sBAAKxM,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAoBU,IAAKF,EAAKG,YAC7C,sBAAKX,UAAU,gBAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAqCQ,EAAKiM,WAC1C,qCAAStF,EAAS,UAAMA,EAAUvC,KAAhB,YAAwBC,EAAKD,MAASC,EAAKD,cAGjE,sBAAK5E,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAoBU,IAAG,UAAKL,GAAL,iBACtC,sBAAKL,UAAU,gBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAMA,UAAU,mBAAhB,sCACA,sBAAKA,UAAU,eAAf,UACE,qBAAKqL,MAAO,CAACqB,WAAY,QAASC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,cAAjE,SAA+E,sBAAMC,EAAE,kDAAkDC,KAAK,mBAC9I,gDAGJ,sBAAK/M,UAAU,qBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,0BAA0BU,IAAKF,EAAKG,YACnD,sBAAMX,UAAU,yBAAhB,SAA2CQ,EAAKiM,cAElD,qBAAKzM,UAAU,kBAAkBU,IAAKmE,EAAKmI,oB,4BnBfhDlN,O,eAAAA,I,kBAAAA,M,KAKL,IAmQemN,GAnQY,WACzB,IAAMjI,EAASV,aAAY,SAACC,GAAD,OAAsBA,EAAMS,UACjDxE,EAAO8D,aAAY,SAACC,GAAD,OAAsBA,EAAM/D,QAC/CqB,EAAWC,cAHc,EAKFoL,cAArB1D,EALuB,EAKvBA,QAAS2D,EALc,EAKdA,QALc,EAMKhD,mBAA6B,MANlC,oBAMxBjD,EANwB,KAMZkG,EANY,OAOLjD,mBAAwB,MAPnB,oBAOxBlD,EAPwB,KAOjBoG,EAPiB,OAQGlD,mBAA2B,MAR9B,oBAQxBhD,EARwB,KAQbmG,EARa,KAUzBpI,EAAQF,EAAOuI,MAAK,SAAArI,GAAK,OAAIA,EAAMC,KAAOqE,KAVjB,EAWIgE,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAX3B,oBAWxBC,EAXwB,KAWXrG,EAXW,KAazBkF,EAAQoB,KAAiBC,MACzBtH,IAAgBpB,GAAQA,EAAMoB,cAEpCgE,qBAAU,WACJ6C,EACFzD,QAAQC,IAAI,CACV/B,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,GAApC,eAAwDsF,GAAW,CACtEpF,YAAa,YACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI2F,UACnBjG,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,GAApC,oBAAyD2B,EAAzD,oBAA4E2D,GAAW,CAC1FpF,YAAa,YACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI2F,YAClB5F,MAAK,YAAsB,IAAD,oBAAnBc,EAAmB,KAAZ+E,EAAY,KAC3BjM,EAASN,EAAgB,aAAIuM,GAAkB7I,KAAI,SAAA8I,GAAI,OAAIA,EAAK5I,QAChEiI,EAAc,IACdC,EAASS,GACTR,EAAavE,MAGfW,QAAQC,IAAI,CACV/B,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,GAApC,eAA0D2B,GAAW,CACxEzB,YAAa,YACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI2F,UACnBjG,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,GAApC,oBAAyD2B,GAAW,CACvEzB,YAAa,YACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI2F,YAClB5F,MAAK,YAAuB,IAAD,oBAApB+F,EAAoB,KAAZF,EAAY,KAC5BjM,EAASN,EAAgB,uBAAIuM,GAAJ,aAAyBE,IAAuB/I,KAAI,SAAA8I,GAAI,OAAIA,EAAK5I,QAC1FiI,EAAcY,EAAO/I,KAAI,SAAC8D,GAAD,oBAAC,gBAA0BA,GAA3B,IAAkCkF,UAAU,EAAOvC,SAAS,QACrF2B,EAASS,EAAO7I,KAAI,SAACJ,GAAD,oBAAC,gBAAoBA,GAArB,IAA2BoJ,UAAU,QACzDX,EAAa,WAGhB,CAAC9D,EAAS2D,EAASO,EAAa7L,IAEnC,IAAMqM,EAAW1G,uBAAY,SAAC3C,GAC5B0H,EAAM4B,KAAK,CACTC,KAAM,cAAC,GAAD,CAAU5N,KAAMA,EAAOqE,KAAMA,EAAMsC,UAAWA,EAAWoF,MAAOA,IACtE8B,YAAY,MAEb,CAAC7N,EAAM+L,EAAOpF,IAEXyE,EAAapE,uBAAY,SAACuG,EAAwB1M,EAAgBwK,GACtE,IAAMyC,EAAWP,EAAKnJ,KACtBiH,EAAUA,EAAQ0C,QAAQ,MAAO,IAEjC,IAAMC,EAAWnN,IAASvB,EAASmE,KavFnB,QbuFqC4D,GAC/C4G,EAAWpN,IAASvB,EAASmE,KAAO,kCAAW,qBAErD8J,EAAKnJ,KAAOiH,EACRxK,IAASvB,EAASmE,MAAQgD,EAC5BoG,EAAS,aAAIpG,IACJ5F,IAASvB,EAAS4O,OAASxH,GACpCkG,EAAc,aAAIlG,IAGpBU,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCmO,GAAY,CACnD1G,OAAQ,QACRC,YAAa,UACbqB,QAAS,CACP,eAAgB,mCAElBpB,KAAMqB,KAAKC,UAAU,CACnBnE,GAAI4I,EAAK5I,GACTP,KAAMiH,MAEP5D,KAVH,yCAUQ,WAAMC,GAAN,UAAAC,EAAA,yDACa,MAAfD,EAAIE,OADF,4BAEMC,MAFN,SAEkBH,EAAII,OAFtB,+CAKNC,KAAMyB,QAAN,UAAiByE,EAAjB,6DALM,2CAVR,uDAgBGjG,OAAM,SAAAC,GACPsF,EAAKnJ,KAAO0J,EACRjN,IAASvB,EAASmE,MAAQgD,EAC5BoG,EAAS,aAAIpG,IACJ5F,IAASvB,EAAS4O,OAASxH,GACpCkG,EAAc,aAAIlG,IAEpBqB,KAAMG,OAAM,kBAAM,0CAAQ+F,EAAR,iEAA6B,uBAAMhG,EAAIE,QAAUF,EAAIE,QAAUF,EAAIG,sBAEtF,CAAC3B,EAAOC,IA9FoB,EAuG3ByH,aAAY,CACdC,OAAQ,0DACRC,UAAWvI,EACXwI,SAAS,EACTC,YAAY,EACZC,QAAS,QACTC,OAAQ,SAAAC,GACN,GAAIA,EAAMhG,QAAU,EAClBqD,EAAM4B,KAAK,CACTtJ,KAAM,QACNuJ,KAAM,oMACNC,YAAY,QAJhB,CASA,IAAM5G,EAAW,IAAIC,SAErBD,EAASE,OAAO,UAAW6B,GACvB2D,GACF1F,EAASE,OAAO,UAAWwF,GAG7B+B,EAAMC,SAAQ,SAAAC,GACZ3H,EAASE,OAAO,UAAWyH,EAAMA,EAAKxK,SAGxC,IAAMyK,EAAiB9G,aAAM,GAAD,OAAI2G,EAAMhG,OAAV,uFAAsC,CAAEoG,WAAW,IAE/E1H,MAAM,GAAD,OAAIvH,gCAAJ,OAAoCwH,IAAa,CACpDC,OAAQ,OACRC,YAAa,UACbC,KAAMP,IACLQ,KAJH,yCAIQ,WAAMC,GAAN,UAAAC,EAAA,yDACa,MAAfD,EAAIE,OADF,4BAEMC,MAFN,SAEkBH,EAAII,OAFtB,+CAKNC,KAAMgH,OAAOF,EAAgB,CAC3BG,OAAO,GAAD,OAAKN,EAAMhG,OAAX,+EACN7H,KAAMkH,KAAMkH,KAAKC,QACjBJ,UAAW,MAEbjI,IAVM,2CAJR,uDAeGmB,OAAM,SAAAC,GACPF,KAAMgH,OAAOF,EAAgB,CAC3BG,OAAQ,kBAAM,6HAAyB,uBAAM/G,EAAIE,QAAUF,EAAIE,QAAUF,EAAIG,eAC7EvH,KAAMkH,KAAMkH,KAAKE,MACjBL,UAAW,aAtDjBM,EAjG6B,EAiG7BA,aACAC,EAlG6B,EAkG7BA,cACMzI,EAnGuB,EAmG7BzB,KACAmK,EApG6B,EAoG7BA,aACAC,EArG6B,EAqG7BA,aACAC,EAtG6B,EAsG7BA,aAuDIvK,EAAiBf,mBAAQ,WAC7B,IAAMgB,EAAU,CAAC,kBAMjB,OAJAoK,GAAgBpK,EAAQE,KAAK,eAC7BmK,GAAgBrK,EAAQE,KAAK,eAC7BoK,GAAgBtK,EAAQE,KAAK,eAEtBF,EAAQG,KAAK,OACnB,CACDiK,EACAE,EACAD,IAGF,OAAK7K,EACAgC,GAAeD,EAEf/B,EAAMqB,WAYT,kDAASqJ,EAAa,CAAC5P,UAAWyF,KAAlC,cACE,cAAC,GAAD,CACEwB,MAAOA,EAAOC,WAAYA,EAAYC,UAAWA,EACjDjC,MAAOA,EAAOoB,cAAeA,EAAec,aAAcA,EAAcC,YAAaA,IAEvF,sBAAKrH,UAAU,sBAAf,UACE,sBAAKA,UAAU,6BAAf,UACIsG,GAAiB,cAAC,GAAD,IACnB,qBAAKtG,UAAU,uCAAf,0BACA,qBAAKA,UAAU,mBAAf,gCACA,qBAAKA,UAAU,kBAAf,6CACA,qBAAKA,UAAU,iBAAf,yCAGAkH,EAAWjC,KAAI,SAAAkC,GAAS,mBACtB,eAAC,IAAD,CAAyBnH,UAAU,YAAY2B,GAAE,gBAAW6H,EAAX,YAAsBrC,EAAUhC,IAAjF,UACMD,EAAMoB,eAAiB,cAAC,GAAD,CAAcnB,GAAIgC,EAAUhC,KACrD,sBAAKnF,UAAU,2BAAf,UACA,qBAAKA,UAAU,iBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,8BAEhB,cAAC,GAAD,CAAWuE,KAAMuC,EAAUvC,KAAM6G,SAAU,SAAAI,GAAO,OAAID,EAAWzE,EAAWrH,EAAS4O,MAAO7C,SAE9F,sBAAK7L,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAwBU,IAAG,oBAAGyG,EAAU8I,cAAb,aAAG,EAAkBtP,iBAArB,QAAkC,KAC5E,sBAAMX,UAAU,uBAAhB,6BAAyCmH,EAAU8I,cAAnD,aAAyC,EAAkBrP,WAA3D,QAAkE,QAEpE,qBAAKZ,UAAU,kBAAf,SAAmCmH,EAAU+I,YAC7C,qBAAKlQ,UAAU,iBAAf,SAAkC,IAAImQ,KAAKhJ,EAAUiJ,kBAAkBC,yBAb9DlJ,EAAUhC,OAkBvB8B,EAAMhC,KAAI,SAAAJ,GAAI,mBACZ,sBAAmB7E,UAAU,YAAYC,QAAS,kBAAMiO,EAASrJ,IAAjE,UACIK,EAAMoB,eAAiB,cAAC,GAAD,CAAcnB,GAAIN,EAAKM,KAChD,sBAAKnF,UAAU,2BAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,6BAEhB,cAAC,GAAD,CAAWuE,KAAMC,EAAKD,KAAM6G,SAAU,SAAAI,GAAO,OAAID,EAAW/G,EAAM/E,EAASmE,KAAM4H,SAEnF,sBAAK7L,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAwBU,IAAG,oBAAGmE,EAAKoL,cAAR,aAAG,EAAatP,iBAAhB,QAA6B,KACvE,sBAAMX,UAAU,uBAAhB,6BAAyC6E,EAAKoL,cAA9C,aAAyC,EAAarP,WAAtD,QAA6D,QAE/D,qBAAKZ,UAAU,oBACf,qBAAKA,UAAU,iBAAf,SAAkC,IAAImQ,KAAKtL,EAAKuL,kBAAkBC,yBAb1DxL,EAAKM,UAkBrB,sBAAKnF,UAAU,cAAf,UACE,qBAAKA,UAAU,oBAAoBU,IAAG,UAAKL,GAAL,iBACtC,qBAAKL,UAAU,0BAAf,wHAEF,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,2BAEhB,sBAAKL,UAAU,6BAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,8BAEhB,8IAGJ,sCAAWwP,MACX,cAAC,KAAD,CAAgBS,SAAS,eAAeC,cAAY,QA/E/C,kDAASX,EAAa,CAAC5P,UAAWyF,KAAlC,cACL,cAAC,GAAD,CACEwB,MAAOA,EAAOC,WAAYA,EAAYC,UAAWA,EACjDjC,MAAOA,EAAOoB,cAAeA,EAAec,aAAcA,EAAcC,YAAaA,IAEvF,8GACA,kGAAkB,mBAAGjH,KAAMgC,EAAiB6D,IAAI,aAAaD,OAAO,SAAlD,0BAAlB,mCAT8B,cAAC,GAAD,IADf,cAAC,GAAD,KoBvLNwK,I,MAjBI,WACjB,OACE,sBAAKxQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,qEACA,sBAAKA,UAAU,oBAAoBC,QAAS,WAC1CC,OAAOC,SAASC,KAAhB,UAA0BC,+BAA1B,kBADF,UAGE,qBAAKL,UAAU,oBAAf,SACE,qBAAKM,UAAS,UAAKD,GAAL,+BAEhB,qBAAKL,UAAU,yBACf,yGCoCOyQ,I,MA/BQ,WACrB,IAAMjQ,EAAO8D,aAAY,SAACC,GAAD,OAAsBA,EAAM/D,QAC/CwE,EAASV,aAAY,SAACC,GAAD,OAAsBA,EAAMS,UACjD0L,EAAQC,cACR9O,EAAWC,cASjB,OAPAwI,qBAAU,WACR1C,MAAM,GAAD,OAAIvH,+BAAJ,WAA4C,CAC/C0H,YAAa,YACZE,MAAK,SAAAC,GAAG,OAAIA,EAAI2F,UAChB5F,MAAK,SAAAjD,GAAM,OAAInD,EjBnBG,SAACmD,GAAD,MAAsB,CAC7C3D,KAAMC,EACNG,QAASuD,GiBiBoB4L,CAAU5L,SACpC,CAACnD,IAECrB,EACAA,EAAK2E,GACLH,EAEG,eAAC,IAAD,WACN,cAAC,IAAD,CAAOL,KAAM,CAAC,GAAD,OACR+L,EAAM/L,KADE,gCAER+L,EAAM/L,KAFE,cAAb,SAIE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAM+L,EAAM/L,KAAnB,SACE,cAAC,GAAD,CAAWhD,GAAG,OAAOyE,SAAS,sGAAsBC,SAAS,kCAC3DC,cAAe,SAAApB,GAAK,OAAIA,EAAMoB,sBAXhB,cAAC,GAAD,IADC,cAAC,GAAD,IADH,+BCoBLuK,I,MAlCV,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,OAAQnP,EAAkC,EAAlCA,SAAkC,IAAxBoP,iBAAwB,SACnDC,EAAcF,EAAM,UAAMA,EAAOG,IAAb,YAAoBJ,EAAQI,KAAQJ,EAAQI,IAEtE,OAAO,sBAAKlR,UAAU,eAAf,UACL,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACGgR,GACC,qCACE,qBAAKhR,UAAU,qBAAqBwG,YAAA,EAASC,WAAS,wBAAtD,SACE,qBAAKnG,UAAS,UAAKD,GAAL,iCAEhB,cAAC,KAAD,CAAc8E,GAAG,wBAAwBuB,MAAM,MAAMrF,KAAK,OAAOsF,OAAO,QAAxE,SACE,0JAIJsK,EACDH,EAAQK,OACT,sBAAKnR,UAAU,gBAAf,UACE,wCAEE8Q,EAAQK,MAAMlM,KAAI,SAAAmM,GAAK,OAAK,qBAAiBpR,UAAU,qBAA3B,SAAiDoR,GAAvCA,YAK3CN,EAAQO,OACP,sBAAKrR,UAAU,gBAAf,wCAAuCiR,EAAvC,IAAqDH,EAAQO,YAGhEzP,OCvBU0P,I,MAdV,SAAC,GAAoC,IAAlCrB,EAAiC,EAAjCA,OAAQK,EAAyB,EAAzBA,SAAU1O,EAAe,EAAfA,SACxB,OAAO,sBAAK5B,UAAS,gCAA2BsQ,GAAzC,UACJL,GACC,sBAAKjQ,UAAU,qBAAf,UACE,qBAAKA,UAAU,2BAA2BU,IAAKuP,EAAOsB,SACtD,sBAAMvR,UAAU,0BAAhB,SAA2CiQ,EAAOrL,UAGtD,qBAAK5E,UAAU,cAAf,SACI4B,SCTO4P,I,MANiB,SAAC,GAAkB,IAAhB5P,EAAe,EAAfA,SACjC,OAAO,qBAAK5B,UAAU,uBAAf,SACH4B,MCIS6P,I,MANe,SAAC,GAAkB,IAAhB7P,EAAe,EAAfA,SAC/B,OAAO,qBAAK5B,UAAU,yBAAf,SACH4B,MCUS8P,I,MAPV,SAAC,GAAgB,IAAdzB,EAAa,EAAbA,OACN,OAAO,sBAAKjQ,UAAU,yBAAf,UACH,qBAAKA,UAAU,qBAAqBU,IAAKuP,EAAOsB,SAChD,sBAAMvR,UAAU,oBAAhB,SAAqCiQ,EAAOrL,YCEnC+M,I,MAPV,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOtJ,EAAW,EAAXA,KACb,OAAO,sBAAKtI,UAAU,yBAAf,UACH,qBAAKA,UAAU,qBAAqBU,IAAKkR,IACzC,sBAAM5R,UAAU,oBAAhB,SAAqCsI,S,6BCT9BuJ,GAAS,SAACC,GAAoD,IAAD,uBAAhBC,EAAgB,iCAAhBA,EAAgB,kBACxE,IAAMC,EAAS,SAACC,GAGd,OAFoBA,EAAIC,MAAM,MAEXjN,KAAI,SAAAkN,GAAM,OAAIA,EAAOC,UACrCtJ,QAAO,SAAAqJ,GAAM,OAAIA,EAAOjJ,OAAS,KACjCrD,KAAK,OAGV,GAAwB,kBAAbiM,EACT,OAAOE,EAAOF,GAGhB,IAAMO,EAASP,EACZQ,MAAM,EAAGP,EAAK7I,OAAS,GAEvBjE,KAAI,SAACqD,EAAMiK,GAAP,OAAoB,IAANA,EAAU,GAAKR,EAAKQ,EAAI,IAAMjK,KAChDzC,KAAK,IAER,OAAOmM,EAAOK,IAwCHG,GAAQ,SAACC,GAAD,OAA2B,IAAIC,MAAMD,GAAK1F,KAAK,GAAG9H,KAAI,SAAC0N,EAAGC,GAAJ,OAAYA,MAwD1EC,GAAU,SAACjO,EAAcO,GAAf,kBAAmCP,EAAnC,YAA2CO,EAA3C,MAOhB,I,gDCxHK2N,GAQAC,GAOAC,GAOAC,GAOAC,GChCCC,GAAS,SAACC,GAAD,kBAAuBA,EAAKhB,OAAO7D,QAAQ,sBAAuB,IAAlE,OAIT8E,GAAO,SAACD,GAAD,iBAAuBA,EAAKhB,OAAO7D,QAAQ,sBAAuB,IAAlE,MACP+E,GAAQ,SAACF,GAAD,IAAeG,EAAf,uDAAsB,GAAtB,mBAAsCA,EAAKnB,OAA3C,aAAsDgB,EAAKhB,OAA3D,QCCRoB,GAAO,CAClBtC,IAAK,SACLvN,KAAM,+CACN8P,IAAK,SAACC,EAAcC,EAAiBC,EAAwBC,GAAxD,OAA2EhC,GAA1E,KAAD,6NACuBsB,GAAO,GAAD,OAAIO,EAAJ,OAC9BC,EAAUG,KAAKC,EAAEH,EAAgB,iBAAUC,IAC/CG,OAAQ,CACNC,KAAM,SAACC,GAAD,gBAAoBA,EAApB,WACNC,MAAO,SAACD,GAAD,gBAAoBA,EAApB,iBACPE,QAAS,SAACF,GAAD,gBAAoBA,EAApB,WACTG,QAAS,SAACH,GAAD,gBAAoBA,EAApB,aAIAI,GAAS,CACpBpD,IAAK,eACLvN,KAAM,6FACN4Q,MAAO,SAACZ,GAAD,gBAAwBA,EAAxB,iDACPF,IAAK,SAACE,GAAD,gBAAwB/P,EAAxB,qCAA2C+P,EAA3C,+BAGMa,GAAO,CAClBtD,IAAK,eACLvN,KAAM,wEACNwN,MAAO,CAAC,OAAQ,sBAChBsD,yBAA0B,oCAC1BC,iBAAkB,gCAGPC,GAAO,CAClBzD,IAAK,eACLvN,KAAM,uFACNiR,UAAW,SAACC,GAAD,gBxB9Bc,ewB8Bd,kCAAqDA,EAArD,WACXC,SAAU,SAACC,GAAD,gBxBsCU,ewBtCV,wCAAgDA,EAAhD,WACVC,WAAY,SAACC,EAAoBC,GAArB,gBxB2EqB,ewB3ErB,aAA6ED,EAA7E,aAA4FC,EAA5F,MACZC,gBAAiB,6ECiCJC,GAhEH,WACV,IAAMC,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAaxE,QAAStN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAY8M,SAAS,QAArB,2BACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,oKACA,2JAGJ,eAAC,GAAD,WACE,wGACA,wKAGJ,eAAC,GAAD,CAAaQ,QAAStN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAY8M,SAAS,QAArB,iCACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,uGACA,8BAAK,oBAAGlQ,KAAK,kGAAkG4F,OAAO,SAASC,IAAI,aAA9H,UAA4IrC,EAA5I,wFAGT,cAAC,GAAD,UACE,gMAGJ,eAAC,GAAD,CAAakN,QAAStN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAY8M,SAAS,QAArB,iCACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,gCzBmCS,eyBnCT,aACA,yIACA,gCAAM1M,EAAN,kBACA,8GAGJ,cAAC,GAAD,UACE,4IAGJ,eAAC,GAAD,CAAakN,QAAStN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAY8M,SAAS,QAArB,iCACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAaL,OAAQoF,IACrB,gCzBtDiB,eyBsDjB,sCACA,8BAAK,oBAAGjV,KAAK,gCAAgC4F,OAAO,SAASC,IAAI,aAA5D,UzBoDoB,eyBpDpB,2DACL,cAAC,GAAD,CAAaqC,KAAK,sCAAsCsJ,MAAM,2KAGlE,cAAC,GAAD,UACE,6HCxDO2D,I,MANV,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACN,OAAO,qBAAKxV,UAAU,uBAAf,SACHwV,EAAMvQ,KAAI,SAAC8I,EAAM6E,GAAP,OAAe,sBAAe5S,UAAU,kBAAzB,UAA4C+N,EAAK0H,MAAjD,IAAyD1H,EAAK2H,QAApD9C,UCA1B+C,I,MAJ6B,SAAC,GAAc,IAAZ/Q,EAAW,EAAXA,KAC7C,OAAO,uBAAM5E,UAAU,UAAhB,cAA4B4E,O,oBCGxBnC,GAAO,CAClByO,IAAK,qBACLvN,KAAM,mGACN0N,MAAO,MACPuE,YAAa,sFACbC,aAAc,IACdC,IAAK,EACLC,IAAK,IACLC,QAAS,IACTvC,IAAK,SAACwC,EAAkBC,EAAaC,GAEnC,IACMC,EAASF,EAAItN,WACnB,MAAM,GAAN,OAAUqN,EAAV,0EAAkC9C,GAAOiD,IAAzC,OAFa,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAEHF,EAAM,IAA9D,yCAA8EC,EAA9E,MAEFE,cAAe,SAACC,EAAaC,GAAd,gBAAiCD,EAAjC,wBAA0CC,EAA1C,+DAGJC,GAAS,CACpBtF,IAAK,qBACLvN,KAAM,+GACN0N,MAAO,iDACPwE,aAAc,eACdD,YAAa,mOACba,mBAAoB,SAACC,GAAD,OAAoB7E,GAAnB,QAAD,6HAEhByB,GAAM,KAAD,OAAMoD,GAAN,OAAeF,GAAOtF,IAAtB,6GAGEyF,GAAM,CACjBzF,IAAK,qBACLvN,KAAM,sFACN0N,MAAO,kCACPuF,OAAQ,kCACRf,aAAc,eACdD,YAAa,4DACbiB,kBAAmB,sDAGRC,GAAO,CAClB5F,IAAK,eACLvN,KAAM,0GACN0N,MAAO,eACPuF,OAAQ,4BACRhB,YAAa,sDACbmB,kBAAmB,IACnBC,cAAe,wEACfC,aAAc,+MACdC,eAAgB,uGAChBC,eAAgB,gFAChBC,cAAevF,GAAF,mSAGbwF,gBAAiB,aACjBC,aAAc,GACdC,aAAc,KACdC,UAAW3F,GAAF,6VAGT4F,YAAa,SAAC7S,EAAc8S,GAAf,gBAAoCvE,GAAOvO,IAA3C,OAAmDkP,KAAKC,EAAEnP,EAAM,iBAAhE,YAA0EuO,GAAOuE,EAAM9O,YAAvF,wFACb+O,gBAAiB,SAACC,EAAmBC,GAApB,gBAAwCD,EAAQ3S,IAAIkO,IAAQtN,KAAK,OAAjE,OAAyEiO,KAAKC,EAAE6D,EAAQA,EAAQ1O,OAAS,GAAI,iBAA7G,YAAuH2O,EAAvH,iDACjBC,cAAe,SAAC7H,GAAD,gBAA4BA,EAAO8H,YAAnC,wBACfxD,MAAO,SAACyD,GAAD,gB5BgDiB,qB4BhDjB,YAA0CA,IACjDC,OAAQ,SAACrT,EAAcsT,GAAf,gBAAmCtT,EAAnC,gCAAgDhB,GAAhD,OAAkEsU,EAAlE,OACRC,MAAO,SAACC,GAAD,gBAAoBA,EAApB,WACPC,aAAc,eACdC,cAAe,SACfC,gBAAiB,SAACC,GAAD,gBAAsBA,EAAQ,EAA9B,iDACjBC,WAAY,2BACZC,YAAa,OACb/I,MAAO,CACLgJ,oBAAqB,6JACrBC,wBAAyB,SAAArC,GAAG,8DAAkBA,EAAlB,2EAC5BsC,qBAAsB,8HAIbC,GAAS,CACpB5H,IAAK,qBACLvN,KAAM,oHACN0N,MAAO,sBACPwE,aAAc,qBACdD,YAAa,4FAGFmD,GAAY,CACvB7H,IAAK,eACLvN,KAAM,qDACN0N,MAAO,8BACPF,MAAO,CAAC,4BACRyE,YAAa,4DACbC,aAAc,eACdmD,UAAW,sFACXC,YAAa,eACbC,cAAe,SAAAC,GAAI,8BAAWA,IAC9BC,aAAc,qBACdC,MAAO,CACL,uCAAU,KACV,iCAAS,KACT,2BAAQ,KACR,qBAAO,KACP,uCAAU,KACV,6CAAW,KACX,2BAAQ,KACR,iCAAS,KACT,qBAAO,KACP,iCAAS,KACT,iCAAS,KACT,uCAAU,KACV,2BAAQ,MACR,qBAAO,KACP,qBAAO,QACP,iCAAS,QACT,iCAAS,QACT,iCAAS,KACT,uCAAU,KACV,qBAAO,KACP,2BAAQ,KACR,iCAAS,KACT,eAAM,KACN,uCAAU,KACV,uCAAU,KACV,iCAAS,KACT,2BAAQ,KACR,2BAAQ,KACR,iCAAS,KACT,iCAAS,KACT,2BAAQ,KACR,qBAAO,KACP,2BAAQ,KACR,iCAAS,KACT,6CAAW,KACX,2BAAQ,KACR,2BAAQ,MACR,2BAAQ,KACR,qBAAO,KACP,eAAM,MACN,2BAAQ,KACR,uCAAU,KACV,2BAAQ,KACR,uCAAU,KACV,iCAAS,KACT,iCAAS,KACT,qBAAO,KACP,qBAAO,KACP,2BAAQ,KACR,2BAAQ,KACR,2BAAQ,KACR,qBAAO,KACP,2BAAQ,KACR,iCAAS,KACT,qBAAO,KACP,qBAAO,KACP,iCAAS,KACT,uCAAU,KACV,uCAAU,KACV,uCAAU,KACV,iCAAS,KACT,2BAAQ,KACR,iCAAS,KACT,qBAAO,KACP,2BAAQ,KACR,2BAAQ,KACR,qBAAO,KACP,2BAAQ,KACR,qBAAO,KACP,iCAAS,KACT,2BAAQ,KACR,iCAAS,KACT,2BAAQ,KACR,iCAAS,KACT,2BAAQ,KACR,iCAAS,KACT,2BAAQ,KACR,2BAAQ,KACR,mDAAY,KACZ,iCAAS,KACT,2BAAQ,KACR,qBAAO,KACP,qBAAO,KACP,2BAAQ,KACR,uCAAU,KACV,uCAAU,KACV,iCAAS,KACT,2BAAQ,KACR,qBAAO,KACP,iCAAS,KACT,2BAAQ,KACR,2BAAQ,KACR,qBAAO,KACP,2BAAQ,KACR,qBAAO,KACP,qBAAO,KACP,uCAAU,KACV,2BAAQ,KACR,iCAAS,KACT,2BAAQ,KACR,2BAAQ,KACR,qBAAO,KACP,2BAAQ,KACR,2BAAQ,KACR,qBAAO,MAET1J,MAAO,CACL2J,WAAY,6DAEdC,KAAM,CACJrI,IAAK,eACLvN,KAAM,2FACN6V,eAAgB,GAChBC,MAAO,SAAClG,GAAD,gBAAqB3P,GAArB,OAAgD2P,IACvDmG,UAAW,KASFC,GAAW,CACtBzI,IAAK,qBACLvN,KAAM,2DACN0N,MAAO,eACPuI,WAAY,qDACZC,QAAS,kEACTC,cAAe,CACbC,MAAO,WAEPC,gBAAiB,EAEjBrH,EAAG,eAELsH,kBAAkB,GAAD,O5BlMQ,S4BkMR,oEACjBC,aAAa,GAAD,OAAKtW,EAAL,2CACZ6T,YAAanE,GAAMzB,GAAA,KAAD,+KAAUjO,EAAoBuW,KAAOtP,MAAMuP,IAAIzU,KAAUwU,KAAOtP,MAAMuP,IAAIC,MAAWzW,EAAoBuW,KAAOtP,MAAMyP,OAAO3U,KAAYwU,KAAOtP,MAAMyP,OAAOD,MAC3KzW,EAAoBuW,KAAOtP,MAAM0P,MAAM5U,KAAWwU,KAAOtP,MAAM0P,MAAMF,MAASzW,EAAoBuW,KAAOtP,MAAM2P,KAAK7U,KAAYwU,KAAOtP,MAAM2P,KAAKH,OAAS,QAC/JI,cAAe,oHCnFFC,GApJC,WAAO,IAAD,QACdla,EAAO8D,aAAY,SAACC,GAAD,OAAsBA,EAAM/D,QAC/C6U,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAERH,OAAOoV,SAAS,EAAG,GAEnB,IAAMW,EAAQ,iBAAGzV,QAAH,IAAGA,OAAH,EAAGA,EAAMiM,gBAAT,QAAqB,OAEnC,OAAO,qCACL,eAAC,GAAD,CAAaqE,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,uCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,gCAAK,cAAC,GAAD,CAAS1L,KAAMqR,IAApB,sDAA4CrS,EAA5C,kDAEF,cAAC,GAAD,CAAY0M,SAAS,QAArB,6CACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,gCAAK,cAAC,GAAD,CAAS1L,KAAMqR,IAApB,sDAA4CrS,EAA5C,yDAGJ,eAAC,GAAD,WACE,8KACA,2CAASC,GAAaiS,IAAtB,gBAA8BjS,GAAakS,IAA3C,wDAGJ,eAAC,GAAD,CAAajF,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,8EACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,6BAEF,cAAC,GAAD,UACE,mJAGJ,eAAC,GAAD,CAAaQ,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,8CACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,uBAEF,cAAC,GAAD,UACE,gOAGJ,eAAC,GAAD,CAAaQ,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,+EACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,wGACA,sOACA,yFAEF,cAAC,GAAD,CAAYA,SAAS,QAArB,kFACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,gHACA,uKACA,qJACA,gDAEF,cAAC,GAAD,CAAYA,SAAS,QAArB,gBACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,oLACA,kMACA,gC7BwCgB,qB6BxChB,oDACA,6DACA,6DACA,6DACA,6DACA,6DACA,cAAC,GAAD,CAAasB,MAAK,2BAAKpR,QAAL,IAAKA,OAAL,EAAKA,EAAMG,iBAAX,QAAwB0U,EAAQ9D,QAAUjJ,KAAI,UAAK2N,EAAL,+EAChE,cAAC,GAAD,CAAWT,MAAO,CAAC,CAAEC,MAAO,gBAAOC,MAAO,GAAI,CAAED,MAAO,gBAAOC,MAAO,GAAK,CAAED,MAAO,gBAAOC,MAAO,GAAK,CAAED,MAAO,gBAAOC,MAAO,GAAK,CAAED,MAAO,gBAAOC,MAAO,SAE3J,cAAC,GAAD,CAAYzF,OAAQoF,EAAS/E,SAAS,OAAtC,wHAIF,eAAC,GAAD,WACE,qJACA,0KAGJ,eAAC,GAAD,CAAaQ,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,eAAC,GAAD,CAAYyM,SAAS,QAArB,uCAAmC,cAAC,GAAD,CAAS1L,KAAMqR,OAClD,eAAC,GAAD,CAAYhG,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,qBAAKtQ,UAAU,cAAcU,IAAG,iBAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAMG,iBAAR,QAAqB,mDACrD,cAAC,GAAD,CAAaiR,MAAK,2BAAKpR,QAAL,IAAKA,OAAL,EAAKA,EAAMG,iBAAX,QAAwB0U,EAAQ9D,QAAUjJ,KAAM2N,UAGtE,cAAC,GAAD,UACE,sKAGJ,eAAC,GAAD,CAAanF,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,uCACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,gCAAM1M,EAAN,qCACA,gC7B/FS,e6B+FT,6BAEF,cAAC,GAAD,CAAY0M,SAAS,QAArB,yFACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,gCAAM1M,EAAN,YACA,gC7BpGS,e6BoGT,+DAGJ,eAAC,GAAD,WACE,iIACA,wOACA,oCACE,gGACA,6BAAMyB,OAAOsV,KAAK9W,GAAkBwV,OAAOpU,KAAI,SAAAsO,GAAI,OACjD,oBAAevT,UAAU,aAAzB,SAAuCuT,GAA9BA,iBAKjB,eAAC,GAAD,CAAazC,QAASjN,GAAkB0V,KAAMxI,OAAQlN,GAAtD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,8CACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,8BAAOjL,OAAOsV,KAAK9W,GAAkBwV,OAAO/G,MAAM,EAAG,IAAIrN,KAAI,SAAAsO,GAAI,OAC/D,gCAAiB3P,EAAjB,IAA4C2P,IAAlCA,QAEZ,sCACA,cAAC,GAAD,CAAWiC,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,iHAIF,eAAC,GAAD,CAAa5E,QAASjN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYyM,SAAS,QAArB,iEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,sFACA,oEAGJ,cAAC,GAAD,qHC7ISsK,I,MAPV,SAAC,GAAqB,IAAnB5C,EAAkB,EAAlBA,MAAO1P,EAAW,EAAXA,KACb,OAAO,sBAAKtI,UAAU,wBAAf,UACL,sBAAMA,UAAU,oBAAhB,SAAqCgY,IACrC,sBAAMhY,UAAU,mBAAhB,SAAoCsI,SCAzBuS,I,MANQ,SAAC,GAAkB,IAAhBjZ,EAAe,EAAfA,SACxB,OAAO,sBAAK5B,UAAU,iBAAf,0BACD4B,OCCKkZ,GAAQ,CACnB5J,IAAK,qBACLvN,KAAM,wEACN0N,MAAO,qBACPuF,OAAQ,qBACRhB,YAAa,qFACbmF,WAAY,gCACZC,cAAe,SAACC,EAAOC,GAAR,OAGbA,EACI,CACAC,EAAGF,EACHG,IAAK,OACLC,KAAM,IACNC,KAAM,UAEN,CACAH,EAAGF,EACHG,IAAK,OACLC,KAAM,IACNE,IAAK,IACLC,GAAI,KACJC,OAAQ,OAEdC,YAAa,CACX,aAAc,6JAILC,GAAU,CACrBzK,IAAK,qBACLvN,KAAM,8EACN0N,MAAO,qBACPuF,OAAQ,qBACRhB,YAAa,2FACbgG,YAAa,GACbC,UAAW,SAACC,GAAD,iCAAyCA,KAGzCC,GAAM,CACjB7K,IAAK,qBACLvN,KAAM,8EACN0N,MAAO,qBACPuF,OAAQ,kCACRhB,YAAa,kEACboG,aAAc,wCACd/X,KAAM,sCACNgY,eAAgB,EAChBlB,WAAY,+CACZC,cAAe,SAACC,GAAD,MAAoB,CACjCA,QACAiB,QAAS,GACTC,KAAM,SAIGC,GAAW,CACtBlL,IAAK,qBACLvN,KAAM,mGACN0N,MAAO,qBACPuF,OAAQ,eACRhB,YAAa,yEACbmF,WAAY,2CACZC,cAAe,SAACC,GAAD,MAAoB,CACjCjD,MAAOiD,EACPoB,OAAQ,UACRC,SAAU,GACVC,WAAY,IAEdC,aAAc,SAACrX,GAAD,+DAAkEA,IAChFsX,eAAgB,SAACC,EAAeC,EAAuBC,EAAiBC,EAAmBC,GAA3E,OAAgGjL,GAA/F,QAAD,qEACZjO,EAAgBuP,GAAO,GAAD,OAAIuJ,EAAJ,MT5EN,YS4EgCC,ET5EJvK,OAAO7D,QAAQ,WAAY,IAAvD,MS4EoDqO,EACpEC,EAAS,qBTzEK,SAACzJ,EAAcpG,GAAf,iBAAmCoG,EAAnC,aAA4CpG,EAA5C,KSyEY+P,CAAKF,EAAUjU,WAAX,oCAAoDkU,KAAgB,KACtGE,kBAAmB,SAACL,GAAD,OAA2B9K,GAA1B,QAAD,iCACfjO,EAAgBuP,GAAO,GAAD,OAAIwJ,EAAJ,QAC1BM,cAAe,8DACfC,gBAAiB,SAACC,GAAD,OAAmBA,GAAS,GACzC,UACAA,GAAS,GACP,UACA,WACNC,YAAa,CACX,0BAA2B,oDAC3B,gBAAiB,kCACjB,SAAY,qBACZ,kBAAmB,wCACnB,MAAS,qBACT,kBAAmB,wCACnB,SAAY,qBACZ,gBAAiB,kCACjB,0BAA2B,qDAE7BC,cAAe,SAAC/U,EAAcgV,EAAiB5H,GAAhC,gBAAqDpN,EAArD,2DAAyEoN,EAAzE,yBAAqF4H,EAArF,kDACfC,YAAa,SAACD,GAAD,OAAqBA,EAC7BA,GAAW,GAAM,sDACfA,GAAW,GAAM,mDAChB,sDACJ,KAGOE,GAAW,CACtBtM,IAAK,eACLvN,KAAM,2FACN0N,MAAO,qBACPuF,OAAQ,eACRhB,YAAa,kEACb3R,KAAM,sCACN8W,WAAY,gDACZC,cAAe,SAACC,GAAD,MAAoB,CACjCA,QACAiB,QAAS,KAEXuB,MAAO,SAACC,EAAaC,GAAd,OAA+B9L,GAA9B,QAAD,6BACH8L,EAAI,UAAM/Z,EAAN,yBAA6B8Z,EAA7B,oBAAuCC,EAAvC,oBAAoD/Z,EAApD,YAAwE8Z,EAAxE,YACRE,aAAc,CACZC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,EAAG,2BACHC,GAAI,uCACJC,GAAI,uCACJC,GAAI,yCAIK1a,GAAS,CACpBoN,IAAK,eACLvN,KAAM,8EACN0N,MAAO,kCACPuF,OAAQ,4BACRf,aAAc,qBACdD,YAAa,kEACb/N,IAAK,gCACL4W,OAAQ,SAACxD,GAAD,MAAoB,CAC1BE,EAAGF,KAIMyD,GAAQ,CACnBxN,IAAK,eACLvN,KAAM,+EACN0N,MAAO,qBACPuF,OAAQ,4BACRzF,MAAO,CAAC,gBACRyE,YAAa,sFACb/N,IAAK,SAACoT,GAAD,kDAAwD0D,mBAAmB1D,GAA3E,6CACL2D,sBAAuB,SAACzZ,GAAD,iFAAoFA,IAC3G0Z,oBAAqB,SAAC1Z,GAAD,gFAAmFA,IACxG2Z,cAAe,SAAC3Z,GAAD,kEAAqEA,IACpF4Z,gBAAiB,SAAC5Z,GAAD,kDAAqDA,EAArD,WACjB6Z,eAAgB,SAAC7Z,GAAD,kDAAqDA,EAArD,WAChB8Z,MAAO,CACL,eAAM,aACN,eAAM,cACN,eAAM,eACN,UAAM,MACN,gBAAO,cACP,UAAM,YACN,UAAM,aACN,WAAO,eAETC,SAAU,SAAChJ,GAAD,gBAAoBA,EAApB,WACViJ,WAAY,SAACha,EAAY+S,GAAb,gEAAiFA,EAAjF,YAAyF/S,EAAzF,aACZia,YAAa,SAACja,EAAY+S,EAAcmH,GAA3B,qEAAwGA,EAAU,QAAU,GAA5H,YAAkInH,EAAlI,YAA0I/S,EAA1I,aACbma,WAAY,SAACna,GAAD,qEAAwEA,EAAxE,uBACZoa,YAAa,SAACpa,EAAYka,GAAb,qEAA0FA,EAAU,QAAU,GAA9G,gBAAwHla,EAAxH,wBAGFqa,GAAO,CAClBtO,IAAK,eACLvN,KAAM,8EACN0N,MAAO,qBACPuF,OAAQ,eACRhB,YAAa,kEACb6J,WAAY,SACZC,WAAY,qDACZC,WAAY,kCACZC,aAAc,0DACdC,gBAAiB,SAAC1a,GAAD,6EAAgFA,EAAhF,SACjB2a,eAAgB,SAAC3a,GAAD,oEAAuEA,EAAvE,SAChBzB,KAAM,CACJqc,WAAY,eACZC,UAAW,eACXC,iBAAkB,0BAClBC,gBAAiB,gCACjBC,sBAAuB,8BACvBC,qBAAsB,gCAIbC,GAAW,CACtBnP,IAAK,eACLvN,KAAM,kEACN0N,MAAO,qEACPuE,YAAa,iJACbC,aAAc,eACdyK,UAAW,qBACXzG,QAAS,2gBACT0G,aAAc,SACdC,OAAQ,CACNC,KAAM,OACNC,KAAM,QAER/Q,MAAO,CACLgR,WAAY,kJACZC,WAAY,SAACC,GAAD,gBAAqB/M,KAAKgN,EAAED,EAAM,iBAAlC,oDC1EDE,GApIA,WACb,IAAM1L,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACH,eAAC,GAAD,CAAaxE,QAAShN,GAAtB,UACA,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,0DACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,wFACA,0MACA,2OACA,yEACA,cAAC,GAAD,CAAWkF,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,4JAGJ,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,gEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,qBAAKtQ,UAAU,aAAaU,IAAK2U,EAAQ9D,SACzC,sCACA,cAAC,GAAD,CAAWiE,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,eAAC,GAAD,WACE,0KACA,cAAC,GAAD,iLAKJ,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,gEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,8BAAK,mBAAGlQ,KAAK,+BAA+B4F,OAAO,SAASC,IAAI,aAA3D,4CACL,qBAAKjG,UAAU,aAAaU,IAAI,2IAChC,cAAC,GAAD,CAAW8U,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,kKAGJ,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,gEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAY0H,MAAM,4BAAQ1P,KAAK,gjBAC/B,cAAC,GAAD,CAAY0P,MAAM,wEAAiB1P,KAAK,klBACxC,cAAC,GAAD,CAAY0P,MAAM,8EAAkB1P,KAAK,6lBACzC,uCACA,cAAC,GAAD,CAAWkN,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,qLAGJ,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,sDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,kDACA,gCAAM1M,EAAN,YACA,cAAC,GAAD,CACEgO,MAAM,6IACNtJ,KAAK,2LAIX,cAAC,GAAD,UACE,gCAAK,mBAAGlI,KAAK,yBAAyB4F,OAAO,SAASC,IAAI,aAArD,4BAAL,6FAGJ,eAAC,GAAD,CAAa6K,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,iEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,8BAAK,mBAAGlQ,KAAK,kHAAkH4F,OAAO,SAASC,IAAI,aAA9I,kEACL,gFACA,cAAC,GAAD,CACE2L,MAAM,gIACNtJ,KAAK,gEAEP,cAAC,GAAD,CAAWkN,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,6HAEF,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,oDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACA,qBAAK5P,IAAG,UAAKL,GAAL,wBACN,cAAC,GAAD,CAAWmV,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,iHAEF,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,8CACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACA,qBAAK5P,IAAG,UAAKL,GAAL,uBACN,cAAC,GAAD,CAAWmV,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,gHAEF,eAAC,GAAD,CAAa5E,QAAShN,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYwM,SAAS,QAArB,iDACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,uCACA,cAAC,GAAD,CAAYA,SAAS,QAArB,4CACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,wCACA,cAAC,GAAD,CAAYA,SAAS,QAArB,wCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,yCAEF,cAAC,GAAD,oJCvIA0Q,GAAO,SAACC,GAAD,gBAAmBA,EAAKC,cAAxB,kBAA0CD,EAAKE,WAAa,EAA5D,kBAAkEF,EAAKG,UAAvE,WAcAC,GAAS,CACpB,eAAM,eAAM,eACZ,eAAM,eAAM,eACZ,eAAM,gBAGKC,GAAY,CACvBpQ,IAAK,qBACLvN,KAAM,wEACN0N,MAAO,eACPuF,OAAQ,4BACR2K,MAAO,eACP3L,YAAa,4HACb4L,wBAAyB,IAAIrR,KAAK,KAAM,EAAQ,GAChDsR,WAAY,CACVC,eAAI,CAAEC,SAAU,GAAIC,gBAAiB,GACrCC,eAAI,CAAEF,SAAU,GAAIC,gBAAiB,GACrCE,eAAI,CAAEH,SAAU,GAAIC,gBAAiB,GACrCG,eAAI,CAAEJ,SAAU,GAAIC,gBAAiB,GACrCI,eAAI,CAAEL,SAAU,GAAIC,gBAAiB,GACrCK,eAAI,CAAEN,SAAU,GAAIC,gBAAiB,GACrCM,eAAI,CAAEP,SAAU,GAAIC,gBAAiB,GACrCO,eAAI,CAAER,SAAU,GAAIC,gBAAiB,IAEvCrN,MAAO,SAAC3P,GAAD,gBAAqBA,EAArB,wDACPwd,SAAU,kCACVC,eAAgB,SAAC/E,GAAD,gBlCoCa,ekCpCiCgF,OAAOhF,IAArD,OlCqCS,ekCrCyEgF,OAAO,IAAMhF,KAC/GiF,aAAc,SAACC,GAAD,gBAAsBA,IACpCC,aAAc,SAACC,GAAD,0CAA2BA,EAA3B,WACdC,UAAW,SAAC1B,GAAD,0CAAyBD,GAAKC,KACzC2B,eAAgB,SAAC3B,GAAD,0CAAyBD,GAAKC,KAC9C4B,gBAAiB,SAACH,GAAD,2CAA4BA,EAA5B,WACjBI,UAAW,SAACJ,GAAD,qCAA2BA,EAA3B,WACXK,WAAY,SAACzF,GAAD,oCAA6BA,EAAQ0F,QAAQ,GAA7C,MACZC,IAAK,CACH/R,IAAK,2BACLvN,KAAM,2FACN0N,MAAO,eACPF,MAAO,CAAC,gBACRyE,YAAa,+EACbsN,gBAAiB,GACjBnM,kBAAmB,GACnBoM,YAAa,GACbC,oBAAqB,SAACxe,GAAD,gBAAqBA,EAArB,iJACrBye,yBAA0B,SAACze,GAAD,gBAAqBA,EAArB,iFAC1B0e,wBAAyB,mHACzBC,2BAA4B,mBAC5BC,sBAAuB,sJACvBC,wBAAyB,2BAASpC,GAAOxb,KAAK,QAC9C6J,QAAS,SAAC9K,GAAD,gBlCoDkB,ekCpDlB,YAA8CuO,GAAOvO,GAArD,+DAEX2U,KAAM,CACJrI,IAAK,eACLvN,KAAM,wEACN6V,eAAgB,GAChBC,MAAO,SAACiK,GAAD,gBAA+C9f,GAA/C,OAA0E8f,EAAK9e,KAA/E,cAAyFoc,GAAK0C,EAAKC,aAE5GC,OAAQ,CACN1S,IAAK,2BACLvN,KAAM,wEACN0N,MAAO,eACPuE,YAAa,+EACbzE,MAAO,CAAC,eAAM,eAAM,4BACpBzB,QAAS,SAAC9K,GAAD,gBlCsCkB,ekCtClB,YAA8CuO,GAAOvO,GAArD,kFAEX+K,MAAO,CACLkU,UAAW,qFACXC,aAAc,8GACdC,cAAe,SAACxN,GAAD,oEAAgCA,EAAhC,kDACfyN,oBAAqB,+EACrBC,uBAAwB,+EACxBC,wBAAyB,yFACzBC,kBAAkB,GAAD,OAAK9C,GAAOpc,KAAI,SAAAud,GAAK,OAAIrP,GAAOqP,MAAQ3c,KAAK,MAA7C,sECLNue,GA5EC,WACd,IAAM/O,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAaxE,QAAS/M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYuM,SAAS,QAArB,0CACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,wFACA,qBAAKjF,MAAO,CAAEgZ,UAAW,aAAzB,SAAyC,aAAI3R,MAAM,KAAKiI,QAAQ1V,KAAI,iBnC0D/C,oBmCzDrB,kEACA,+CACA,uFACA,uFACA,uEACA,+DACA,mEAGJ,cAAC,GAAD,UACE,gIAGJ,eAAC,GAAD,CAAa6L,QAAS/M,GAAkBkf,IAAKlS,OAAQhN,GAArD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYuM,SAAS,QAArB,mEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,kHACA,mJACA,sDAEF,cAAC,GAAD,CAAYA,SAAS,QAArB,sBACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,sLACA,oJAEF,cAAC,GAAD,CAAYA,SAAS,QAArB,0BACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,yFAIF,cAAC,GAAD,UACE,0HAGJ,eAAC,GAAD,CAAaQ,QAAS/M,GAAkBwV,KAAMxI,OAAQhN,GAAtD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYuM,SAAS,QAArB,oDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,+EACA,sCACA,cAAC,GAAD,CAAWkF,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,gIAGJ,eAAC,GAAD,CAAa5E,QAAS/M,GAAkB6f,OAAQ7S,OAAQhN,GAAxD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYuM,SAAS,QAArB,mEACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,4GAIF,cAAC,GAAD,UACE,iHC1EKtM,GAAQ,CACnBkN,IAAK,eACLvN,KAAM,oJACN2gB,kBAAmB,wFACnBC,2BAA4B,iEAC5BC,wBAAyB,kDACzBC,YAAa,kEACbC,QAAS,0DACTC,gBAAiB,uEACjBC,UAAW,8DACXC,WAAY,0DACZC,gBAAiB,8DACjBC,oBAAqB,2EACrBC,SAAU,8GACVC,iBAAkB,SAAAC,GAAO,gBAAOA,EAAP,mBACzBC,aAAc,SAACC,EAAOpY,GAAR,gFAAmFoY,EAAnF,YAA4FpY,EAA5F,SACdqY,UAAW,SAAAD,GAAK,mDAA0CA,IAC1DE,8BAA+B,SAACC,EAAmBtK,GAApB,MAAuC,CACpEuK,UAAWvK,EACX/O,IAAKqZ,EAAIE,gBAEXC,2BAA4B,SAACzK,GAAD,MAAoB,CAC9C0K,KAAM1K,EACN2K,EAAG,UACHC,GAAI,OAENC,iBAAkB,SAACP,EAAmBpgB,GAApB,MAAoC,CACpD4gB,SAAU5gB,EACV+G,IAAKqZ,EAAIE,gBAEXO,mBAAoB,SAACT,EAAmBpgB,GAApB,MAAoC,CACtD8gB,QAAS9gB,EACT+G,IAAKqZ,EAAIE,cACT/P,MAAO,IAETwQ,gBAAiB,SAACX,EAAmBpgB,GAApB,MAAoC,CACnD8gB,QAAS9gB,EACT+G,IAAKqZ,EAAIE,gBAEXU,eAAgB,SAACZ,EAAmBpgB,GAApB,MAAoC,CAClDigB,MAAOjgB,EACP+G,IAAKqZ,EAAIE,gBAEXW,mBAAoB,SAACb,EAAmBpgB,GAApB,MAAoC,CACtD8gB,QAAS9gB,EACT+G,IAAKqZ,EAAIE,cACTY,gBAAiB,IACjBC,0BAA2B,MAE7BC,cAAe,SAAChB,EAAmBpgB,GAApB,MAAoC,CACjD8gB,QAAS9gB,EACT+G,IAAKqZ,EAAIE,cACTe,aAAc,WAEhBC,SAAU,SAACC,GAAD,wDAAiCA,GAAUA,EAAS,IAAI1D,QAAQ,GAAK,EAArE,iBACV2D,eAAgB,SAACD,GAAD,gBAAuBA,GAAUA,EAAS,IAAI1D,QAAQ,GAAK,EAA3D,iBAChBrT,MAAO,CACLiX,eAAgB,kGAChBC,YAAa,6HAIJC,GAAU,CACrB5V,IAAK,qBACLvN,KAAM,iGACN0N,MAAO,6BACP0V,cAAe,CACbC,EAAG,2BACHnJ,EAAG,qBACHC,EAAG,eACHC,EAAG,4BACHC,EAAG,sBACHC,EAAG,sDACHC,EAAG,yCAEL+I,cAAe,SAACC,GAAD,gBAAqB/T,GAAO+T,GAA5B,8BACfC,WAAY,SAACC,GACX,IAAMnG,EAAO,IAAI9Q,KAAKiX,GACtB,MAAM,GAAN,OAAUnG,EAAKoG,iBAAf,kBAAoCpG,EAAKqG,cAAgB,EAAzD,8BAEFC,YAAa,SAACH,GACZ,IAAMI,EAAW,IAAIrX,MAAK,IAAIA,MAAOsX,UAAY,IAAItX,KAAKiX,GAAWK,WAE/DC,EAAO,CACXC,KAAMC,KAAKC,MAAML,EAASH,iBAAmB,MAC7CS,MAAOF,KAAKC,MAAML,EAASF,cAAgB,IAC3CS,KAAMH,KAAKC,MAAML,EAASQ,aAAe,GAEzCC,IAAKL,KAAKC,OAAOL,EAASQ,aAAe,GAAK,IAC9CE,KAAMN,KAAKC,MAAML,EAASW,cAAgB,IAC1CzB,OAAQkB,KAAKC,MAAML,EAASY,gBAAkB,KAG1CC,EAAOX,EAAKC,KAAO,EAAZ,UACND,EAAKC,KADC,UAETD,EAAKC,MAAQD,EAAKI,MAAlB,UACKJ,EAAKC,KADV,kBACmBD,EAAKI,MADxB,gBAEEJ,EAAKI,MAAQ,EAAb,UACKJ,EAAKI,MADV,gBAEEJ,EAAKK,KAAL,UACKL,EAAKK,KADV,UAEEL,EAAKO,IAAM,EAAX,UACKP,EAAKO,IADV,UAEEP,EAAKO,KAAOP,EAAKQ,KAAjB,UACKR,EAAKO,IADV,kBACkBP,EAAKQ,KADvB,gBAEER,EAAKQ,KAAO,EAAZ,UACKR,EAAKQ,KADV,gBAEER,EAAKQ,MAAQR,EAAKhB,OAAlB,UACKgB,EAAKQ,KADV,wBACoBR,EAAKhB,OADzB,oBAEKkB,KAAKrR,IAAImR,EAAKhB,OAAQ,GAF3B,UAGhB,MAAM,oCAAN,OAAkB2B,EAAlB,YAEF9T,MAAO,SAAC3P,EAAc0jB,GAAf,gBAAmCA,GAAnC,OAA0C1jB,IACjD2jB,aAAc,4BACdC,UAAW,sBACXC,kBAAmB,4EACnBC,cAAe,kCACfC,QAAS,aACTC,SAAU,sBACVC,YAAa,sBACbC,MAAO,SAACC,GAAD,wBAA8B5V,GAAO4V,EAAMngB,cAClDogB,QAAS,SAACC,GAAD,+BAA4B9V,GAAO8V,EAAQ/f,OAAON,YAAlD,WACTsgB,MAAO,SAACC,GAAD,+BAAgChW,GAAOgW,EAAWvgB,YAAlD,WACPwgB,UAAW,SAAClC,GAAD,gBAAwDtjB,EAAxD,YAA4EuP,GAAO+T,EAAKtiB,MAAxF,eAAoGsiB,EAAKmC,gBAAkB,IAAIrG,QAAQ,GAAvI,kBAGAsG,GAAS,CACpBpY,IAAK,eACLvN,KAAM,0HACN0N,MAAO,8BAGIkY,GAAU,CACrBrY,IAAK,iCACLvN,KAAM,oJACN0N,MAAO,6BACPmY,eAAgB,GAChBC,UAAW,GAGAC,GAAU,CACrBxY,IAAK,eACLvN,KAAM,kGACNwN,MAAO,CAAC,4BACRE,MAAO,qBACPuI,WAAY,sHACZhD,OAAQ,eACR+S,QAAS,SAAAC,GAAO,8DAAkBA,KAGvBC,GAAM,CACjB3Y,IAAK,2BACLvN,KAAM,8EACNoX,WAAY,kFACZyO,eAAgB,GAChBM,YAAa,yDACbC,WAAY,SAACnX,EAAasU,GAAd,gBAAoCtU,EAApC,aAA4CO,GAAO+T,EAAK,MACpE8C,gBAAiB,SAAC9C,GAAD,gBAAuBtjB,EAAvB,YAA2CsjB,EAAK,GAAhD,oBAAyDA,EAAK,GAA9D,YC1DJ+C,GA5FD,WACZ,IAAM5U,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAaxE,QAAS9M,GAAe+M,OAAQ/M,GAA7C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYsM,SAAS,QAArB,6DACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,2CACA,cAAC,GAAD,CAAY0H,MAAM,4BAAQ1P,KAAM,qCAAE,2DAAe,6CAAqB,iEACtE,cAAC,GAAD,CAAY0P,MAAM,4EAAqB1P,KAAK,+DAC5C,cAAC,GAAD,CAAasJ,MAAM,qMAAqMtJ,KAAK,gDAGjO,eAAC,GAAD,WACE,oLACA,uJAAgC,KAAhC,mGACA,kFAAgD,KAAhD,iBACA,kGAAgE,KAAhE,gCAGJ,eAAC,GAAD,CAAawI,QAAS9M,GAAc+M,OAAQ/M,GAA5C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYsM,SAAS,QAArB,uDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAaL,OAAQ,CAAEsB,OAAQ,6MAA8M3M,KAAM,6BACnP,gGAGJ,cAAC,GAAD,UACE,+LAGJ,eAAC,GAAD,CAAakM,QAAS9M,GAAe+M,OAAQ/M,GAA7C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYsM,SAAS,QAArB,yEACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,2CACA,gCAAM1M,EAAN,wCACA,gCAAMA,EAAN,0CACA,gCAAMA,EAAN,0CACA,gCAAMA,EAAN,iCACA,gCAAMA,EAAN,oDACA,gCAAMA,EAAN,4CACA,gCAAMA,EAAN,0CACA,gCAAMA,EAAN,mCACA,gCAAMA,EAAN,mCACA,gCAAMA,EAAN,2DACA,sCACA,cAAC,GAAD,CAAW4R,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,4MAGJ,eAAC,GAAD,CAAa5E,QAAS9M,GAAe+M,OAAQ/M,GAA7C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYsM,SAAS,QAArB,6DACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,8BAAK,mBAAGlQ,KAAK,yIAAyI4F,OAAO,SAASC,IAAI,aAArK,8BACL,yFAGJ,cAAC,GAAD,UACE,oJAGJ,eAAC,GAAD,CAAa6K,QAAS9M,GAAW+M,OAAQ/M,GAAzC,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYsM,SAAS,QAArB,0DACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAY0H,MAAM,sCAAsC1P,KAAK,2CAC7D,cAAC,GAAD,CAAY0P,MAAM,YAAY1P,KAAK,yCACnC,cAAC,GAAD,CAAY0P,MAAM,mCAAmC1P,KAAK,yCAC1D,cAAC,GAAD,CAAY0P,MAAM,aAAa1P,KAAK,yCACpC,cAAC,GAAD,CAAY0P,MAAM,kBAAkB1P,KAAK,yCACzC,cAAC,GAAD,CAAasJ,MAAM,qMAAqMtJ,KAAK,yEAC7N,cAAC,GAAD,CAAWkN,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,iMCvFO7E,I,MAPV,SAAC,GAAyB,IAAvBmH,EAAsB,EAAtBA,MAAOpW,EAAe,EAAfA,SACb,OAAO,sBAAK5B,UAAU,4BAAf,UACL,qBAAKA,UAAU,qBAAf,SAAqCgY,IACpCpW,OCDQqC,GAAO,CAClBiN,IAAK,qBACLvN,KAAM,2FACNumB,WAAY,8EACZC,OAAQ,eACR5V,MAAO,SAAC6V,GAAD,gBAA0BxmB,EAA1B,YAAwCwmB,EAAxC,2EACPlH,gBAAiB,IAYND,GAAM,CACjB/R,IAAK,2BACLvN,KAAM,8EACN0N,MAAO,4DACPF,MAAO,CAAC,gBACRkZ,cAAe,qJACf3a,QAAS,SAAC9K,GAAD,gBAAqBkP,KAAKgN,EAAElc,EAAM,iBAAlC,qCACT0lB,aAAc,4FACd3a,MAAO,CACLqU,oBAAoB,4DAAD,OAAiB3Q,GAAK,sBAAtB,YAAgCA,GAAK,4BAArC,0GACnBkX,eAAgB,oPAChBC,eAAgB,sFAChBC,oBAAoB,6DAAD,OAAkBxmB,GAAKif,gBAAvB,iDACnBwH,mBAAmB,0EAAD,OAAqBzmB,GAAKif,gBAA1B,mDAITU,GAAS,CACpB1S,IAAK,2BACLvN,KAAM,wEACN0N,MAAO,4DACPsZ,iBAAkB,qBAClBC,kBAAmB,eACnBC,gBAAiB,4DACjBC,iBAAkB,sHAClB3Z,MAAO,CAAC,eAAM,eAAM,4BACpBzB,QAAS,SAAC9K,GAAD,gBAAqBkP,KAAKgN,EAAElc,EAAM,iBAAlC,qCACT+K,MAAO,CACLsU,uBAAuB,4DAAD,OAAiB5Q,GAAK,sBAAtB,YAAgCA,GAAK,4BAArC,0GACtBwQ,UAAW,qEAIFtK,GAAO,CAClBrI,IAAK,eACLvN,KAAMkO,GAAF,gUAGJR,MAAO,qBACPuI,WAAY,qFACZmR,WAAY,2DACZC,cAAe,GACfvb,KAAM,CACJf,MAAO,QACPzK,KAAM,QAERL,MAAO,CACL8K,MAAO9K,EACPK,KAAML,GAER+L,MAAO,CACLsb,SAAU,uHAIDC,GAAO,CAClBha,IAAK,2BACLvN,KAAM,qHACN0N,MAAO,wBACP8Z,YAAa,eACbC,WAAY,mSACZja,MAAO,CAAC,gBACRsC,IAAK,CACH4X,kBAAmB,SAACC,GAAD,mEAAuCA,EAAvC,kFACnBC,qBAAsB,gLAExB5b,MAAO,CACL6b,yBAAyB,4DAAD,OAAiBnY,GAAK,iBAAtB,sCCyBb5C,GAtGF,WACX,IAAM4E,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAa0C,MAAM,kCAAnB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAY1H,SAAS,QAArB,oDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAaL,OAAQ,CACnBrL,KAAM,OACN2M,OAAQ,oDAEV,qBAAK7Q,IAAI,4GAGb,sBAAK2K,MAAO,CAAEogB,UAAW,QAAzB,UACE,cAAC,GAAD,UACE,qBAAKpgB,MAAO,CAAER,MAAO,QAArB,yTAEF,qBAAKQ,MAAO,CAAEqgB,SAAU,SAAxB,gCACA,6GACA,oHACA,uBACA,8BAAK,cAAC,IAAD,CAAM/pB,GAAG,QAAQ0J,MAAO,CAAEqgB,SAAU,SAApC,kEACL,uBACA,+QAGJ,eAAC,GAAD,CAAa5a,QAAS7M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYqM,SAAS,QAArB,uCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,oBAAGlQ,KAAK,4CAAR,UACGwD,EADH,oIAKJ,cAAC,GAAD,UACE,6IAGJ,eAAC,GAAD,CAAakN,QAAS7M,GAAU8M,OAAQ9M,GAAxC,UACE,eAAC,GAAD,WACE,eAAC,GAAD,CAAYqM,SAAS,QAArB,UACE,qBAAK5P,IAAK2U,EAAQ9D,OAAQvR,UAAU,eACpC,iHAEF,cAAC,GAAD,CAAYiQ,OAAQoF,EAAS/E,SAAS,OAAtC,+EAIF,eAAC,GAAD,WACE,8GACA,qBAAK5P,IAAI,8FACT,yNAGJ,eAAC,GAAD,CAAaoQ,QAAS7M,GAAa8M,OAAQ9M,GAA3C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYqM,SAAS,QAArB,yFACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,+EAIF,cAAC,GAAD,UACE,6GAGJ,eAAC,GAAD,CAAaQ,QAAS7M,GAAW8M,OAAQ9M,GAAzC,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYqM,SAAS,QAArB,oDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,gCAAM1M,EAAN,mBACA,gCAAMA,EAAN,mBACA,gCAAMA,EAAN,+BACA,sCACA,cAAC,GAAD,CAAW4R,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAI,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGlI,cAAC,GAAD,UACE,6IAGJ,eAAC,GAAD,CAAa5E,QAAS7M,GAAW8M,OAAQ9M,GAAzC,UACE,eAAC,GAAD,WACE,eAAC,GAAD,CAAYqM,SAAS,QAArB,gEAAwC,cAAC,GAAD,CAAS1L,KAAK,WACtD,eAAC,GAAD,CAAYqL,OAAQoF,EAAS/E,SAAS,OAAtC,gEACa,cAAC,GAAD,CAAS1L,KAAK,QAD3B,sFAIF,eAAC,GAAD,WACE,qJACA,gOCxGK+mB,GAAgB,CAC3Bza,IAAK,2BACLvN,KAAM,yGACNsf,IAAK,CACH/R,IAAK,2BACLvN,KAAM,yGACN0N,MAAO,iEACPF,MAAO,CAAC,gBACRya,MAAO,SAACC,EAAc3mB,EAAc4mB,GAA7B,gBAAkDD,EAAIrrB,KAAKoI,YAA3D,OAAwEkL,KAAKC,EAAE8X,EAAIE,eAAe7mB,GAAQ,iBAA1G,sEAAiI4mB,EAAM7mB,KAAI,SAAA+mB,GAAI,OAAIA,EAAKpjB,cAAY/C,KAAK,MAAzK,4CAET0T,KAAM,CACJrI,IAAK,eACLvN,KAAM,4HACNsoB,yBAA0B,SAACJ,GAAD,yEAAiCA,EAAIrrB,KAAKoI,WAA1C,yDAC1BsjB,aAAc,SAACJ,GAAD,8FAAwCA,EAAM7mB,KAAI,SAAA+mB,GAAI,OAAIA,EAAKpjB,cAAY/C,KAAK,SAEhG+d,OAAQ,CACN1S,IAAK,2BACLvN,KAAM,4JACN0N,MAAO,iEACPF,MAAO,CAAC,eAAM,eAAM,4BACpBgb,QAAS,SAACN,EAAc3mB,EAAc4mB,GAA7B,gBAAoDD,EAAIrrB,KAAKoI,YAA7D,OAA0EkL,KAAKC,EAAE8X,EAAIE,eAAe7mB,GAAQ,iBAA5G,4EAAoI4mB,EAAM7mB,KAAI,SAAA+mB,GAAI,MpB+BpI,aoB/BoJA,EpB+BpJ,QoB/B2JnmB,KAAK,MAA9K,4CAEX8J,MAAO,CACLyc,aAAc,mEACdC,mBAAoB,oICqBTC,GA7CC,WACd,IAAMjX,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAaxE,QAAS5M,GAAsB+e,IAAKlS,OAAQ7M,GAAzD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYoM,SAAS,QAArB,2EACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,4KAGJ,eAAC,GAAD,WACE,4LACA,sUAGJ,eAAC,GAAD,CAAaQ,QAAS5M,GAAsBqV,KAAMxI,OAAQ7M,GAA1D,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYoM,SAAS,QAArB,0DACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,0HAGJ,cAAC,GAAD,UACE,iKAGJ,eAAC,GAAD,CAAaQ,QAAS5M,GAAsB0f,OAAQ7S,OAAQ7M,GAA5D,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYoM,SAAS,QAArB,2EACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,kLAGJ,cAAC,GAAD,UACE,2M,QCjCKic,GAAQ,UCORC,GAGH,SAHGA,GAKF,W,StBtBC1Z,O,aAAAA,I,aAAAA,I,aAAAA,I,eAAAA,I,oBAAAA,Q,cAQAC,O,eAAAA,I,iBAAAA,I,eAAAA,I,kBAAAA,Q,cAOAC,O,eAAAA,I,qBAAAA,I,eAAAA,I,gBAAAA,Q,cAOAC,O,eAAAA,I,mBAAAA,I,eAAAA,I,wBAAAA,Q,cAOAC,O,qBAAAA,I,aAAAA,I,aAAAA,I,gBAAAA,Q,KAQLV,GAAM,GAAGvN,KAAI,SAAAuT,GAAK,MAAK,CAAEnX,KAAMyR,GAAU2Z,IAAKjU,YAC9ChG,GAAM,GAAGvN,KAAI,SAAAuT,GAAK,MAAK,CAAEnX,KAAMyR,GAAU4Z,IAAKlU,YAC9ChG,GAAM,GAAGvN,KAAI,SAAAuT,GAAK,MAAK,CAAEnX,KAAMyR,GAAU6Z,IAAKnU,YAC7ChG,GAAM,GAAGvN,KAAI,SAAAuT,GAAK,MAAK,CAAEnX,KAAMyR,GAAU8Z,KAAMpU,YAC7ChG,GAAM,GAAGvN,KAAI,SAAAuT,GAAK,MAAK,CAAEnX,KAAMyR,GAAU+Z,OAAQrU,YALpD,I,MuBtCKsU,GvB8CNC,GAAY,CAAC,SAAK,SAAK,SAAK,UAC5BC,GAAc,CAAC,SAAK,SAAK,UAWlBppB,IARI,sBACdkP,GAAU2Z,KAAM,SAACjU,GAAD,gBAAsBA,EAAQ,EAA9B,aADF,gBAEd1F,GAAU4Z,KAAM,SAAClU,GAAD,gBAAsBA,EAAQ,EAA9B,aAFF,gBAGd1F,GAAU6Z,KAAM,SAACnU,GAAD,gBAAsBA,EAAQ,EAA9B,aAHF,gBAId1F,GAAU8Z,MAAO,SAACpU,GAAD,OAAmBuU,GAAUvU,MAJhC,gBAKd1F,GAAU+Z,QAAS,SAACrU,GAAD,OAAmBwU,GAAYxU,MAGnC,sBACf1F,GAAU2Z,IAAM,CACf,CAAE7nB,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,wBAVN,gBAYf2N,GAAU4Z,IAAM,CACf,CAAE9nB,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,wBArBN,gBAuBf2N,GAAU6Z,IAAM,CACf,CAAE/nB,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,OAAQO,GAAI,wBAhCN,gBAkCf2N,GAAU8Z,KAAO,CAChB,CAAEhoB,KAAM,MAAOO,GAAI,sBACnB,CAAEP,KAAM,MAAOO,GAAI,sBACnB,CAAEP,KAAM,MAAOO,GAAI,sBACnB,CAAEP,KAAM,MAAOO,GAAI,wBAtCL,gBAwCf2N,GAAU+Z,OAAS,CAClB,CAAEjoB,KAAM,OAAQO,GAAI,sBACpB,CAAEP,KAAM,QAASO,GAAI,sBACrB,CAAEP,KAAM,OAAQO,GAAI,wBA3CN,8CA8Cb2N,GAAU2Z,IAAM,CAAE7nB,KAAM,WAAYO,GAAI,uBA9C3B,gBA+Cb2N,GAAU4Z,IAAM,CAAE9nB,KAAM,WAAYO,GAAI,uBA/C3B,gBAgDb2N,GAAU6Z,IAAM,CAAE/nB,KAAM,WAAYO,GAAI,uBAhD3B,4BAkDV,CAAEP,KAAM,OAAQO,GAAI,uBAlDV,yBAmDR,CACN,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,wBArDV,IAyDQ,sBACvB2N,GAAU2Z,IAAM,CACf,CAAE7nB,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,wBAVF,gBAYvB2N,GAAU4Z,IAAM,CACf,CAAE9nB,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,wBArBF,gBAuBvB2N,GAAU6Z,IAAM,CACf,CAAE/nB,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,WAAYO,GAAI,wBAhCF,gBAkCvB2N,GAAU8Z,KAAO,CAChB,CAAEhoB,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,wBAtCD,gBAwCvB2N,GAAU+Z,OAAS,CAClB,CAAEjoB,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,YAAaO,GAAI,sBACzB,CAAEP,KAAM,WAAYO,GAAI,wBA3CF,8CA8CrB2N,GAAU2Z,IAAM,CAAE7nB,KAAM,eAAgBO,GAAI,uBA9CvB,gBA+CrB2N,GAAU4Z,IAAM,CAAE9nB,KAAM,eAAgBO,GAAI,uBA/CvB,gBAgDrB2N,GAAU6Z,IAAM,CAAE/nB,KAAM,eAAgBO,GAAI,uBAhDvB,KAoDE,sBACzB2N,GAAU2Z,IAAM,CACf,CAAE7nB,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,wBAVC,gBAYzB2N,GAAU4Z,IAAM,CACf,CAAE9nB,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,wBArBC,gBAuBzB2N,GAAU6Z,IAAM,CACf,CAAE/nB,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,UAAWO,GAAI,wBAhCC,gBAkCzB2N,GAAU8Z,KAAO,CAChB,CAAEhoB,KAAM,SAAUO,GAAI,sBACtB,CAAEP,KAAM,SAAUO,GAAI,sBACtB,CAAEP,KAAM,SAAUO,GAAI,sBACtB,CAAEP,KAAM,SAAUO,GAAI,wBAtCE,gBAwCzB2N,GAAU+Z,OAAS,CAClB,CAAEjoB,KAAM,UAAWO,GAAI,sBACvB,CAAEP,KAAM,WAAYO,GAAI,sBACxB,CAAEP,KAAM,UAAWO,GAAI,wBA3CC,8CA8CvB2N,GAAU2Z,IAAM,CAAE7nB,KAAM,cAAeO,GAAI,uBA9CpB,gBA+CvB2N,GAAU4Z,IAAM,CAAE9nB,KAAM,cAAeO,GAAI,uBA/CpB,gBAgDvB2N,GAAU6Z,IAAM,CAAE/nB,KAAM,cAAeO,GAAI,uBAhDpB,K,sBuBvKhB2nB,O,iBAAAA,I,iBAAAA,I,qBAAAA,I,eAAAA,I,kBAAAA,Q,KAQL,I,2BAAMG,IAAU,sBACpBH,GAAWI,MAAQ,qCADC,gBAEpBJ,GAAWK,KAAO,oCAFE,gBAGpBL,GAAW9pB,MAAQ,qCAHC,gBAIpB8pB,GAAWM,QAAU,uCAJD,gBAKpBN,GAAWO,MAAQ,qCALC,IC6CVC,IDrCE,sBACZ,EAAI,KADQ,gBAEZ,GAAK,KAFO,gBAGZ,GAAK,KAHO,gBAIZ,GAAK,KAJO,wBAKN,SCJK,GAAD,OAAK1pB,EAAL,sHAoCU,CACrBsN,IAAK,qBACLvN,KAAM,8GACN0N,MAAO,4BACPF,MAAO,CAAC,sBACRoc,YAAa,2BACbC,WAAY,iEACZC,eAAgB,SAACxd,GAAD,gBAA4BrM,EAA5B,YAAiDqM,EAAO8H,YAAxD,8BAChB2V,YAAa,SAACltB,EAAmBmtB,GAApB,gBAA6CntB,EAAKoI,WAAlD,YAAgE0kB,GAAQM,KAAKD,GAA7E,sCACbE,YAAa,SAACjE,GAAD,gBAA+BhmB,EAA/B,YAAiDgmB,EAAQ,GAAG7R,YAA5D,YAA2EuV,GAAQM,KAAK,GAAxF,gBAAkGhE,EAAQ,GAAG7R,YAA7G,YAA4HuV,GAAQM,KAAK,GAAzI,MACbE,WAAY,SAAClE,EAAwBmE,EAAoBC,GAA7C,gBAAuEV,GAAQM,KAAK,GAApF,YAA0FhE,EAAQ,GAAG7R,YAArG,aAAqHgW,EAArH,aAAoIT,GAAQM,KAAK,GAAjJ,YAAuJhE,EAAQ,GAAG7R,YAAlK,aAAkLiW,IAC9LC,WAAY,CACV,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAC9B,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,IAElCL,KAAM,CAAChqB,EAA4BA,GACnCsqB,YAAa,CACXtqB,EACAA,E9CnEgC,eADF,gB8CwEhCuqB,kBAAkB,GAAD,oBACZ3b,GAAM,IAAIvN,KAAI,SAAAiP,GAAG,gBAAOA,GAAP,O9CYF,c8CbH,a9C8CG,CACpB,eAAM,eAAM,eAAM,eAAM,eACxB,eAAM,eAAM,eAAM,eAAM,eACxB,eAAM,eAAM,eAAM,eAAM,eACxB,eAAM,eAAM,eAAM,eAAM,eACxB,eAAM,eAAM,eAAM,eAAM,eACxB,oB8C9CWka,GAAQ,CACnBld,IAAK,eACLvN,KAAM,+GACN0N,MAAO,4BACPF,MAAO,CAAC,eAAM,gBACdoc,YAAa,2BACbC,WAAY,iEACZC,eAAgB,SAACxd,GAAD,gBAA4BrM,EAA5B,YAA0CqM,EAAO8H,YAAjD,wBAChB2V,YAAa,SAACltB,GAAD,gBAA0BA,EAAKoI,WAA/B,sIACbylB,WAAY,wEACZC,MAAO,CACL,OACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,aACA,aACA,SAEFC,OAAQ,CACNC,KAAM,OACNC,IAAK,MACLC,UAAW,YACXC,GAAI,MAENC,MAAO,CACLJ,KAAM,SAACK,GAAD,kFAA2CA,EAA3C,QAIGC,GAAW,CACtB5d,IAAK,eACLvN,KAAM,kIACN0N,MAAO,4BACPF,MAAO,CAAC,WACRoc,YAAa,2BACbC,WAAY,iEACZC,eAAgB,SAACxd,GAAD,gBAA4BrM,EAA5B,YAAgDqM,EAAO8H,YAAvD,wBAChBkW,WAAY,CACV,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAC9B,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,IAElClrB,QAAM,sBACH,EAAIa,GADD,gBAEH,EAAIA,GAFD,gBAGH,EAAIA,GAHD,gBAIH,EAAIA,GAJD,iBAKF,EAAIA,GALF,IAONmrB,OAAK,sBACF,EHzHc,WGwHZ,gBAEF,EHzHiB,WGuHf,iBAGD,EAAIA,IAHH,IAKLrB,YAAa,SAACltB,EAAmBmtB,GAApB,gBAA6CntB,EAAKoI,WAAlD,YAAgEkmB,GAAS/rB,OAAO4qB,GAAhF,uCAIFqB,GAAY,CACvB9d,IAAK,qBACLvN,KAAM,8GACN0N,MAAO,4BACPkc,YAAa,2BACbC,WAAY,iEACZC,eAAgB,SAACxd,GAAD,gB9CrGA,S8CqGA,YAAwCA,EAAO8H,YAA/C,8BAChBkX,MAAI,sBACD,EAAI,KADH,gBAED,EAAI,KAFH,IAIJC,OAAK,sBACF,EAAI1C,IADF,gBAEF,EAAIA,IAFF,IAILkB,YAAa,SAACltB,EAAmBmtB,GAApB,gBAA6CntB,EAAKoI,WAAlD,YAAgEomB,GAAUC,KAAKtB,GAA/E,uCAGFwB,GAAU,CACrBje,IAAK,qBACLvN,KAAM,4DACN8pB,eAAgB,SAACxd,GAAD,gB9CxBG,e8CwBH,YAA2CA,EAAO8H,YAAlD,8BAChBqX,aAAc,SAAC5uB,EAAmB6uB,EAAeC,GAAnC,gBAA4D9uB,EAAKoI,WAAjE,qCAAoFymB,EAApF,oHAAqHC,EAArH,MACdC,WAAY,wCACZ/X,UAAW,CACT,+IACA,6JACA,8JACAvS,KAAI,SAAAuqB,GAAI,gBAAO5rB,EAAP,YAA2B4rB,MAAQ3pB,KAAK,MAClD4pB,mBAAoB,kCACpBC,kBAAmB,CAAC,GAAD,OACdzC,GAAWH,GAAWI,OADR,kHAEdD,GAAWH,GAAWI,OAFR,4EAGdD,GAAWH,GAAWI,OAHR,oGAIdD,GAAWH,GAAWO,OAJR,kXAKjBxnB,KAAK,MACP8pB,kBAAmB,4BACnBC,iBAAkB,CAChB,0PADgB,UAEb3C,GAAWH,GAAWM,SAFT,iCAGbH,GAAWH,GAAW9pB,OAHT,iCAIbiqB,GAAWH,GAAWK,MAJT,wBAKhBtnB,KAAK,MACPgqB,aAAc,EACdC,UAAW,SAACpa,GAAD,kDAA+BA,IAC1CgY,YAAa,SAACqC,GAAD,gBAA4BA,EAAOnnB,WAAnC,4EACbonB,cAAe,SAACD,GAAD,gBAA4BA,EAAOnnB,WAAnC,kFACfqnB,cAAe,SAACC,EAAqBC,GAAtB,gBAAmDvsB,EAAnD,YAAmEssB,EAAOnY,YAA1E,6CAAiGoY,EAASC,YAA1G,OAAuHD,EAASE,UAAhI,MACfzB,MAAO,CACL0B,SAAU,eACVC,KAAM,SAAC7a,GAAD,gBAAsBA,EAAtB,0BAIG8a,GAAS,CACpBtf,IAAK,qBACLvN,KAAM,4DACN0N,MAAO,+CACP8Z,YAAa,iCACbvR,WAAY,oHACZzI,MAAO,CAAC,iCAAS,kCACjBsc,eAAgB,SAACxd,GAAD,gB9CnEI,e8CmEJ,YAA4CA,EAAO8H,YAAnD,0CAChB0Y,iBAAkB,sMAClBC,WAAY,CACV,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,mEAEFC,YAAa,yCACbC,oBAAqB,0EA4EVC,IAnDM,GAAD,OAAKjtB,EAAL,2CAUF,GAAD,OAAKA,EAAL,oFAGD,CACVktB,GAAcC,OAAO,GACrBD,GAAcC,OAAO,GACrBD,GAAcC,OAAO,IACrB9rB,KAAI,SAAAwQ,GAAK,OAAI5C,GAAQ4C,EAAM7Q,KAAM6Q,EAAMtQ,OAAKU,KAAK,IAClC,CACfirB,GAAcC,OAAO,GACrBD,GAAcC,OAAO,GACrBD,GAAcC,OAAO,GACrBD,GAAcC,OAAO,GACrBD,GAAcC,OAAO,IACrB9rB,KAAI,SAAAwQ,GAAK,OAAI5C,GAAQ4C,EAAM7Q,KAAM6Q,EAAMtQ,OAAKU,KAAK,IA2B7B,CACtBqL,IAAK,eACLvN,KAAM,2FACN0N,MAAO,4BACPkc,YAAa,2BACbC,WAAY,iEACZC,eAAgB,SAACxd,GAAD,gBAA4BrM,EAA5B,YAAkDqM,EAAO8H,YAAzD,wBAChBkW,WAAY,CACV,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAC9B,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,EAAE,EAAG,GAAI,EAAE,GAAI,IAElC+C,eAAa,sBACV,EAAI,GADM,gBAEV,EAAI,GAFM,gBAGV,EAAI,GAHM,gBAIV,EAAI,GAJM,gBAKV,EAAI,GALM,gBAMV,EAAI,GANM,gBAOV,EAAI,GAPM,gBAQV,EAAI,GARM,IAUbC,OAAK,uBACD,E9C5Ka,6B8C2KZ,gBAEF,EAAIrtB,GAFF,gBAGF,EAAIA,GAHF,gBAIF,E9C5T+B,gB8CwT7B,gBAKF,E9C9T6B,gB8CyT3B,IAOLstB,QAAM,uBACF,E9CnNwB,gB8CkNtB,gBAEH,EAAIttB,GAFD,gBAGH,EAAIA,GAHD,IAKNmrB,OAAK,uBACD,EAAIA,IADH,gBAEF,EH7TiB,WG2Tf,gBAGF,EH7Te,WG0Tb,IAKLrB,YAAa,SAACltB,EAAmBmtB,GAApB,gBAA6CntB,EAAKoI,WAAlD,YAAgEioB,GAASI,MAAMtD,GAA/E,wCCnOA5M,GApGA,WACb,IAAM1L,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACH,eAAC,GAAD,CAAaxE,QAAS3M,GAAtB,UACA,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,6DACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,sDAIF,cAAC,GAAD,UACE,kRAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,qDACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,gDAIF,cAAC,GAAD,UACE,+PAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,qDACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,gDAIF,cAAC,GAAD,UACE,mQAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,2DACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,sDAIF,cAAC,GAAD,UACE,8PAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,uCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,sDAIF,cAAC,GAAD,UACE,gQAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,yHACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,sDAIF,eAAC,GAAD,WACE,kSACA,sQAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,iCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,gDAIF,cAAC,GAAD,UACE,sQAGJ,eAAC,GAAD,CAAaQ,QAAS3M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYmM,SAAS,QAArB,iCACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,gDAIF,cAAC,GAAD,UACE,+OCnGK6gB,GAAQ,CACnBjgB,IAAK,eACLvN,KAAM,oKACNytB,KAAM,CACJlgB,IAAK,qBACLvN,KAAM,iHACN0N,MAAO,eACPuI,WAAY,+EACZyX,iBAAkB,2CAClBC,cAAe,SAACC,GAAD,uCAA8CA,IAC7DxC,MAAO,CACL,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,KAAQ,WAEVyC,eAAgB,8FAChBC,cAAe,6DAEjBC,IAAK,CACHxgB,IAAK,eACLvN,KAAM,8HACN0N,MAAO,eACPuI,WAAY,yEACZ+X,qBAAsB,4CACtBC,gBAAiB,CACfC,QAAS,yBAEXC,UAAW,qBACXC,gBAAiB,sGACjBC,eAAgB,SAAC7sB,GAAD,6DAAgEA,EAAhE,SAChB8sB,cAAe,SAACC,EAAgBC,GAAjB,8DAAqFA,EAArF,kBAAqGD,EAArG,kCACfE,iBAAiB,GAAD,OAAKxuB,EAAL,kDAChBmrB,MAAO,CACLsD,SAAU,UACVC,UAAW,UACXC,WAAY,UACZC,YAAa,UACbC,KAAM,UACNC,KAAM,UACNC,SAAU,UACVC,OAAQ,aASDC,GAAc,CACzB3hB,IAAK,2BACLvN,KAAM,oJACNwN,MAAO,CAAC,UACR2hB,KAAM,CACJ5hB,IAAK,eACLvN,KAAM,8EACN0N,MAAO,qBACPuI,WAAY,wGACZmZ,SAAU,gDACVC,eAAgB,CACdC,OAAQ,SAEVC,cAAY,sBACT,EAAI,WADK,gBAET,EAAI,WAFK,gBAGT,EAAI,WAHK,gBAIT,EAAI,WAJK,gBAKT,EAAI,WALK,gBAMT,EAAI,WANK,gBAOT,EAAI,WAPK,gBAQT,EAAI,WARK,MCNDnS,GAlDA,WACb,IAAM1L,EAAU,CACdzQ,KAAM,2BACN2M,OAAO,GAAD,OAAKlR,GAAL,gBAIR,OAFAH,OAAOoV,SAAS,EAAG,GAEZ,qCACL,eAAC,GAAD,CAAaxE,QAAS1M,GAAWgtB,KAAMrgB,OAAQ3M,GAA/C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYkM,SAAS,QAArB,oDACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,UACE,cAAC,GAAD,CAAaL,OAAQ,CACnBsB,OAAQ,iKACR3M,KAAM,0EAER,cAAC,GAAD,CAAW4Q,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAK,CAAED,MjDqB3C,SiDrBqEC,MAAO,GAAK,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAG3K,cAAC,GAAD,UACE,sJAGJ,eAAC,GAAD,CAAa5E,QAAS1M,GAAWstB,IAAK3gB,OAAQ3M,GAA9C,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYkM,SAAS,QAArB,iEACA,cAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,SACE,8EAGJ,cAAC,GAAD,UACE,uLAGJ,eAAC,GAAD,CAAaQ,QAAS1M,GAAtB,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYkM,SAAS,QAArB,mFACA,eAAC,GAAD,CAAYL,OAAQoF,EAAS/E,SAAS,OAAtC,iUAEE,qBAAK5P,IAAI,2HACT,cAAC,GAAD,CAAW8U,MAAO,CAAC,CAAEC,MAAO7R,EAAkB8R,MAAO,GAAK,CAAED,MAAO7R,EAAmB8R,MAAO,GAAK,CAAED,MAAO7R,EAAa8R,MAAO,YAGnI,cAAC,GAAD,UACE,uHCdOyd,I,MAnBC,WACd,OACE,qBAAKnzB,UAAU,oBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2E,KAAI,mBAAcY,EAAa9B,IAAM2vB,UAAWhe,KACvD,cAAC,IAAD,CAAOzQ,KAAI,mBAAcY,EAAiB9B,IAAM2vB,UAAW1Y,KAC3D,cAAC,IAAD,CAAO/V,KAAI,mBAAcY,GAAgB9B,IAAM2vB,UAAWrS,KAC1D,cAAC,IAAD,CAAOpc,KAAI,mBAAcY,GAAiB9B,IAAM2vB,UAAWhP,KAC3D,cAAC,IAAD,CAAOzf,KAAI,mBAAcY,GAAe9B,IAAM2vB,UAAWnJ,KACzD,cAAC,IAAD,CAAOtlB,KAAI,mBAAcY,GAAc9B,IAAM2vB,UAAW3iB,KACxD,cAAC,IAAD,CAAO9L,KAAI,mBAAcY,GAAiB9B,IAAM2vB,UAAW9G,KAC3D,cAAC,IAAD,CAAO3nB,KAAI,mBAAcY,GAAkB9B,IAAM2vB,UAAWC,KAC5D,cAAC,IAAD,CAAO1uB,KAAI,mBAAcY,GAAc9B,IAAM2vB,UAAWE,KACxD,cAAC,IAAD,CAAO3uB,KAAK,aAAayuB,UAAWxsB,YCwB7B2sB,I,MApCF,WACX,IAAM1xB,EAAWC,cACX0C,EAAYF,aAAY,SAACC,GAAD,OAAsBA,EAAMC,aAE1D8F,qBAAU,WACR1C,MAAM,GAAD,OAAIvH,+BAAJ,SAA0C,CAC7C0H,YAAa,YACZE,MAAK,SAAAzH,GAAI,OAAIA,EAAKqN,UAClB5F,MAAK,SAAAzH,GAAI,OAAIqB,EtD1BG,SAACrB,GAAD,MAAiB,CACtCa,KAAMC,EACNG,QAASjB,GsDwBkBgzB,CAAQhzB,SAChC,CAACqB,IAEJ,IAAM4xB,EAAqB/uB,mBAAQ,WACjC,IAAMgB,EAAU,CAAC,kBAIjB,OAHIlB,EAAUmB,MACZD,EAAQE,KAAK,YAERF,EAAQG,KAAK,OACnB,CAACrB,IAEJ,OACE,cAAC,IAAD,UACE,sBAAKxE,UAAU,iBAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAWyzB,EAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9uB,KAAK,QAAQyuB,UAAW3iB,KAC/B,cAAC,IAAD,CAAO9L,KAAK,WAAWyuB,UAAWD,KAClC,cAAC,IAAD,CAAOxuB,KAAK,IAAI+uB,OAAK,EAACN,UAAWltB,KACjC,cAAC,IAAD,CAAOvB,KAAK,IAAIyuB,UAAWxsB,iBCtCxB+sB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5rB,MAAK,YAAkD,IAA/C6rB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHRO,GAAwB,GCDxBA,GAAe,CACnBxuB,MAAM,GCDFwuB,GAIF,GCMWC,GAPKC,YAAgB,CAClC7zB,KCCa,WAA4D,IAA3D+D,EAA0D,uDAJxC,KAIiB+vB,EAAuB,uCACxE,OAAQA,EAAOjzB,MACb,KAAKR,EACH,OAAO,gBACFyzB,EAAO7yB,SAGd,QACE,OAAO8C,IDRXS,OHAa,WAAgD,IAA/CT,EAA8C,uDAAtC4vB,GAAcG,EAAwB,uCAC5D,OAAQA,EAAOjzB,MACb,KAAKP,EACH,OAAO,aACFwzB,EAAO7yB,SAGd,QACE,OAAO8C,IGPXC,UFAa,WAAoD,IAAnDD,EAAkD,uDAA1C4vB,GAAcG,EAA4B,uCAChE,OAAQA,EAAOjzB,MACb,KAAKN,EACH,OAAO,6BACFwD,GADL,IAEEoB,MAAOpB,EAAMoB,OAGjB,QACE,OAAOpB,IERXM,KDKa,WAA+C,IAA9CN,EAA6C,uDAArC4vB,GAAcG,EAAuB,uCAC3D,OAAQA,EAAOjzB,MACb,KAAKL,EAAc,IACTmE,EAAOmvB,EAAO7yB,QAAd0D,GAER,OAAO,6BACFZ,GADL,mBAEGY,EAFH,6BAGOZ,EAAMY,IAHb,IAII6D,SAASzE,EAAMY,KAAOZ,EAAMY,GAAI6D,YAItC,KAAK/H,EACH,IAAMO,EAAM8yB,EAAO7yB,QACnB,OAAOD,EAAI+yB,QAAO,SAAChwB,EAAOY,GAAR,oBAAC,gBACdZ,GADa,mBAEfY,EAAK,CAAE6D,SAAS,OACf,IAEN,KAAK9H,EACH,OAAOmE,OAAOsV,KAAKpW,GAAOgwB,QAAO,SAACC,EAAUrvB,GAC1C,OAAO,6BACFqvB,GADL,mBAEGrvB,EAAK,CAAE6D,SAAS,OAElBzE,GAEL,KAAKpD,EACH,OAAOkE,OAAOsV,KAAKpW,GAAOgwB,QAAO,SAACC,EAAUrvB,GAC1C,OAAO,6BACFqvB,GADL,mBAEGrvB,EAAK,CAAE6D,SAAS,OAElBzE,GAEL,QACE,OAAOA,MGzCPkwB,GAAQC,YAAYN,IAE1BO,IAASnlB,OACP,cAAC,IAAMolB,WAAP,UACE,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJI,SAASC,eAAe,SAM1BnB,Q","file":"static/js/main.db567292.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useReducer, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { useDropzone } from \"react-dropzone\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NotFound from \"./NotFound\";\nimport IconHeaderMenu from \"../component/IconHeaderMenu\";\nimport Loading from \"../component/Loading\";\nimport MasterCheckbox from \"../component/MasterCheckbox\";\nimport ItemCheckbox from \"../component/ItemCheckbox\";\nimport NameInput from \"../component/NameInput\";\nimport IconChat from \"../component/IconChat\";\nimport { BOT_INVITE_LINK } from \"../const\";\nimport { RootState } from \"../redux/reducers\";\nimport { setCheckedIcons } from \"../redux/actions\";\nimport * as URL from \"~/api/const/url\";\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\n\nimport \"./IconList.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"@djthoms/pretty-checkbox\";\n\nenum ItemType {\n  ICON,\n  GROUP\n}\n\nconst IconList: React.FC = () => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const user = useSelector((state: RootState) => state.user);\n  const dispatch = useDispatch();\n\n  const { guildID, groupID } = useParams<{ guildID: string, groupID?: string }>();\n  const [iconGroups, setIconGroups] = useState<IconGroup[] | null>(null);\n  const [icons, setIcons] = useState<Icon[] | null>(null);\n  const [iconGroup, setIconGroup] = useState<IconGroup | null>(null);\n\n  const guild = guilds.find(guild => guild.id === guildID)!;\n  const [iconFetcher, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const modal = withReactContent(Swal);\n  const hasPermission = guild ? guild.hasPermission : false;\n\n  useEffect(() => {\n    if (groupID) {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}?id=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}&groupID=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([group, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[]].map(item => item.id)));\n        setIconGroups([]);\n        setIcons(images);\n        setIconGroup(group as IconGroup);\n      });\n    } else {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}?id=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([groups, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[], ...groups as IconGroup[]].map(item => item.id)));\n        setIconGroups(groups.map((group: IconGroup) => ({...group, selected: false, editing: false})));\n        setIcons(images.map((icon: Icon) => ({...icon, selected: false})));\n        setIconGroup(null);\n      });\n    }\n  }, [guildID, groupID, iconFetcher, dispatch]);\n\n  const showIcon = useCallback((icon: Icon) => {\n    modal.fire({\n      html: <IconChat user={user!} icon={icon} iconGroup={iconGroup} modal={modal} />,\n      heightAuto: false\n    });\n  }, [user, modal, iconGroup]);\n\n  const updateName = useCallback((item: Icon | IconGroup, type: ItemType, newName: string) => {\n    const prevName = item.name;\n    newName = newName.replace(/\\s+/, \"\");\n\n    const endPoint = type === ItemType.ICON ? URL.ICON : URL.DIRECTORY;\n    const itemName = type === ItemType.ICON ? \"아이콘 이름\" : \"그룹명\";\n\n    item.name = newName;\n    if (type === ItemType.ICON && icons) {\n      setIcons([...icons]);\n    } else if (type === ItemType.GROUP && iconGroups) {\n      setIconGroups([...iconGroups]);\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}${endPoint}`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        id: item.id,\n        name: newName\n      })\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast.success(`${itemName}을 업데이트했습니다!`);\n    }).catch(err => {\n      item.name = prevName;\n      if (type === ItemType.ICON && icons) {\n        setIcons([...icons]);\n      } else if (type === ItemType.GROUP && iconGroups) {\n        setIconGroups([...iconGroups]);\n      }\n      toast.error(() => <div>❌ {itemName}을 변경하지 못했습니다<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [icons, iconGroups]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    open: openDropzone,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: \"image/jpg, image/jpeg, image/png, image/gif, image/webp\",\n    disabled: !hasPermission,\n    noClick: true,\n    noKeyboard: true,\n    maxSize: 8388608, // 8MB\n    onDrop: files => {\n      if (files.length <= 0) {\n        modal.fire({\n          icon: \"error\",\n          html: \"이미지 크기가 너무 크거나(8MB 이상)<br/>지원하지 않는 파일 포맷이 섞여있어요!\",\n          heightAuto: false\n        });\n        return;\n      }\n\n      const formData = new FormData();\n\n      formData.append(\"guildID\", guildID);\n      if (groupID) {\n        formData.append(\"groupID\", groupID);\n      }\n\n      files.forEach(file => {\n        formData.append(\"icons[]\", file, file.name);\n      });\n\n      const uploadingToast = toast(`${files.length}개의 아이콘을 업로드중입니다...`, { autoClose: false });\n\n      fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      }).then(async res => {\n        if (res.status !== 200) {\n          throw new Error(await res.text());\n        }\n        // Re-render component\n        toast.update(uploadingToast, {\n          render: `${files.length}개의 아이콘을 추가했습니다!`,\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n        forceUpdate();\n      }).catch(err => {\n        toast.update(uploadingToast, {\n          render: () => <div>❌ 아이콘 업로드에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n    }\n  });\n\n  const containerClass = useMemo(() => {\n    const classes = [\"icon-container\"];\n\n    isDragActive && classes.push(\"drag-active\");\n    isDragAccept && classes.push(\"drag-accept\");\n    isDragReject && classes.push(\"drag-reject\");\n\n    return classes.join(\" \");\n  }, [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  if (!guild) return <NotFound />\n  if (!iconGroups || !icons) return <Loading />\n\n  if (!guild.hasSiamese) {\n    return <div {...getRootProps({className: containerClass})}>\n      <IconHeaderMenu\n        icons={icons} iconGroups={iconGroups} iconGroup={iconGroup}\n        guild={guild} hasPermission={hasPermission} openDropzone={openDropzone} forceUpdate={forceUpdate}\n      />\n      <div>샴고양이가 없는 서버입니다!</div>\n      <div>먼저 샴고양이를 서버에 <a href={BOT_INVITE_LINK} rel=\"noreferrer\" target=\"_blank\">초대</a>해주세요!</div>\n    </div>\n  }\n\n  return (\n    <div {...getRootProps({className: containerClass})}>\n      <IconHeaderMenu\n        icons={icons} iconGroups={iconGroups} iconGroup={iconGroup}\n        guild={guild} hasPermission={hasPermission} openDropzone={openDropzone} forceUpdate={forceUpdate}\n      />\n      <div className=\"icon-item-container\">\n        <div className=\"icon-item icon-item-header\">\n          { hasPermission && <MasterCheckbox /> }\n          <div className=\"icon-item-name-container header-name\">이름</div>\n          <div className=\"icon-item-author\">생성자</div>\n          <div className=\"icon-item-count\">아이콘 개수</div>\n          <div className=\"icon-item-date\">생성일자</div>\n        </div>\n        {\n          iconGroups.map(iconGroup => (\n            <Link key={iconGroup.id} className=\"icon-item\" to={`/icon/${guildID}/${iconGroup.id}`}>\n                { guild.hasPermission && <ItemCheckbox id={iconGroup.id} />}\n                <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n                </svg>\n                <NameInput name={iconGroup.name} onUpdate={newName => updateName(iconGroup, ItemType.GROUP, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ iconGroup.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ iconGroup.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\">{ iconGroup.iconCount }</div>\n              <div className=\"icon-item-date\">{ new Date(iconGroup.createdTimestamp).toLocaleDateString() }</div>\n            </Link>\n          ))\n        }\n        {\n          icons.map(icon => (\n            <div key={icon.id} className=\"icon-item\" onClick={() => showIcon(icon)}>\n              { guild.hasPermission && <ItemCheckbox id={icon.id} />}\n              <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/image.svg#icon`} />\n                </svg>\n                <NameInput name={icon.name} onUpdate={newName => updateName(icon, ItemType.ICON, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ icon.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ icon.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\"></div>\n              <div className=\"icon-item-date\">{ new Date(icon.createdTimestamp).toLocaleDateString() }</div>\n            </div>\n          ))\n        }\n      </div>\n      <div className=\"icon-footer\">\n        <img className=\"icon-footer-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        <div className=\"icon-footer-chat-bubble\">드래그 & 드롭으로도 업로드할 수 있다냥!</div>\n      </div>\n      <div className=\"icon-drag-visualizer\">\n        <svg className=\"icon-drag-add\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add.svg#icon`} />\n        </svg>\n        <div className=\"icon-drag-reject-container\">\n          <svg className=\"icon-drag-reject\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} />\n          </svg>\n          <div>지원하지 않는 파일 포맷이 섞여있어요!</div>\n        </div>\n      </div>\n      <input {...getInputProps()} />\n      <ToastContainer position=\"bottom-right\" closeOnClick />\n    </div>\n  );\n}\n\nexport default IconList;\n","import \"./Login.css\";\n\nconst Login = () => {\n  return (\n    <div className=\"header-menu\">\n      <div className=\"header-menu-item\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"header-menu-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/login.svg#icon`} />\n        </svg>\n        <span>로그인</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Login;\n","import React from \"react\";\nimport User from \"~/api/type/User\";\nimport \"./Profile.css\";\n\nconst Profile: React.FC<{ user: User }> = ({ user }) => {\n  const logout = () => {\n    window.location.href = `${process.env.REACT_APP_API_URL}/logout`;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-overlay\"\n        onClick={logout}\n      >로그아웃</div>\n      <img className=\"profile-avatar\" src={user.avatarURL} />\n      <span className=\"profile-username\">{ user.tag }</span>\n      <div className=\"profile-logout\" onClick={logout}>로그아웃</div>\n    </div>\n  )\n}\n\nexport default Profile;\n","export const SET_USER = \"user/SET\" as const;\n\nexport const SET_GUILDS = \"guilds/SET\" as const;\n\nexport const TOGGLE_HAMBURGER = \"hamburger/TOGGLE\" as const;\n\nexport const TOGGLE_ICON = \"icon/TOGGLE\" as const;\nexport const SET_ICONS = \"icon/SET\" as const;\nexport const SELECT_ALL_ICON = \"icon/SELECT_ALL\" as const;\nexport const UNSELECT_ALL_ICON = \"icon/UNSELECT_ALL\" as const;\n","import Guild from \"~/api/type/Guild\";\nimport User from \"~/api/type/User\";\nimport * as ACTION from \"./actionTypes\";\n\nexport const setUser = (user: User) => ({\n  type: ACTION.SET_USER,\n  payload: user\n});\n\nexport const setGuilds = (guilds: Guild[]) => ({\n  type: ACTION.SET_GUILDS,\n  payload: guilds\n});\n\nexport const toggleHamburger = () => ({\n  type: ACTION.TOGGLE_HAMBURGER\n});\n\nexport const toggleIconChecked = (id: string) => ({\n  type: ACTION.TOGGLE_ICON,\n  payload: { id }\n});\n\nexport const setCheckedIcons = (ids: string[]) => ({\n  type: ACTION.SET_ICONS,\n  payload: ids\n});\n\nexport const selectAllIcons = () => ({\n  type: ACTION.SELECT_ALL_ICON\n});\n\nexport const unselectAllIcons = () => ({\n  type: ACTION.UNSELECT_ALL_ICON\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { toggleHamburger } from \"../redux/actions\";\n\nimport \"./SubcategoryLink.css\";\n\nconst Subcategory: React.FC<{\n  to: string;\n  className?: string;\n}> = ({ to, className, children }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  return <NavLink to={to} className={`subcategory-item ${className ? className : \"\"}`} activeClassName=\"selected\"\n    isActive={() => location.pathname.startsWith(to)}\n    onClick={() => dispatch(toggleHamburger())}\n  >\n    { children }\n  </NavLink>\n}\n\nexport default Subcategory;\n","export const BOT_INVITE_LINK = \"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\";\n","export const THUMB_UP = \"👍\";\nexport const TOOLS = \"🛠️\";\nexport const SMALL_BLUE_DIAMOND = \"🔹\";\nexport const SMALL_ORANGE_DIAMOND = \"🔸\";\nexport const LARGE_BLUE_DIAMOND = \"🔷\";\nexport const LARGE_ORANGE_DIAMOND = \"🔶\";\nexport const SMALL_WHITE_SQUARE = \"▫️\";\nexport const SMALL_BLACK_SQUARE = \"▪️\";\nexport const UP_TRIANGLE = \"🔺\";\nexport const DOWN_TRIANGLE = \"🔻\";\nexport const SPEAKING_HEAD = \"🗣️\";\nexport const LOUD_SPEAKER = \"📢\";\nexport const EXCLAMATION = \"❗\";\nexport const BANGBANG = \"‼️\";\nexport const QUESTION_MARK = \"❓\";\nexport const MIDDLE_DOT = \"•\";\nexport const DICE = \"🎲\";\nexport const COIN = \"🪙\";\nexport const WWW = \"🌐\";\nexport const MAGNIFYING_GLASS_LEFT = \"🔍\";\nexport const ARROW_SHADED_RIGHT = \"➩\";\nexport const ARROW_LEFT = \"⬅\";\nexport const ARROW_RIGHT = \"➡\";\nexport const ARROW_UP = \"↑\";\nexport const PLAY = \"▶\";\nexport const PAUSE = \"⏸️\";\nexport const CROSS = \"❌\";\nexport const WARNING = \"⚠️\";\nexport const WAVY_DASH = \"〰️\";\nexport const ALARM = \"⏰\";\nexport const STOPWATCH = \"⏱️\";\nexport const CLOCK_3 = \"🕒\";\nexport const HEADPHONES = \"🎧\";\nexport const MICROPHONE = \"🎤\";\nexport const CD = \"💿\";\nexport const MUSIC_NOTE = \"🎵\";\nexport const MUSIC_NOTES = \"🎶\";\nexport const MUSIC_8TH = \"♪\";\nexport const LOOP = \"🔁\";\nexport const SHUFFLE = \"🔀\";\nexport const ROTATE = \"🔄\";\nexport const SKIP = \"⏭️\";\nexport const INFO = \"ℹ️\";\nexport const HOURGLASS_NOT_DONE = \"⏳\";\nexport const DOLLAR = \"💵\";\nexport const BOOKS = \"📚\";\nexport const MONEY_WITH_WINGS = \"💸\";\nexport const GREEN_CHECK = \"✅\";\nexport const ANGER = \"💢\";\nexport const NO_ENTRY = \"⛔\";\nexport const OK = \"⭕\";\nexport const CIRCLE = {\n  BLUE: \"🔵\",\n  ORAGNE: \"🟠\",\n  HOLLOW: \"○\",\n  RED: \"🔴\",\n  YELLOW: \"🟡\",\n  BLACK: \"⚫\",\n  WHITE: \"⚪\"\n};\nexport const HEART = {\n  RED: \"❤\",\n  YELLOW: \"💛\",\n  BLUE: \"💙\"\n};\nexport const ARROW = {\n  NW: \"↖️\",\n  N: \"⬆️\",\n  NE: \"↗️\",\n  W: \"⬅️\",\n  E: \"➡️\",\n  SW: \"↙️\",\n  S: \"⬇️\",\n  SE: \"↘️\"\n};\nexport const VIDEO_GAME = \"🎮\";\nexport const JOYSTICK = \"🕹️\";\nexport const PEOPLE = \"👥\";\nexport const NSFW = \"🔞\";\nexport const EGGPLANT = \"🍆\";\nexport const SPARKLING_HEART = \"💖\";\nexport const BLACK_HEART = \"🖤\";\nexport const BOT = \"🤖\";\nexport const WRENCH = \"🔧\";\nexport const GEAR = \"⚙️\";\nexport const BAR_CHART = \"📊\";\nexport const CHART_UP = \"📈\";\nexport const CHART_DOWN = \"📉\";\nexport const THINKING = \"🤔\";\nexport const KEYCAP = \"⃣\";\nexport const TEN = \"🔟\";\nexport const STAR = \"⭐\";\nexport const GLOWING_STAR = \"🌟\";\nexport const LOW_BRIGHTNESS = \"🔅\";\nexport const THERMOMETER = \"🌡️\";\nexport const SPEECH_BUBBLE = \"💬\";\nexport const RULER = \"📏\";\nexport const SCALES = \"⚖️\";\nexport const CAT = {\n  KISSING: \"😽\",\n  GRINNING: \"😸\"\n};\nexport const PAW = \"🐾\";\nexport const CROSSED_SWORDS = \"⚔️\";\nexport const SHIELD = \"🛡️\";\nexport const GOLD_MEDAL = \"🥇\";\nexport const SILVER_MEDAL = \"🥈\";\nexport const BRONZE_MEDAL = \"🥉\";\nexport const FILE = \"📁\";\nexport const FLOPPY_DISC = \"💾\";\nexport const PICTURE = \"🖼️\";\nexport const MEMO = \"📝\";\nexport const WHITE_FLOWER = \"💮\";\nexport const PUSH_PIN = \"📌\";\nexport const ROUND_PUSH_PIN = \"📍\";\nexport const ENVELOPE_WITH_ARROW = \"📩\";\nexport const LINK = \"🔗\";\nexport const CROWN = \"👑\";\nexport const BALLOT_BOX = \"🗳️\";\nexport const MILITARY_HELMET = \"🪖\";\nexport const TROPHY = \"🏆\";\nexport const SCROLL = \"📜\";\nexport const LETTER = [\n  \"🇦\", \"🇧\", \"🇨\", \"🇩\", \"🇪\",\n  \"🇫\", \"🇬\", \"🇭\", \"🇮\", \"🇯\",\n  \"🇰\", \"🇱\", \"🇲\", \"🇳\", \"🇴\",\n  \"🇵\", \"🇶\", \"🇷\", \"🇸\", \"🇹\",\n  \"🇺\", \"🇻\", \"🇼\", \"🇽\", \"🇾\",\n  \"🇿\"\n];\nexport const ZERO_WIDTH_SPACE = \"​\";\nexport const FIGURE_SPACE = \" \";\nexport const TAB_SPACE = \"\t\";\nexport const BLACK_DIAMOND = \"◆\";\nexport const WHITE_DIAMOND = \"◇\";\nexport const BLACK_CIRCLE = \"⚫\";\nexport const WHITE_CIRCLE = \"⚪\";\nexport const WHITE_FLAG = \"🏳️\";\nexport const LOCKED = \"🔒\";\nexport const LADDER = \"🪜\";\nexport const CURSOR = \"|\";\nexport const MAHJONG = \"🀄\";\nexport const JOKER = \"🃏\";\nexport const BOMB = \"💣\";\nexport const SKULL = \"💀\";\nexport const EMPTY = \"<:empty:959746248724869140>\";\nexport const DOT = \"<:dot:966674623800414238>\";\n","import * as EMOJI from \"~/const/emoji\";\n\nexport const BOT = {\n  ID: \"bot\",\n  NAME: \"봇\",\n  DESC: \"봇과 관련된 정보들을 확인할 수 있다냥!\",\n  EMOJI: EMOJI.BOT\n};\nexport const UTILITY = {\n  ID: \"utility\",\n  NAME: \"유틸리티\",\n  DESC: \"유용한 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.TOOLS\n};\nexport const SEARCH = {\n  ID: \"search\",\n  NAME: \"검색\",\n  DESC: \"인터넷으로 검색한 결과를 보여주는 명령어들이다냥!\",\n  EMOJI: EMOJI.MAGNIFYING_GLASS_LEFT\n};\nexport const HISTORY = {\n  ID: \"history\",\n  NAME: \"기록\",\n  DESC: \"서버의 각종 기록들을 열람할 수 있다냥!\",\n  EMOJI: EMOJI.SCROLL\n};\nexport const STEAM = {\n  ID: \"steam\",\n  NAME: \"스팀\",\n  DESC: \"스팀에서 여러가지 정보를 검색한다냥!\",\n  EMOJI: EMOJI.MONEY_WITH_WINGS\n};\nexport const ICON = {\n  ID: \"icon\",\n  NAME: \"아이콘\",\n  DESC: \"아이콘 관련 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.PICTURE\n};\nexport const SETTING = {\n  ID: \"setting\",\n  NAME: \"설정\",\n  DESC: \"서버 설정 관련 명령어들이다냥!\",\n  EMOJI: EMOJI.GEAR\n};\nexport const MINIGAME = {\n  ID: \"minigame\",\n  NAME: \"미니게임\",\n  DESC: \"채널 안에서 플레이 가능한 미니게임들이다냥!\",\n  EMOJI: EMOJI.JOYSTICK\n};\nexport const GAME = {\n  ID: \"game\",\n  NAME: \"게임\",\n  DESC: \"각종 게임 관련 정보를 검색할 수 있는 명령어들이다냥!\",\n  EMOJI: EMOJI.VIDEO_GAME\n};\n","import React, { useMemo } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport SubcategoryLink from \"./SubcategoryLink\";\n\nimport { toggleHamburger } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\nimport { BOT_INVITE_LINK } from \"../const\";\n\nimport * as CATEGORY from \"~/const/category\";\n\nimport \"./Sidebar.css\";\n\ninterface Route {\n  path: string;\n  name: string;\n  icon: string;\n  active: boolean;\n  subcategories?: JSX.Element[];\n}\n\nconst Sidebar: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const routes: Route[] = useMemo(() => [\n    {\n      path: \"/\",\n      name: \"홈\",\n      icon: \"home\",\n      active: location.pathname === \"/\"\n    },\n    {\n      path: \"/icon\",\n      name: \"아이콘\",\n      icon: \"archive\",\n      active: location.pathname.startsWith(\"/icon\"),\n      subcategories: user?.guilds?.map(guild =>\n        <SubcategoryLink to={`/icon/${guild.id}`} key={guild.id} className=\"guild-link\">\n          <img className=\"subcategory-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n          { guild.name }\n        </SubcategoryLink>\n      )\n    },\n    {\n      path: \"/command/bot\",\n      name: \"명령어 목록\",\n      icon: \"bolt\",\n      active: location.pathname.startsWith(\"/command\"),\n      subcategories: Object.values(CATEGORY)\n        .map(category => <SubcategoryLink to={`/command/${category.ID}`} key={category.ID}>{category.EMOJI} {category.NAME}</SubcategoryLink>)\n    }\n  ], [user, location]);\n\n  const containerClass = useMemo(() => {\n    const classes = [\"sidebar-container\"];\n    if (hamburger.open) classes.push(\"visible\");\n\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <div className={containerClass}>\n      <div className=\"sidebar-menu-item-container header\">\n        <div className=\"header-burger\" onClick={() => dispatch(toggleHamburger())}>\n          <svg className=\"header-burger-icon\">\n            <use xlinkHref={\n              hamburger.open\n                ? `${process.env.PUBLIC_URL}/icons/cancel.svg#icon`\n                : `${process.env.PUBLIC_URL}/icons/hamburger.svg#icon`\n              } />\n          </svg>\n        </div>\n        <div className=\"header-logo\">\n          <div className=\"header-logo-text\">\n            <span>샴고양이</span>\n          </div>\n          <img className=\"header-logo-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        </div>\n      </div>\n      <div className=\"sidebar-menu\">\n        {routes.map((route) => (\n          <div className=\"sidebar-menu-item-container\" key={route.name}>\n            <NavLink to={route.path} className=\"sidebar-menu-item\" activeClassName=\"selected\"\n              isActive={() => route.active}\n            >\n              <svg className=\"sidebar-menu-icon\">\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${route.icon}.svg#icon`} />\n              </svg>\n              <span>{route.name}</span>\n            </NavLink>\n            { route.active && route.subcategories }\n          </div>\n        ))}\n      </div>\n      <div className=\"sidebar-bottom\">\n          <div className=\"sidebar-menu-item-container\">\n            {user != null\n              ? user.id\n                ? <Profile user={user} />\n                : <Login />\n              : <></>\n            }\n          </div>\n          <div className=\"sidebar-menu-item-container\">\n            <a target=\"_blank\" rel=\"noreferrer\" href={BOT_INVITE_LINK}>\n              <div className=\"sidebar-others-item\">\n                <svg className=\"sidebar-others-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n                </svg>\n                <span>샴고양이 초대하기</span>\n              </div>\n            </a>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <img className=\"home-img\" src=\"https://i.ytimg.com/vi/uMxnmGBGL78/maxresdefault.jpg\" />\n      <div>샴고양이 사용중에 궁금한게 또 있어요?</div>\n      <div><a href=\"https://discord.gg/uuSPaYtF8W\">샴고양이 DevServer</a>로 오십시오</div>\n    </div>\n  )\n}\n\nexport default Home;\n","/* eslint-disable no-script-url */\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport { RootState } from \"../redux/reducers\";\n\nimport Guild from \"~/api/type/Guild\";\n\nimport \"./GuildList.css\";\n\nconst GuildList: React.FC<{\n  to: string;\n  subtitle: string;\n  taskName: string;\n  hasPermission: (guild: Guild) => boolean;\n}> = ({ to, subtitle, taskName, hasPermission }) => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n\n  return (\n    <div className=\"guild-container\">\n      <div className=\"guild-header\">\n        <div className=\"guild-header-text\">\n          <span>서버 목록</span>\n        </div>\n      </div>\n      <div className=\"guild-subtitle\">{subtitle}</div>\n      {\n        guilds.map(guild => (\n          <div key={guild.id}>\n            <div className=\"guild-separator\"></div>\n            <Link to={`/${to}/${guild.id}`} className=\"guild-item\">\n              <img className=\"guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n              <div className=\"guild-name\">{ guild.name }</div>\n              {guild.hasSiamese && <img className=\"guild-has-siamese\" src={`${process.env.PUBLIC_URL}/logo20.png`} /> }\n              <svg className={`guild-approved-icon ${hasPermission(guild) ? \"yes\" : \"no\"}`} data-tip data-for={`guild-permission-tooltip-${guild.id}`}>\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${hasPermission(guild) ? \"approve\" : \"cancel\"}.svg#icon`} />\n              </svg>\n              <ReactTooltip id={`guild-permission-tooltip-${guild.id}`} place=\"right\" type=\"dark\" effect=\"solid\">\n                <span>{ hasPermission(guild) ? `${taskName}이 가능합니다` : `${taskName} 권한이 없습니다`}</span>\n              </ReactTooltip>\n              <div className=\"guild-enter-icon-container\">\n                <svg className=\"guild-enter-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/right-arrow.svg#icon`} />\n                </svg>\n              </div>\n            </Link>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default GuildList;\n","import \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default NotFound;\n","export const LOGOUT = \"/logout\";\nexport const USER = \"/user\";\nexport const GUILDS = \"/guilds\";\nexport const ICON = \"/icon\";\nexport const ICONS = \"/icons\";\nexport const DIRECTORY = \"/directory\";\nexport const DIRECTORIES = \"/directories\";\n","import React, { useCallback } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nimport { RootState } from \"../redux/reducers\";\nimport * as URL from \"~/api/const/url\";\nimport Guild from \"~/api/type/Guild\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport Icon from \"~/api/type/Icon\";\n\nimport \"./IconHeaderMenu.css\";\n\nconst IconHeaderMenu: React.FC<{\n  icons: Icon[] | null;\n  iconGroups: IconGroup[] | null;\n  iconGroup: IconGroup | null;\n  guild: Guild;\n  hasPermission: boolean;\n  openDropzone: () => void;\n  forceUpdate: React.DispatchWithoutAction;\n}> = ({ icons, iconGroups, guild, iconGroup, hasPermission, openDropzone, forceUpdate }) => {\n  const checkedState = useSelector((state: RootState) => state.icon);\n\n  const createFolder = useCallback(() => {\n    const formData = new FormData();\n    formData.append(\"guildID\", guild.id);\n\n    fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}`, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: formData\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast(\"📁 폴더를 추가했습니다!\");\n      forceUpdate();\n    }).catch(err => {\n      toast.error(() => <div>❌ 새 폴더 생성에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [guild, forceUpdate]);\n\n  const removeSelected = () => {\n    if (!iconGroups || !icons) return;\n\n    const selectedGroups = iconGroups.filter(group => checkedState[group.id].checked);\n    const selectedIcons = icons.filter(icon => checkedState[icon.id].checked);\n\n    if (selectedGroups.length <= 0 && selectedIcons.length <= 0) return;\n\n    const removeGroups = fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        directories: selectedGroups.map(iconGroup => iconGroup.id),\n        guildID: guild.id,\n      })\n    });\n\n    const removeIcons = fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        icons: selectedIcons.map(icon => icon.id),\n        guildID: guild.id,\n      })\n    });\n\n    Promise.all([removeGroups, removeIcons]).then(([res1, res2]) => {\n      if (!res1.ok || !res2.ok) throw new Error();\n\n      const removed: string[] = [];\n      if (selectedGroups.length > 0) removed.push(`${selectedGroups.length}개의 그룹`);\n      if (selectedIcons.length > 0) removed.push(`${selectedIcons.length}개의 아이콘`);\n\n      toast.success(`${removed.join(\" 및 \")}을 삭제했습니다!`)\n      forceUpdate();\n    }).catch(() => {\n      toast(\"❌ 아이콘/폴더 삭제에 실패했습니다.\")\n    });\n  };\n\n  return <div className=\"icon-menu-container\">\n    <div className=\"icon-menu-left\">\n      <Link to={iconGroup ? `/icon/${guild.id}` : \"/icon\"} className=\"icon-menu-item icon-back-button-container\">\n        <svg className=\"icon-arrow-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/left-arrow.svg#icon`} />\n        </svg>\n      </Link>\n      <img className=\"icon-guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n      <div className=\"icon-guild-title\">\n        <span>{ guild.name }</span>\n        {\n          iconGroup &&\n          <div className=\"icon-group-title\">\n            <span className=\"icon-group-separator\"> / </span>\n            <svg className=\"icon-group-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n            </svg>\n            <span>{ iconGroup.name }</span>\n          </div>\n        }\n      </div>\n    </div>\n    {\n      hasPermission &&\n      <div className=\"icon-menu-right\">\n        {\n          !iconGroup &&\n          <div className=\"icon-menu-item icon-add-folder-btn\" onClick={createFolder} data-tip data-for=\"icon-menu-add-folder-tooltip\">\n            <svg className=\"icon-menu-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add-folder.svg#icon`} />\n            </svg>\n            <ReactTooltip id=\"icon-menu-add-folder-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n              <span>아이콘 그룹 추가</span>\n            </ReactTooltip>\n          </div>\n        }\n        <div className=\"icon-menu-item icon-remove-btn\" onClick={removeSelected} data-tip data-for=\"icon-menu-remove-tooltip\">\n          <svg className=\"icon-menu-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/trash.svg#icon`} />\n          </svg>\n          <ReactTooltip id=\"icon-menu-remove-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n            <span>선택된 항목들 삭제</span>\n          </ReactTooltip>\n        </div>\n        <div className=\"icon-menu-item\" onClick={openDropzone}>\n          <svg className=\"icon-upload-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/upload.svg#icon`} />\n          </svg>\n          <span className=\"icon-upload-text\">업로드</span>\n        </div>\n      </div>\n    }\n  </div>\n}\n\nexport default IconHeaderMenu;\n","import \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllIcons, unselectAllIcons } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst MasterCheckbox: React.FC = () => {\n  const icons = useSelector((state: RootState) => state.icon);\n  const dispatch = useDispatch();\n  const [allChecked, setAllChecked] = useState(false);\n\n  useEffect(() => {\n    const iconList = Object.values(icons);\n\n    if (iconList.length <= 0) setAllChecked(false);\n    else setAllChecked(iconList.every(icon => icon.checked))\n  }, [icons])\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (allChecked) {\n      dispatch(unselectAllIcons());\n    } else {\n      dispatch(selectAllIcons());\n    }\n  }}>\n    <Checkbox color=\"danger\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={allChecked} readOnly />\n  </div>\n}\n\nexport default MasterCheckbox;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleIconChecked } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst ItemCheckbox: React.FC<{\n  id: string;\n}> = ({ id }) => {\n  const icon = useSelector((state: RootState) => state.icon[id]);\n  const dispatch = useDispatch();\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(toggleIconChecked(id));\n  }}>\n    <Checkbox color=\"danger\" animation=\"jelly\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      style={{ pointerEvents: \"none\" }}\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={Boolean(icon && icon.checked)} readOnly={true}\n    />\n  </div>\n}\n\nexport default ItemCheckbox;\n","import React, { useCallback, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./NameInput.css\";\n\nconst NameInput: React.FC<{\n  name: string;\n  onUpdate: (newName: string) => any;\n}> = ({ name, onUpdate }) => {\n  const [editing, setEditing] = useState(false);\n\n  const updateName = useCallback((newName: string) => {\n    if (newName !== name) {\n      onUpdate(newName);\n    }\n    setEditing(false);\n  }, [name, onUpdate]);\n\n  return editing\n    ? <>\n        <input type=\"text\" maxLength={10}\n          onBlur={e => updateName(e.target.value)}\n          onClick={e => {\n            e.stopPropagation();\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\n              updateName(e.currentTarget.value);\n            }\n          }}\n          defaultValue={name} autoFocus={true}\n          className=\"icon-item-name editing\" />\n        <svg key={1} className=\"icon-item-icon icon-edit-finish-icon\" onClick={e => {\n          e.stopPropagation();\n          e.preventDefault();\n        }}>\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/approve.svg#icon`} />\n        </svg>\n      </>\n    : <>\n      <span className=\"icon-item-name\">{name}</span>\n      <svg key={2} className=\"icon-item-icon icon-edit-icon\" onClick={e => {\n        e.stopPropagation();\n        e.preventDefault();\n        setEditing(true);\n      }} data-tip data-for=\"icon-edit-tooltip\">\n        <use xlinkHref={`${process.env.PUBLIC_URL}/icons/edit.svg#icon`} />\n      </svg>\n      <ReactTooltip id=\"icon-edit-tooltip\" place=\"right\" type=\"light\" effect=\"solid\">\n        <span>이름 변경하기</span>\n      </ReactTooltip>\n    </>;\n};\n\nexport default NameInput;\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { ReactSweetAlert } from \"sweetalert2-react-content\";\n\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport User from \"~/api/type/User\";\n\nimport \"./IconChat.css\";\n\nconst IconChat: React.FC<{\n  user: User;\n  icon: Icon;\n  iconGroup: IconGroup | null;\n  modal: typeof Swal & ReactSweetAlert;\n}> = ({ user, icon, iconGroup, modal }) => {\n  return <div className=\"chat-container\" onClick={() => {\n    modal.clickConfirm();\n  }}>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={user.avatarURL} />\n      <div className=\"chat-contents\">\n        <span className=\"chat-author-name\">{ user.username }</span>\n        <span>~{ iconGroup ? `${iconGroup.name} ${icon.name}` : icon.name }</span>\n      </div>\n    </div>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n      <div className=\"chat-contents\">\n        <div className=\"chat-name-wrapper\">\n          <span className=\"chat-author-name\">샴고양이</span>\n          <div className=\"chat-bot-tag\">\n            <svg style={{marginLeft: \"-4px\"}} width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\"><path d=\"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\" fill=\"currentColor\"></path></svg>\n            <span>봇</span>\n          </div>\n        </div>\n        <div className=\"chat-embed-wrapper\">\n          <div className=\"chat-embed-author\">\n            <img className=\"chat-embed-author-image\" src={user.avatarURL} />\n            <span className=\"chat-embed-author-name\">{ user.username }</span>\n          </div>\n          <img className=\"chat-icon-image\" src={icon.url} />\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default IconChat;\n","import \"./AuthNeeded.css\";\n\nconst AuthNeeded = () => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-header\">로그인이 필요합니다</div>\n      <div className=\"auth-login-button\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"auth-discord-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n        </svg>\n        <div className=\"auth-login-separator\"></div>\n        <span>디스코드로 로그인하기</span>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthNeeded;\n","import React, { useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GuildList from \"./GuildList\";\nimport IconList from \"./IconList\";\nimport AuthNeeded from \"./AuthNeeded\";\nimport Loading from \"../component/Loading\";\nimport { RootState } from \"../redux/reducers\";\nimport { setGuilds } from \"../redux/actions\";\nimport Guild from \"~/api/type/Guild\";\n\nimport \"./Icon.css\";\n\nconst Icon: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/guilds`, {\n      credentials: \"include\"\n    }).then(res => res.json())\n      .then(guilds => dispatch(setGuilds(guilds as Guild[])))\n  }, [dispatch]);\n\n  if (!user) return <></>;\n  if (!user.id) return <AuthNeeded />;\n  if (!guilds) return <Loading />;\n\n  return (<Switch>\n    <Route path={[\n      `${match.path}/:guildID/:groupID`,\n      `${match.path}/:guildID`\n    ]}>\n      <IconList />\n    </Route>\n    <Route path={match.path}>\n      <GuildList to=\"icon\" subtitle=\"아이콘을 편집할 서버를 선택해주세요\" taskName=\"아이콘 편집\"\n        hasPermission={guild => guild.hasPermission} />\n    </Route>\n  </Switch>)\n}\n\nexport default Icon;\n","import ReactTooltip from \"react-tooltip\";\n\nimport \"./CommandItem.css\";\n\ninterface Command {\n  CMD: string;\n  DESC: string;\n  USAGE?: string;\n  ALIAS?: readonly string[];\n}\n\nconst CommandItem: React.FC<{\n  command: Command;\n  parent?: {\n    CMD: string;\n  };\n  voiceOnly?: boolean;\n}> = ({ command, parent, children, voiceOnly = false }) => {\n  const commandName = parent ? `${parent.CMD} ${command.CMD}` : command.CMD;\n\n  return <div className=\"command-item\">\n    <div className=\"command-header\">\n      <div className=\"command-title\">\n        {voiceOnly &&\n          <>\n            <svg className=\"command-voice-icon\" data-tip data-for=\"voice-channel-tooltip\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/volume-up.svg#icon`} />\n            </svg>\n            <ReactTooltip id=\"voice-channel-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n              <span>음성 채널에서만 사용 가능한 명령어입니다.</span>\n            </ReactTooltip>\n          </>\n        }\n        { commandName }\n        {command.ALIAS &&\n        <div className=\"command-alias\">\n          <div>or...</div>\n          {\n            command.ALIAS.map(alias => (<div key={alias} className=\"command-alias-item\">{alias}</div>))\n          }\n        </div>\n      }\n      </div>\n      {command.USAGE &&\n        <div className=\"command-usage\">사용법: 샴 {commandName} {command.USAGE}</div>\n      }\n    </div>\n    {children}\n  </div>\n}\n\nexport default CommandItem;\n","import React from \"react\";\n\nimport \"./ChatBubble.css\";\n\nconst ChatBubble: React.FC<{\n  author?: {\n    name: string;\n    avatar: string;\n  };\n  position: \"left\" | \"right\";\n}> = ({ author, position, children }) => {\n  return <div className={`chat-bubble-container ${position}`}>\n    {author &&\n      <div className=\"chat-bubble-author\">\n        <img className=\"chat-bubble-author-image\" src={author.avatar} />\n        <span className=\"chat-bubble-author-name\">{author.name}</span>\n      </div>\n    }\n    <div className=\"chat-bubble\">\n      { children }\n    </div>\n  </div>\n}\n\nexport default ChatBubble;\n","import React from \"react\";\n\nimport \"./ChatContainer.css\";\n\nconst ChatContainer: React.FC = ({ children }) => {\n  return <div className=\"bubblechat-container\">\n    { children }\n  </div>\n}\n\nexport default ChatContainer;\n","import React from \"react\";\n\nimport \"./CommandDesc.css\";\n\nconst CommandDesc: React.FC = ({ children }) => {\n  return <div className=\"command-desc-container\">\n    { children }\n  </div>\n}\n\nexport default CommandDesc;\n","import React from \"react\";\n\nimport \"./EmbedHeader.css\";\n\nconst EmbedHeader: React.FC<{\n  author: {\n    name: string;\n    avatar: string;\n  };\n}> = ({ author }) => {\n  return <div className=\"embed-header-container\">\n      <img className=\"embed-header-image\" src={author.avatar} />\n      <span className=\"embed-header-name\">{author.name}</span>\n  </div>\n}\n\nexport default EmbedHeader;\n","import React from \"react\";\n\nimport \"./EmbedFooter.css\";\n\nconst EmbedFooter: React.FC<{\n  image: string;\n  text: string;\n}> = ({ image, text }) => {\n  return <div className=\"embed-footer-container\">\n      <img className=\"embed-footer-image\" src={image} />\n      <span className=\"embed-footer-text\">{text}</span>\n  </div>\n}\n\nexport default EmbedFooter;\n","// Dedent from string, useful for multiline string template\nexport const dedent = (callSite: TemplateStringsArray, ...args: any[]) => {\n  const format = (str: string) => {\n    const strSplitted = str.split(\"\\n\");\n\n    return strSplitted.map(substr => substr.trim())\n      .filter(substr => substr.length > 0)\n      .join(\"\\n\");\n  };\n\n  if (typeof callSite === \"string\") {\n    return format(callSite);\n  }\n\n  const output = callSite\n    .slice(0, args.length + 1)\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    .map((text, i) => (i === 0 ? \"\" : args[i - 1]) + text)\n    .join(\"\");\n\n  return format(output);\n};\n\nexport const isBetween = (val: number, min: number, max: number) => val >= min && val <= max;\nexport const clamp = (val: number, min: number, max: number) => Math.min(Math.max(val, min), max);\nexport const getMinusCompensatedIndex = (idx: number, max: number) => idx < 0 ? clamp(idx + max, 0, max) : clamp(idx, 0, max);\n\nexport const randInt = (max: number) => Math.floor(Math.random() * (max + 1));\nexport const getRandom = <T>(arr: T[]): T => arr[randInt(arr.length - 1)];\n\nexport const shuffle = <T>(arr: T[]) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nexport const toValidURL = (url: string) => {\n  if (url.startsWith(\"//\")) return `https:${url}`;\n  return url;\n};\n\nexport const rgbaToHex = (val: string): `#${string}` | [number, number, number] => {\n  const regex = /^rgba?\\((\\d{1,3})\\s?,\\s?(\\d{1,3})\\s?,\\s?(\\d{1,3})(?:,\\s?\\d.?\\d*)?\\s?\\)$/;\n  const matched = regex.exec(val);\n  if (!matched) {\n    return val.startsWith(\"#\")\n      ? val as `#${string}`\n      : `#${val}`;\n  }\n\n  const rgb = [matched[1], matched[2], matched[3]];\n\n  return rgb.map(color => clamp(parseFloat(color), 0, 255)) as [number, number, number];\n};\n\nexport const userMention = (id: string) => `<@${id}>`;\nexport const roleMention = (id: string) => `<@&${id}>`;\n\nexport const range = (end: number): number[] => new Array(end).fill(0).map((_, idx) => idx);\n\nexport const parseArgs = (content: string) => {\n  const args: string[] = [];\n  let lastIdx = 0;\n  let idx = 0;\n\n  while (idx < content.length) {\n    const char = content[idx];\n\n    if (char === \" \") {\n      // Split args by blank space;\n      // Exclude multiple blanks\n      if (lastIdx !== idx) {\n        args.push(content.substring(lastIdx, idx));\n      }\n\n      idx += 1;\n      lastIdx = idx;\n    } else if (char === \"\\\"\" && lastIdx === idx) {\n      // Bundle args bound in double quotes\n      // Exclude quotes only separated by blank space\n      const endIdx = content.indexOf(\"\\\" \", idx + 1);\n      if (endIdx > 0) {\n        args.push(content.substring(idx + 1, endIdx));\n        lastIdx = endIdx + 2;\n        idx = lastIdx;\n      } else if (content.endsWith(\"\\\"\")) {\n        // Case of all remaining string is bound in double quote\n        args.push(content.substring(idx + 1, content.length - 1));\n        lastIdx = content.length;\n        idx = lastIdx;\n        break;\n      } else {\n        idx += 1;\n      }\n    } else {\n      idx += 1;\n    }\n  }\n\n  // Append last arg\n  if (lastIdx < content.length) {\n    args.push(content.substring(lastIdx, content.length));\n  }\n\n  // For blank arg, add double quotes for it as Discord won't accept blank message\n  return args.map(arg => arg === \" \" ? `\"${arg}\"` : arg);\n};\n\nexport const groupBy = <T>(arr: T[], count: number) => {\n  return new Array(Math.ceil(arr.length / count)).fill(0).map((_, idx) => {\n    return arr.slice(idx * count, idx * count + count);\n  });\n};\n\nexport const toEmoji = (name: string, id: string) => `<:${name}:${id}>`;\n\nexport function staticImplements<T>() {\n  return <U extends T>(constructor: U) => { constructor; }; // eslint-disable-line @typescript-eslint/no-unused-expressions\n}\n\n// nCr\nexport const combinations = (n: number, r: number): number => {\n  if (r > n) return 0;\n\n  let numerator = 1;\n  let denominator = 1;\n\n  for (let i = 0; i < r; i++) {\n    numerator *= (n - i);\n    denominator *= (r - i);\n  }\n\n  return numerator / denominator;\n};\n\nexport const pick = <T>(arr: T[], by: number) => {\n  const indexes = range(by);\n  const totalCount = combinations(arr.length, by);\n\n  const cases: T[][] = [];\n\n  for (let i = 0; i < totalCount; i++) {\n    cases.push(indexes.map(idx => arr[idx]));\n\n    for (let idx = by - 1; idx >= 0; idx--) {\n      const idxReversed = by - 1 - idx;\n      const startIdx = indexes[idx] + 1;\n      if (startIdx > arr.length - 1 - idxReversed) continue;\n\n      indexes.slice(idx).forEach((_, offset) => {\n        indexes[idx + offset] = startIdx + offset;\n      });\n      break;\n    }\n  }\n\n  return cases;\n};\n\nexport const waitFor = async (time: number) => {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, time);\n  });\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { range } from \"~/util/helper\";\n\nexport enum TILE_TYPE {\n  MAN,\n  PIN,\n  SOU,\n  KAZE,\n  SANGEN\n}\n\nexport enum WIND {\n  EAST,\n  SOUTH,\n  WEST,\n  NORTH\n}\n\nexport enum BODY_TYPE {\n  HEAD,\n  ORDERED,\n  SAME,\n  KANG\n}\n\nexport enum KANG_TYPE {\n  NONE,\n  CLOSED,\n  OPEN,\n  ADDITIVE\n}\n\nexport enum ACTION_TYPE {\n  DISCARD,\n  CHI,\n  PON,\n  KANG\n}\n\nexport const DATA = {\n  MAN: range(9).map(index => ({ type: TILE_TYPE.MAN, index })),\n  PIN: range(9).map(index => ({ type: TILE_TYPE.PIN, index })),\n  SOU: range(9).map(index => ({ type: TILE_TYPE.SOU, index })),\n  KAZE: range(4).map(index => ({ type: TILE_TYPE.KAZE, index })),\n  SANGEN: range(3).map(index => ({ type: TILE_TYPE.SANGEN, index }))\n} as const;\n\nconst WIND_NAME = [\"동\", \"남\", \"서\", \"북\"];\nconst SANGEN_NAME = [\"백\", \"발\", \"중\"];\nexport const RED_DORA_NAME = \"적\";\n\nexport const NAME = {\n  [TILE_TYPE.MAN]: (index: number) => `${index + 1}만`,\n  [TILE_TYPE.PIN]: (index: number) => `${index + 1}통`,\n  [TILE_TYPE.SOU]: (index: number) => `${index + 1}삭`,\n  [TILE_TYPE.KAZE]: (index: number) => WIND_NAME[index],\n  [TILE_TYPE.SANGEN]: (index: number) => SANGEN_NAME[index]\n} as const;\n\nexport const EMOJI = {\n  [TILE_TYPE.MAN]: [\n    { name: \"man1\", id: \"957691326986596454\" },\n    { name: \"man2\", id: \"957691327217303624\" },\n    { name: \"man3\", id: \"957691327028531231\" },\n    { name: \"man4\", id: \"957691327296983040\" },\n    { name: \"man5\", id: \"957691327355695154\" },\n    { name: \"man6\", id: \"957691327401828392\" },\n    { name: \"man7\", id: \"957691327305351189\" },\n    { name: \"man8\", id: \"957691328341356604\" },\n    { name: \"man9\", id: \"957691327544426587\" }\n  ],\n  [TILE_TYPE.PIN]: [\n    { name: \"pin1\", id: \"957691328039354448\" },\n    { name: \"pin2\", id: \"957691328005820446\" },\n    { name: \"pin3\", id: \"957691327494098984\" },\n    { name: \"pin4\", id: \"957691327544438784\" },\n    { name: \"pin5\", id: \"957691327812878367\" },\n    { name: \"pin6\", id: \"957691327443791923\" },\n    { name: \"pin7\", id: \"957691328051937360\" },\n    { name: \"pin8\", id: \"957691327569608714\" },\n    { name: \"pin9\", id: \"957691328324599819\" }\n  ],\n  [TILE_TYPE.SOU]: [\n    { name: \"sou1\", id: \"957691327678652436\" },\n    { name: \"sou2\", id: \"957691327791906826\" },\n    { name: \"sou3\", id: \"957691327573803099\" },\n    { name: \"sou4\", id: \"957691327401828422\" },\n    { name: \"sou5\", id: \"957691327544442930\" },\n    { name: \"sou6\", id: \"957691328060342272\" },\n    { name: \"sou7\", id: \"957691327225663550\" },\n    { name: \"sou8\", id: \"957691327536050226\" },\n    { name: \"sou9\", id: \"957691328043569222\" }\n  ],\n  [TILE_TYPE.KAZE]: [\n    { name: \"ton\", id: \"957691327557025802\" },\n    { name: \"nan\", id: \"957691327712211055\" },\n    { name: \"sha\", id: \"957691327565410404\" },\n    { name: \"pei\", id: \"957691327565398036\" }\n  ],\n  [TILE_TYPE.SANGEN]: [\n    { name: \"haku\", id: \"957691327145992233\" },\n    { name: \"hatsu\", id: \"957691327145967617\" },\n    { name: \"chun\", id: \"957691327112433694\" }\n  ],\n  DORA: {\n    [TILE_TYPE.MAN]: { name: \"man5dora\", id: \"957691327187923015\" },\n    [TILE_TYPE.PIN]: { name: \"pin5dora\", id: \"957691327825453147\" },\n    [TILE_TYPE.SOU]: { name: \"sou5dora\", id: \"957691328295211028\" }\n  },\n  BACK: { name: \"tile\", id: \"957691326932062239\" },\n  RIICHI: [\n    { name: \"riichi_0\", id: \"958359902332547113\" },\n    { name: \"riichi_1\", id: \"958360239424561163\" }\n  ]\n} as const;\n\nexport const EMOJI_ROTATED = {\n  [TILE_TYPE.MAN]: [\n    { name: \"man1_rot\", id: \"957863441308209192\" },\n    { name: \"man2_rot\", id: \"957863441245294632\" },\n    { name: \"man3_rot\", id: \"957863441085906944\" },\n    { name: \"man4_rot\", id: \"957863441341759558\" },\n    { name: \"man5_rot\", id: \"957863441098502164\" },\n    { name: \"man6_rot\", id: \"957863441173983242\" },\n    { name: \"man7_rot\", id: \"957863441228509194\" },\n    { name: \"man8_rot\", id: \"957863441211731998\" },\n    { name: \"man9_rot\", id: \"957863441270472754\" }\n  ],\n  [TILE_TYPE.PIN]: [\n    { name: \"pin1_rot\", id: \"957863441522122762\" },\n    { name: \"pin2_rot\", id: \"957863441329160254\" },\n    { name: \"pin3_rot\", id: \"957863441601794048\" },\n    { name: \"pin4_rot\", id: \"957863441606013018\" },\n    { name: \"pin5_rot\", id: \"957863442012844102\" },\n    { name: \"pin6_rot\", id: \"957863441517916180\" },\n    { name: \"pin7_rot\", id: \"957863441899610142\" },\n    { name: \"pin8_rot\", id: \"957863441324974151\" },\n    { name: \"pin9_rot\", id: \"957863442402930749\" }\n  ],\n  [TILE_TYPE.SOU]: [\n    { name: \"sou1_rot\", id: \"957863441295609966\" },\n    { name: \"sou2_rot\", id: \"957863441312403456\" },\n    { name: \"sou3_rot\", id: \"957863441371136072\" },\n    { name: \"sou4_rot\", id: \"957863441270448169\" },\n    { name: \"sou5_rot\", id: \"957863441459200020\" },\n    { name: \"sou6_rot\", id: \"957863441530503228\" },\n    { name: \"sou7_rot\", id: \"957863441576628224\" },\n    { name: \"sou8_rot\", id: \"957863441698279424\" },\n    { name: \"sou9_rot\", id: \"957863441450811422\" }\n  ],\n  [TILE_TYPE.KAZE]: [\n    { name: \"ton_rot\", id: \"957863441526312990\" },\n    { name: \"nan_rot\", id: \"957863441178193970\" },\n    { name: \"sha_rot\", id: \"957863441241083924\" },\n    { name: \"pei_rot\", id: \"957863441161388083\" }\n  ],\n  [TILE_TYPE.SANGEN]: [\n    { name: \"haku_rot\", id: \"957863441043968000\" },\n    { name: \"hatsu_rot\", id: \"957863440733573181\" },\n    { name: \"chun_rot\", id: \"957863440700035073\" }\n  ],\n  DORA: {\n    [TILE_TYPE.MAN]: { name: \"man5dora_rot\", id: \"957863440855220255\" },\n    [TILE_TYPE.PIN]: { name: \"pin5dora_rot\", id: \"957863441358524468\" },\n    [TILE_TYPE.SOU]: { name: \"sou5dora_rot\", id: \"957863441660526663\" }\n  }\n} as const;\n\nexport const EMOJI_GRAYSCALE = {\n  [TILE_TYPE.MAN]: [\n    { name: \"man1_gs\", id: \"957865725173841961\" },\n    { name: \"man2_gs\", id: \"957865725316440076\" },\n    { name: \"man3_gs\", id: \"957865725714903121\" },\n    { name: \"man4_gs\", id: \"957865725584883722\" },\n    { name: \"man5_gs\", id: \"957865725442265109\" },\n    { name: \"man6_gs\", id: \"957865725350010923\" },\n    { name: \"man7_gs\", id: \"957865725580693534\" },\n    { name: \"man8_gs\", id: \"957865725601669120\" },\n    { name: \"man9_gs\", id: \"957865725815578644\" }\n  ],\n  [TILE_TYPE.PIN]: [\n    { name: \"pin1_gs\", id: \"957865725802991666\" },\n    { name: \"pin2_gs\", id: \"957865725542957057\" },\n    { name: \"pin3_gs\", id: \"957865725895278592\" },\n    { name: \"pin4_gs\", id: \"957865726104973312\" },\n    { name: \"pin5_gs\", id: \"957865725991731220\" },\n    { name: \"pin6_gs\", id: \"957865725538754581\" },\n    { name: \"pin7_gs\", id: \"957865726146928680\" },\n    { name: \"pin8_gs\", id: \"957865725924614194\" },\n    { name: \"pin9_gs\", id: \"957865726281146449\" }\n  ],\n  [TILE_TYPE.SOU]: [\n    { name: \"sou1_gs\", id: \"957865726193053717\" },\n    { name: \"sou2_gs\", id: \"957865725798785084\" },\n    { name: \"sou3_gs\", id: \"957865725651988511\" },\n    { name: \"sou4_gs\", id: \"957865725555531838\" },\n    { name: \"sou5_gs\", id: \"957865726121766982\" },\n    { name: \"sou6_gs\", id: \"957865726264352838\" },\n    { name: \"sou7_gs\", id: \"957865725857501254\" },\n    { name: \"sou8_gs\", id: \"957865725928833035\" },\n    { name: \"sou9_gs\", id: \"957865725903638539\" }\n  ],\n  [TILE_TYPE.KAZE]: [\n    { name: \"ton_gs\", id: \"957865725899456512\" },\n    { name: \"nan_gs\", id: \"957865725563899944\" },\n    { name: \"sha_gs\", id: \"957865725790396506\" },\n    { name: \"pei_gs\", id: \"957865725572288572\" }\n  ],\n  [TILE_TYPE.SANGEN]: [\n    { name: \"haku_gs\", id: \"957865725282889829\" },\n    { name: \"hatsu_gs\", id: \"957865725429698591\" },\n    { name: \"chun_gs\", id: \"957865725857521674\" }\n  ],\n  DORA: {\n    [TILE_TYPE.MAN]: { name: \"man5dora_gs\", id: \"957865725639417866\" },\n    [TILE_TYPE.PIN]: { name: \"pin5dora_gs\", id: \"957865726113357844\" },\n    [TILE_TYPE.SOU]: { name: \"sou5dora_gs\", id: \"957865725849112636\" }\n  }\n} as const;\n\nexport const YAKU = {\n  MENZEN_TSUMO: \"멘젠쯔모\",\n  RIICHI: \"리치\",\n  ONE_SHOT: \"일발\",\n  SEVEN_PAIRS: \"치또이쯔\",\n  PINGHU: \"핑후\",\n  ONE_PEKO: \"이페코\",\n  YAKUHAI: \"역패\",\n  TANGYAO: \"탕야오\",\n  LINSHANG: \"영상개화\",\n  CHANGKANG: \"창깡\",\n  HAITEI_MOON: \"해저로월\",\n  HAITEI_FISH: \"하저로어\",\n  THREE_COLOR_STRAIGHT: \"삼색동순\",\n  STRAIGHT: \"일기통관\",\n  CHANTA: \"찬타\",\n  TOITOI: \"또이또이\",\n  THREE_CLOSED: \"삼암각\",\n  THREE_COLOR_TRIPLET: \"삼색동각\",\n  LITTLE_THREE_DRAGON: \"소삼원\",\n  HONNODU: \"혼노두\",\n  THREE_QUADS: \"삼공자\",\n  TWO_PEKO: \"량페코\",\n  JUN_CHANTA: \"준찬타\",\n  HALF_FLUSH: \"혼일색\",\n  FLUSH: \"청일색\",\n  FOUR_CLOSED: \"사암각\",\n  THIRTEEN_ORPHANS: \"국사무쌍\",\n  NINE_GATES: \"구련보등\",\n  ALL_GREENS: \"녹일색\",\n  ALL_WORDS: \"자일색\",\n  ALL_TERMINALS: \"청노두\",\n  BIG_THREE_DRAGON: \"대삼원\",\n  LITTLE_FOUR_WINDS: \"소사희\",\n  BIG_FOUR_WINDS: \"대사희\",\n  FOUR_QUADS: \"사공자\",\n  DORA: \"도라\",\n  NAGASHI_MANGWAN: \"나가시만관\"\n} as const;\n\nexport const SCORE = {\n  MANGWAN: \"만관\",\n  HANEMAN: \"하네만\",\n  BAIMAN: \"배만\",\n  SANBAIMAN: \"삼배만\",\n  YAKUMAN: \"역만\"\n} as const;\n","export const strong = (word: string) => `**${word.trim().replace(/^[*]{2,}|[*]{2,}$/gm, \"\")}**`;\nexport const underline = (word: string) => `__${word.trim().replace(/^[_]{2,}|[_]{2,}$/gm, \"\")}__`;\nexport const italics = (word: string) => `*${word.trim().replace(/^\\*{1}[^*]*\\*{1}$/gm, word.trim().slice(1, -1))}*`;\nexport const strike = (word: string) => `~~${word.trim().replace(/[~]{2}/gm, \"\")}~~`;\nexport const code = (word: string) => `\\`${word.trim().replace(/^[`]{1,}|[`]{1,}$/gm, \"\")}\\``;\nexport const block = (word: string, lang = \"\") => `\\`\\`\\`${lang.trim()}\\n${word.trim()}\\`\\`\\``;\nexport const blockMd = (word: string, lang = \"\") => `\\`\\`\\`${lang}\\n${word}\\`\\`\\``;\nexport const link = (word: string, url: string) => `[${word}](${url})`;\n","import Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const PING = {\n  CMD: \"핑\",\n  DESC: \"퐁을 대답한다냥!\",\n  MSG: (ping: string, botName: string, botDisplayName: string, uptime: string) => dedent`\n    퐁이다냥! 현재 샴고양이 웹소켓 핑 평균은 ${strong(`${ping}ms`)}다냥!\n    ${botName}${Josa.c(botDisplayName, \"은/는\")} ${uptime}동안 일하고 있다냥!`,\n  FORMAT: {\n    DAYS: (val: number) => `${val}일`,\n    HOURS: (val: number) => `${val}시간`,\n    MINUTES: (val: number) => `${val}분`,\n    SECONDS: (val: number) => `${val}초`\n  }\n} as const;\n\nexport const INVITE = {\n  CMD: \"초대\",\n  DESC: \"봇을 초대할 수 있는 링크를 준다냥!\",\n  TITLE: (botName: string) => `${botName}의 초대링크다냥!`,\n  MSG: (botName: string) => `${EMOJI.LINK} 클릭해서 ${botName} 초대하기`\n} as const;\n\nexport const HELP = {\n  CMD: \"도움\",\n  DESC: \"명령어 목록을 보여준다냥!\",\n  ALIAS: [\"help\", \"도움말\"],\n  WEB_CATEGORY_INVITE_LINK: \"https://para.n-e.kr/#/command/bot\",\n  WEB_PRIVACY_LINK: \"http://para.n-e.kr/#/privacy\"\n} as const;\n\nexport const INFO = {\n  CMD: \"정보\",\n  DESC: \"봇과 관련된 정보를 볼 수 있다냥!\",\n  GUILD_CNT: (guildCnt: number) => `${EMOJI.UP_TRIANGLE} 서버 수 - ${guildCnt}개`,\n  USER_CNT: (userCnt: number) => `${EMOJI.PEOPLE} 사용자 수 - ${userCnt}명`,\n  DEV_SERVER: (serverName: string, inviteLink: string) => `${EMOJI.ENVELOPE_WITH_ARROW} [${serverName}](${inviteLink})`,\n  GITHUB_ICON_URL: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\n\nimport * as BOT from \"~/const/command/bot\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Bot = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={BOT.PING}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 핑</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>퐁이다냥! 현재 샴고양이 웹소켓 핑 평균은 224.0ms다냥!</div>\n          <div>@샴고양이는 15시간 42분 7초동안 일하고 있다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>봇 테스트용 명령어입니다.</div>\n        <div>추가로, 샴고양이의 업타임도 확인할 수 있습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.INVITE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 초대</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>샴고양이의 초대링크다냥!</div>\n          <div><a href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\" target=\"_blank\" rel=\"noreferrer\">{EMOJI.LINK}클릭해서 샴고양이 초대하기</a></div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이를 다른 서버에 초대할 수 있는 링크를 반환합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.HELP}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 도움</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.BOT} 봇</div>\n          <div>봇과 관련된 정보들을 확인할 수 있다냥!</div>\n          <div>{EMOJI.SMALL_BLUE_DIAMOND}도움</div>\n          <div>명령어 목록을 보여준다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이의 명령어 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.INFO}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 정보</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={siamese} />\n          <div>{EMOJI.UP_TRIANGLE} 서버 수 - 304개</div>\n          <div><a href=\"https://discord.gg/uuSPaYtF8W\" target=\"_blank\" rel=\"noreferrer\">{EMOJI.ENVELOPE_WITH_ARROW} 샴고양이 개발 서버</a></div>\n          <EmbedFooter text=\"https://github.com/WoodNeck/siamese\" image=\"https://images-ext-1.discordapp.net/external/J_O7iH5CMe8LDWWhW_Erxi1agpn-uesx6LP0hv0c2Zg/https/github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이의 정보를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Bot;\n","import React from \"react\";\n\nimport \"./EmbedMenu.css\";\n\nconst EmbedMenu: React.FC<{\n  items: Array<{ emoji: string; count: number }>\n}> = ({ items }) => {\n  return <div className=\"embed-menu-container\">\n    { items.map((item, idx) => <div key={idx} className=\"embed-menu-item\">{item.emoji} {item.count}</div>)}\n  </div>\n}\n\nexport default EmbedMenu;\n","import React from \"react\";\n\nimport \"./Mention.css\"\n\nconst Mention: React.FC<{ name: string }> = ({ name }) => {\n  return <span className=\"mention\">@{name}</span>\n};\n\nexport default Mention;\n","import { GuildMember } from \"discord.js\";\nimport Josa from \"josa-js\";\nimport styles from \"ansi-styles\";\n\nimport { dedent } from \"~/util/helper\";\nimport { block, strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const DICE = {\n  CMD: \"주사위\",\n  DESC: \"n면짜리 주사위를 굴린다냥! (기본값: 100)\",\n  USAGE: \"[n]\",\n  DESC_OPTION: \"굴릴 주사위 면 수를 알려달라냥!\",\n  USAGE_OPTION: \"n\",\n  MIN: 2,\n  MAX: 10000,\n  DEFAULT: 100,\n  MSG: (userName: string, num: number, maxNum: number) => {\n    // Korean josa for number 0-9\n    const josa = [\"이\", \"이\", \"가\", \"이\", \"가\", \"가\", \"이\", \"이\", \"이\", \"가\"];\n    const numStr = num.toString();\n    return `${userName}냥이 주사위를 굴려 🎲${strong(numStr)}${josa[num % 10]} 나왔다냥! (1-${maxNum})`;\n  },\n  ARG_INCORRECT: (min: number, max: number) => `${min}에서 ${max}사이의 숫자를 달라냥!`\n};\n\nexport const CHOOSE = {\n  CMD: \"골라줘\",\n  DESC: \"받은 항목들 중 하나를 임의로 골라준다냥!\",\n  USAGE: \"항목1 항목2 [항목3...]\",\n  USAGE_OPTION: \"항목\",\n  DESC_OPTION: \"선택할 항목들을 띄어쓰기로 구분해서 달라냥! ex) 샴 먼치킨 아비시니안 페르시안 메인쿤\",\n  ARG_NOT_SUFFICIENT: (prefix: string) => dedent`\n    고를 수 있는 항목을 충분히 달라냥!\n    ${block(`> ${prefix}${CHOOSE.CMD} 샴 먼치킨 아비시니안 페르시안 메인쿤`)}`\n};\n\nexport const SAY = {\n  CMD: \"따라해\",\n  DESC: \"해준 말을 지운 후에 따라한다냥!\",\n  USAGE: \"따라할 문장\",\n  TARGET: \"따라할 문장\",\n  USAGE_OPTION: \"문장\",\n  DESC_OPTION: \"따라할 문장을 달라냥!\",\n  SLASH_PLACEHOLDER: \"문장을 따라한다냥!\"\n};\n\nexport const VOTE = {\n  CMD: \"투표\",\n  DESC: \"채널 내에서 간단한 투표를 할 수 있다냥!\",\n  USAGE: \"제목\",\n  TARGET: \"투표 제목\",\n  DESC_OPTION: \"투표 제목을 달라냥!\",\n  CONVERSATION_TIME: 120,\n  OPTIONS_TITLE: \"투표 항목들을 말해달라냥!\",\n  OPTIONS_DESC: \"띄어쓰기로 항목들을 구분해서, 최소 2개에서 9개까지 투표 항목들을 말해달라냥!\",\n  OPTIONS_FOOTER: \"예) 옵션1 옵션2 \\\"띄어쓰기가 포함된 옵션\\\"\",\n  DURATION_TITLE: \"투표를 몇 분동안 하면 될까냥?\",\n  DURATION_DESC: dedent`\n\t\t\t투표를 종료하기까지 시간을 분 단위로 말해달라냥!\n\t\t\t최소 1분에서 최대 1440분(하루)까지 가능하다냥!`,\n  DURATION_FOOTER: \"예) 30\",\n  DURATION_MIN: 0.1,\n  DURATION_MAX: 1440,\n  HELP_DESC: dedent`\n\t\t\t투표를 시작한다냥! 번호 이모지를 클릭해서 투표하라냥!\n\t\t\t각자 가장 마지막에 클릭한 이모지가 최종 투표 항목이 된다냥!`,\n  RESULT_DESC: (name: string, votes: number) => `${strong(name)}${Josa.c(name, \"이/가\")} ${strong(votes.toString())}표로 가장 높은 표를 기록했다냥!`,\n  RESULT_DESC_TIE: (options: string[], vote: number) => `${options.map(strong).join(\", \")}${Josa.c(options[options.length - 1], \"이/가\")} ${vote}표로 동점이다냥!`,\n  DEFAULT_TITLE: (author: GuildMember) => `${author.displayName}의 투표`,\n  TITLE: (title: string) => `${EMOJI.BALLOT_BOX} ${title}`,\n  FOOTER: (name: string, time: number) => `${name}의 투표 (${EMOJI.STOPWATCH}${time}m)`,\n  COUNT: (cnt: number) => `${cnt}표`,\n  RANDOM_LABEL: \"랜덤\",\n  RANDOM_SYMBOL: \"RANDOM\",\n  RANDOM_VOTE_MSG: (index: number) => `${index + 1}번에 투표했다냥!`,\n  STOP_LABEL: \"투표종료\",\n  STOP_SYMBOL: \"STOP\",\n  ERROR: {\n    OPTIONS_BETWEEN_2_9: \"투표 항목을 띄어쓰기로 구분해서 2개에서 9개 사이로 달라냥!\",\n    DURATION_SHOULD_CLAMPED: max => `투표 시간은 1에서 ${max} 사이의 숫자를 말해달라냥!`,\n    ONLY_AUTHOR_CAN_STOP: \"투표를 생성한 사람만 투표를 종료할 수 있다냥!\"\n  }\n};\n\nexport const AVATAR = {\n  CMD: \"아바타\",\n  DESC: \"사용자의 아바타 이미지를 크게 보여준다냥!\",\n  USAGE: \"@사용자\",\n  USAGE_OPTION: \"사용자\",\n  DESC_OPTION: \"아바타를 볼 사용자를 알려달라냥!\"\n};\n\nexport const TRANSLATE = {\n  CMD: \"번역\",\n  DESC: \"문장을 번역한다냥!\",\n  USAGE: \"[언어] 문장\",\n  ALIAS: [\"번역해줘\"],\n  DESC_OPTION: \"번역할 문장을 달라냥!\",\n  USAGE_OPTION: \"문장\",\n  LANG_DESC: \"번역 결과로 나올 언어를 달라냥!\",\n  LANG_OPTION: \"언어\",\n  FOOTER_FORMAT: orig => `원문: ${orig}`,\n  DEFAULT_LANG: \"한국어\",\n  LANGS: {\n    \"아프리칸스어\": \"af\",\n    \"알바니아어\": \"sq\",\n    \"암하라어\": \"am\",\n    \"아랍어\": \"ar\",\n    \"아르메니아어\": \"hy\",\n    \"아제르바이잔어\": \"az\",\n    \"바스크어\": \"eu\",\n    \"벨라루스어\": \"be\",\n    \"벵골어\": \"bn\",\n    \"보스니아어\": \"bs\",\n    \"불가리아어\": \"bg\",\n    \"카탈로니아어\": \"ca\",\n    \"세부아노\": \"ceb\",\n    \"체와어\": \"ny\",\n    \"중국어\": \"zh-CN\",\n    \"중국어간체\": \"zh-CN\",\n    \"중국어번체\": \"zh-TW\",\n    \"코르시카어\": \"co\",\n    \"크로아티아어\": \"hr\",\n    \"체코어\": \"cs\",\n    \"덴마크어\": \"da\",\n    \"네덜란드어\": \"nl\",\n    \"영어\": \"en\",\n    \"에스페란토어\": \"eo\",\n    \"에스토니아어\": \"et\",\n    \"타갈로그어\": \"tl\",\n    \"핀란드어\": \"fi\",\n    \"프랑스어\": \"fr\",\n    \"프리지아어\": \"fy\",\n    \"갈리시아어\": \"gl\",\n    \"조지아어\": \"ka\",\n    \"독일어\": \"de\",\n    \"그리스어\": \"el\",\n    \"구자라트어\": \"gu\",\n    \"아이티크리올어\": \"ht\",\n    \"하우사어\": \"ha\",\n    \"하와이어\": \"haw\",\n    \"히브리어\": \"iw\",\n    \"힌디어\": \"hi\",\n    \"몽어\": \"hmn\",\n    \"헝가리어\": \"hu\",\n    \"아이슬란드어\": \"is\",\n    \"이그보어\": \"ig\",\n    \"인도네시아어\": \"id\",\n    \"아일랜드어\": \"ga\",\n    \"이탈리아어\": \"it\",\n    \"일본어\": \"ja\",\n    \"자바어\": \"jw\",\n    \"칸나다어\": \"kn\",\n    \"카자흐어\": \"kk\",\n    \"크메르어\": \"km\",\n    \"한국어\": \"ko\",\n    \"쿠르드어\": \"ku\",\n    \"키르기스어\": \"ky\",\n    \"라오어\": \"lo\",\n    \"라틴어\": \"la\",\n    \"라트비아어\": \"lv\",\n    \"리투아니아어\": \"lt\",\n    \"룩셈부르크어\": \"lb\",\n    \"마케도니아어\": \"mk\",\n    \"말라가시어\": \"mg\",\n    \"말레이어\": \"ms\",\n    \"말라얄람어\": \"ml\",\n    \"몰타어\": \"mt\",\n    \"마오리어\": \"mi\",\n    \"마라티어\": \"mr\",\n    \"몽골어\": \"mn\",\n    \"미얀마어\": \"my\",\n    \"네팔어\": \"ne\",\n    \"노르웨이어\": \"no\",\n    \"파슈토어\": \"ps\",\n    \"페르시아어\": \"fa\",\n    \"폴란드어\": \"pl\",\n    \"포르투갈어\": \"pt\",\n    \"펀자브어\": \"pa\",\n    \"루마니아어\": \"ro\",\n    \"러시아어\": \"ru\",\n    \"사모아어\": \"sm\",\n    \"스코틀랜드게일어\": \"gd\",\n    \"세르비아어\": \"sr\",\n    \"세소토어\": \"st\",\n    \"쇼나어\": \"sn\",\n    \"신디어\": \"sd\",\n    \"신할라어\": \"si\",\n    \"슬로바키아어\": \"sk\",\n    \"슬로베니아어\": \"sl\",\n    \"소말리아어\": \"so\",\n    \"스페인어\": \"es\",\n    \"순다어\": \"su\",\n    \"스와힐리어\": \"sw\",\n    \"스웨덴어\": \"sv\",\n    \"타지크어\": \"tg\",\n    \"타밀어\": \"ta\",\n    \"텔루구어\": \"te\",\n    \"태국어\": \"th\",\n    \"터키어\": \"tr\",\n    \"우크라이나어\": \"uk\",\n    \"우르두어\": \"ur\",\n    \"우즈베크어\": \"uz\",\n    \"베트남어\": \"vi\",\n    \"웨일즈어\": \"cy\",\n    \"코사어\": \"xh\",\n    \"이디시어\": \"yi\",\n    \"요루바어\": \"yo\",\n    \"줄루어\": \"zu\"\n  },\n  ERROR: {\n    NO_CONTENT: \"번역할 내용을 달라냥!\"\n  },\n  LIST: {\n    CMD: \"목록\",\n    DESC: \"번역 가능한 언어들을 보여준다냥!\",\n    ENTRY_PER_PAGE: 20,\n    ENTRY: (lang: string) => `${EMOJI.SMALL_WHITE_SQUARE}${lang}`,\n    MENU_TIME: 30\n  }\n};\n\nexport const CALCULATOR = {\n  CMD: \"계산기\",\n  DESC: \"계산기를 표시한다냥!\"\n} as const;\n\nexport const SPELLING = {\n  CMD: \"맞춤법\",\n  DESC: \"맞춤법을 검사한다냥!\",\n  USAGE: \"문장\",\n  USAGE_DESC: \"검사할 문장이다냥!\",\n  API_URL: \"https://m.search.naver.com/p/csearch/ocontent/util/SpellerProxy\",\n  COMMON_PARAMS: {\n    where: \"nexearch\",\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    color_blindness: 0,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _: 1650025851254\n  },\n  RESULT_TITLE_OKAY: `${EMOJI.GREEN_CHECK} 맞춤법에 문제가 없다냥!`,\n  RESULT_TITLE: `${EMOJI.MEMO} 교정 결과다냥!`,\n  RESULT_DESC: block(dedent`${EMOJI.MIDDLE_DOT} ${styles.color.red.open}맞춤법${styles.color.red.close}   ${EMOJI.MIDDLE_DOT} ${styles.color.yellow.open}표준어의심${styles.color.yellow.close}\n    ${EMOJI.MIDDLE_DOT} ${styles.color.green.open}띄어쓰기${styles.color.green.close} ${EMOJI.MIDDLE_DOT} ${styles.color.blue.open}통계적교정${styles.color.blue.close}`, \"ansi\"),\n  RESULT_FOOTER: \"윈도우에서만 정상적으로 확인 가능하다냥!\"\n} as const;\n","import { useSelector } from \"react-redux\";\n\nimport CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport Mention from \"../../component/command/Mention\";\n\nimport { RootState } from \"../../redux/reducers\";\nimport * as UTILITY from \"~/const/command/utility\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Utility = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  const userName = user?.username ?? \"USER\";\n\n  return <>\n    <CommandItem command={UTILITY.DICE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 주사위</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><Mention name={userName} />냥이 주사위를 굴려 {EMOJI.DICE}54가 나왔다냥! (1-100)</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">샴 주사위 10000</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><Mention name={userName} />냥이 주사위를 굴려 {EMOJI.DICE}7409가 나왔다냥! (1-10000)</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>n(기본값: 100)면짜리 주사위를 굴려 결과를 보여드립니다.</div>\n        <div>n은 {UTILITY.DICE.MIN}부터 {UTILITY.DICE.MAX}까지 가능합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.CHOOSE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 골라줘 이거 요거 저거</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">요거</ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>주어진 항목들 중에 하나를 골라드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.SAY}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 따라해 냥</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">냥</ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>사용자의 명령어 메시지를 삭제한 후, 해당 메시지의 내용을 따라합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.VOTE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 투표 오늘 저녁 뭐먹지?</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표 항목들을 말해달라냥!</div>\n          <div>콤마(,)로 항목들을 구분해서, 최소 2개에서 9개까지 투표 항목들을 말해달라냥!</div>\n          <div>예) 옵션1, 옵션2, 옵션3</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">🍔, 🍕, 🍜, 🍣, 굶어</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표를 몇 분동안 하면 될까냥?</div>\n          <div>투표를 종료하기까지 시간을 분 단위로 말해달라냥!</div>\n          <div>최소 1분에서 최대 1440분(하루)까지 가능하다냥!</div>\n          <div>예) 30</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">30</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표를 시작한다냥! 번호 이모지를 클릭해서 투표하라냥!</div>\n          <div>각자 가장 마지막에 클릭한 이모지가 최종 투표 항목이 된다냥!</div>\n          <div>{EMOJI.BALLOT_BOX} 오늘 저녁 뭐먹지?</div>\n          <div>1️⃣ 🍔</div>\n          <div>2️⃣ 🍕</div>\n          <div>3️⃣ 🍜</div>\n          <div>4️⃣ 🍣</div>\n          <div>5️⃣ 굶어</div>\n          <EmbedFooter image={`${user?.avatarURL ?? siamese.avatar}`} text={`${userName}의 투표 (⏱️30m)•오늘 오후 3:51`}></EmbedFooter>\n          <EmbedMenu items={[{ emoji: \"1️⃣\", count: 1 },{ emoji: \"2️⃣\", count: 1 }, { emoji: \"3️⃣\", count: 1 }, { emoji: \"4️⃣\", count: 1 }, { emoji: \"5️⃣\", count: 1 }]} />\n        </ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🍔가 5표로 가장 높은 표를 기록했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 채널 내에서 무기명 투표를 시작합니다.</div>\n        <div>투표 옵션은 최소 2개에서 최대 9개까지 가능합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.AVATAR}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아바타 <Mention name={userName} /></ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <img className=\"user-avatar\" src={user?.avatarURL ?? \"https://cdn.discordapp.com/embed/avatars/0.png\"} />\n          <EmbedFooter image={`${user?.avatarURL ?? siamese.avatar}`} text={userName}></EmbedFooter>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>멘션한 유저의 아바타를 큰 사이즈로 보여줍니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.TRANSLATE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 번역 Hello</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.MEMO} 안녕하세요</div>\n          <div>{EMOJI.WWW} 영어: Hello</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">샴 번역 프랑스어 안녕하세요</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.MEMO} salut</div>\n          <div>{EMOJI.WWW} 한국어: 안녕하세요</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>주어진 문장을 한국어로 번역합니다.</div>\n        <div>반대로, 번역할 언어가 주어졌을 경우 한국어 문장을 해당 언어로 번역합니다.</div>\n        <details>\n          <summary>번역 가능한 언어 목록</summary>\n          <ol>{ Object.keys(UTILITY.TRANSLATE.LANGS).map(lang => (\n            <li key={lang} className=\"little-tag\">{lang}</li>\n          )) }</ol>\n        </details>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.TRANSLATE.LIST} parent={UTILITY.TRANSLATE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 번역 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{ Object.keys(UTILITY.TRANSLATE.LANGS).slice(0, 10).map(lang => (\n            <div key={lang}>{EMOJI.SMALL_WHITE_SQUARE} {lang}</div>\n          )) }</div>\n          <div>1/5</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        번역 가능한 언어 목록을 표시합니다.\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.SPELLING}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 맞춤법 왜않된데?</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>📝 교정 결과다냥!</div>\n          <div>왜 안 된대?</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        번역 가능한 언어 목록을 표시합니다.\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Utility;\n","import React from \"react\";\n\nimport \"./EmbedField.css\";\n\nconst EmbedField: React.FC<{\n  title: string;\n  text: string | React.ReactNode;\n}> = ({ title, text }) => {\n  return <div className=\"embed-field-container\">\n    <span className=\"embed-field-title\">{title}</span>\n    <span className=\"embed-field-text\">{text}</span>\n  </div>\n}\n\nexport default EmbedField;\n","import React from \"react\";\n\nimport \"./Warn.css\"\n\nconst Warn: React.FC = ({ children }) => {\n  return <div className=\"nsfw-container\">\n    ⚠️ {children}\n  </div>\n};\n\nexport default Warn;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport { strong, strike, link } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const IMAGE = {\n  CMD: \"이미지\",\n  DESC: \"구글 이미지를 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"이미지\",\n  DESC_OPTION: \"검색할 이미지 키워드를 달라냥!\",\n  SEARCH_URL: \"https://www.google.com/search\",\n  SEARCH_PARAMS: (query, isSafeSearch) =>\n    // nfpr: disable auto query correction(ex: museuk -> museum)\n    // safe: enable safe searching\n    isSafeSearch\n      ? {\n        q: query,\n        tbm: \"isch\",\n        nfpr: \"1\",\n        safe: \"active\"\n      }\n      : {\n        q: query,\n        tbm: \"isch\",\n        nfpr: \"1\",\n        pws: \"0\",\n        gl: \"us\",\n        gws_rd: \"cr\"\n      },\n  FAKE_HEADER: {\n    \"user-agent\": \"Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Mobile Safari/537.36 Edg/91.0.864.64\"\n  }\n} as const;\n\nexport const YOUTUBE = {\n  CMD: \"유튜브\",\n  DESC: \"유튜브 동영상을 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"동영상\",\n  DESC_OPTION: \"검색할 동영상의 키워드를 달라냥!\",\n  MAX_RESULTS: 10,\n  VIDEO_URL: (videoId: string) => `https://youtu.be/${videoId}`\n} as const;\n\nexport const KIN = {\n  CMD: \"지식인\",\n  DESC: \"네이버 지식인을 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"지식인 항목\",\n  DESC_OPTION: \"검색할 키워드를 달라냥!\",\n  SERVICE_NAME: \"네이버 지식인\",\n  ICON: \"https://www.naver.com/favicon.ico?1\",\n  ITEMS_PER_PAGE: 5,\n  SEARCH_URL: \"https://openapi.naver.com/v1/search/kin.json\",\n  SEARCH_PARAMS: (query: string) => ({\n    query,\n    display: 50,\n    sort: \"sim\"\n  })\n} as const;\n\nexport const CHEAPEST = {\n  CMD: \"최저가\",\n  DESC: \"게임 최저가를 cheapshark.com에서 검색한다냥!\",\n  USAGE: \"게임명\",\n  TARGET: \"게임\",\n  DESC_OPTION: \"검색할 게임 이름을 달라냥!\",\n  SEARCH_URL: \"https://www.cheapshark.com/api/1.0/deals\",\n  SEARCH_PARAMS: (query: string) => ({\n    title: query,\n    sortBy: \"Savings\",\n    pageSize: 10,\n    pageNumber: 0\n  }),\n  REDIRECT_URL: (id: string) => `https://www.cheapshark.com/redirect.php?dealID=${id}`,\n  GAME_SALE_DESC: (price: string, originalPrice: string, savings: number, metaScore: number, metaLink: string) => dedent`\n    ${EMOJI.DOLLAR} ${strong(`${price}$`)} / ${strike(originalPrice)}$ (${savings}% 할인)\n    ${metaScore ? `Metascore: ${link(metaScore.toString(), `https://www.metacritic.com${metaLink}`)}` : \"\"}`,\n  GAME_NO_SALE_DESC: (originalPrice: string) => dedent`\n    ${EMOJI.DOLLAR} ${strong(`${originalPrice}$`)}`,\n  METASCORE_IMG: \"https://www.metacritic.com/images/icons/metacritic-icon.svg\",\n  METASCORE_COLOR: (score: number) => score >= 75\n    ? \"#66cc33\"\n    : score >= 50\n      ? \"#ffcc33\"\n      : \"#ff0000\",\n  REVIEW_TEXT: {\n    \"Overwhelmingly Positive\": \"압도적으로 긍정적\",\n    \"Very Positive\": \"매우 긍정적\",\n    \"Positive\": \"긍정적\",\n    \"Mostly Positive\": \"대체로 긍정적\",\n    \"Mixed\": \"복합적\",\n    \"Mostly Negative\": \"대체로 부정적\",\n    \"Negative\": \"부정적\",\n    \"Very Negative\": \"매우 부정적\",\n    \"Overwhelmingly Negative\": \"압도적으로 부정적\"\n  },\n  REVIEW_FOOTER: (text: string, percent: string, count: string) => `${text} - 전체 사용자 평가 ${count}건 중 ${percent}%가 긍정적이다냥!`,\n  REVIEW_ICON: (percent: number) => percent\n    ? (percent >= 70) ? \"https://www.cheapshark.com/img/reviews/positive.png\"\n      : (percent >= 40) ? \"https://www.cheapshark.com/img/reviews/mixed.png\"\n        : \"https://www.cheapshark.com/img/reviews/negative.png\"\n    : \"\"\n} as const;\n\nexport const SHOPPING = {\n  CMD: \"쇼핑\",\n  DESC: \"네이버 쇼핑에 상품을 검색한다냥!\",\n  USAGE: \"상품명\",\n  TARGET: \"상품\",\n  DESC_OPTION: \"검색할 상품명을 달라냥!\",\n  ICON: \"https://www.naver.com/favicon.ico?1\",\n  SEARCH_URL: \"https://openapi.naver.com/v1/search/shop.json\",\n  SEARCH_PARAMS: (query: string) => ({\n    query,\n    display: 10\n  }),\n  PRICE: (low: number, high: number) => dedent`\n    ${high ? `${EMOJI.MIDDLE_DOT} 최저 ${low}원 ~ ${high}원` : `${EMOJI.MIDDLE_DOT} ${low}원`}`,\n  PRODUCT_TYPE: {\n    1: \"일반상품\",\n    2: \"일반상품\",\n    3: \"일반상품\",\n    4: \"중고상품\",\n    5: \"중고상품\",\n    6: \"중고상품\",\n    7: \"단종상품\",\n    8: \"단종상품\",\n    9: \"단종상품\",\n    10: \"판매예정상품\",\n    11: \"판매예정상품\",\n    12: \"판매예정상품\"\n  }\n} as const;\n\nexport const SEARCH = {\n  CMD: \"검색\",\n  DESC: \"구글에서 문서를 검색한다냥!\",\n  USAGE: \"검색할 내용\",\n  TARGET: \"검색 결과\",\n  USAGE_OPTION: \"검색어\",\n  DESC_OPTION: \"검색할 키워드를 달라냥!\",\n  URL: \"https://www.google.com/search\",\n  PARAMS: (query: string) => ({\n    q: query\n  })\n} as const;\n\nexport const STOCK = {\n  CMD: \"주식\",\n  DESC: \"주식/증권 정보를 검색한다냥!\",\n  USAGE: \"종목명\",\n  TARGET: \"검색 결과\",\n  ALIAS: [\"증권\"],\n  DESC_OPTION: \"검색할 주식/증권 항목을 달라냥!\",\n  URL: (query: string) => `https://ac.finance.naver.com/ac?q=${encodeURIComponent(query)}&q_enc=euc-kr&t_koreng=1&st=111&r_lt=111`,\n  DOME_STOCK_HEADER_URL: (id: string) => `https://m.stock.naver.com/api/item/getOverallHeaderItem.nhn?code=${id}`,\n  DOME_STOCK_INFO_URL: (id: string) => `https://m.stock.naver.com/api/html/item/getOverallInfo.nhn?code=${id}`,\n  DOME_SISE_URL: (id: string) => `https://m.stock.naver.com/sise/siseIndex.nhn?code=${id}`,\n  WORLD_BASIC_URL: (id: string) => `https://api.stock.naver.com/stock/${id}/basic`,\n  WORLD_SISE_URL: (id: string) => `https://api.stock.naver.com/index/${id}/basic`,\n  TIMES: {\n    \"일봉\": \"candle/day\",\n    \"주봉\": \"candle/week\",\n    \"월봉\": \"candle/month\",\n    \"1일\": \"day\",\n    \"3개월\": \"area/month3\",\n    \"1년\": \"area/year\",\n    \"3년\": \"area/year3\",\n    \"10년\": \"area/year10\"\n  },\n  CURRENCY: (num: number) => `${num}원`,\n  DOME_IMAGE: (id: string, time: string) => `https://ssl.pstatic.net/imgfinance/chart/mobile/${time}/${id}_end.png`,\n  WORLD_IMAGE: (id: string, time: string, isStock: boolean) => `https://ssl.pstatic.net/imgfinance/chart/mobile/world${isStock ? \"/item\" : \"\"}/${time}/${id}_end.png`,\n  DOME_THUMB: (id: string) => `https://ssl.pstatic.net/imgfinance/chart/mobile/mini/${id}_end_up_tablet.png`,\n  WORLD_THUMB: (id: string, isStock: boolean) => `https://ssl.pstatic.net/imgfinance/chart/mobile/world${isStock ? \"/item\" : \"\"}/day/${id}_end_up_tablet.png`\n} as const;\n\nexport const COIN = {\n  CMD: \"코인\",\n  DESC: \"가상화폐 정보를 검색한다냥!\",\n  USAGE: \"코인명\",\n  TARGET: \"코인\",\n  DESC_OPTION: \"검색할 코인명을 달라냥!\",\n  MARKET_KEY: \"market\",\n  MARKET_URL: \"https://api.upbit.com/v1/market/all?isDetails=true\",\n  TICKER_URL: \"https://api.upbit.com/v1/ticker\",\n  CHART_ID_URL: \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/map\",\n  CHART_IMAGE_URL: (id: number) => `https://s3.coinmarketcap.com/generated/sparklines/web/7d/usd/${id}.png`,\n  COIN_IMAGE_URL: (id: number) => `https://s2.coinmarketcap.com/static/img/coins/64x64/${id}.png`,\n  NAME: {\n    HIGH_PRICE: \"고가\",\n    LOW_PRICE: \"저가\",\n    TRADE_VOLUME_24H: \"거래량(24H)\",\n    TRADE_PRICE_24H: \"거래대금(24H)\",\n    HIGHEST_52_WEEK_PRICE: \"52주 신고가\",\n    LOWEST_52_WEEK_PRICE: \"52주 신저가\"\n  }\n};\n\nexport const EXCHANGE = {\n  CMD: \"환율\",\n  DESC: \"환율 정보를 검색한다냥!\",\n  USAGE: \"금액 + 화폐 단위 (예: 100달러)\",\n  DESC_OPTION: \"변환할 금액을 금액 + 화폐 단위로 알려달라냥! (예: 100달러)\",\n  USAGE_OPTION: \"금액\",\n  CACHE_KEY: \"exchange_cache_key\",\n  API_URL: \"https://quotation-api-cdn.dunamu.com/v1/forex/recent?codes=FRX.KRWUSD,FRX.KRWJPY,FRX.KRWCNY,FRX.KRWEUR,FRX.KRWGBP,FRX.KRWCHF,FRX.KRWCAD,FRX.KRWNZD,FRX.KRWHKD,FRX.KRWBRL,FRX.KRWMXN,FRX.KRWAED,FRX.KRWKWD,FRX.KRWBHD,FRX.KRWINR,FRX.KRWSAR,FRX.KRWNOK,FRX.KRWDKK,FRX.KRWMYR,FRX.KRWBDT,FRX.KRWPKR,FRX.KRWIDR,FRX.KRWTWD,FRX.KRWPHP,FRX.KRWSEK,FRX.KRWAUD,FRX.KRWSGD,FRX.KRWTHB,FRX.KRWEGP,FRX.KRWBND,FRX.KRWILS,FRX.KRWJOD,FRX.KRWVND,FRX.KRWRUB,FRX.KRWHUF,FRX.KRWPLN,FRX.KRWZAR,FRX.KRWMNT,FRX.KRWCZK,FRX.KRWKZT,FRX.KRWQAR,FRX.KRWTRY\",\n  DEFAULT_UNIT: \"원\",\n  CHANGE: {\n    RISE: \"RISE\",\n    FALL: \"FALL\"\n  },\n  ERROR: {\n    WRONG_FORM: \"잘못된 형식이다냥! 금액 + 화폐 단위를 달라냥! (예: 100달러)\",\n    WRONG_UNIT: (unit: string) => `${Josa.r(unit, \"은/는\")} 모르는 단위다냥!`\n  }\n};\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedField from \"../../component/embed/EmbedField\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport Warn from \"../../component/command/Warn\";\n\nimport * as SEARCH from \"~/const/command/search\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Search = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n      <CommandItem command={SEARCH.SEARCH}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 검색 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>샴(고양이) - 나무위키</div>\n          <div>2021년 2월 18일 ... 샴 고양이 (Siamese Cat)는 태국 원산의 고양이의 한 종류이다.</div>\n          <div>2. 기원[편집]. 샴은 태국에서 자연 발생한 종으로 흔히 태국 왕가의 고양이 품종 ...</div>\n          <div>나무위키 • (1/10)</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>구글 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.IMAGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 이미지 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <img className=\"bot-avatar\" src={siamese.avatar} />\n          <div>1/9</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>구글 이미지 검색 결과를 최대 10개까지 보여드립니다.</div>\n        <Warn>\n          후방주의 채널에서 사용시 세이프서치를 사용하지 않습니다.\n        </Warn>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.YOUTUBE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 유튜브 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://youtu.be/6NoVVJYH2S4\" target=\"_blank\" rel=\"noreferrer\">https://youtu.be/6NoVVJYH2S4</a></div>\n          <img className=\"bot-avatar\" src=\"https://lh3.googleusercontent.com/z6Sl4j9zQ88oUKNy0G3PAMiVwy8DzQLh_ygyvBXv0zVNUZ_wQPN_n7EAR2By3dhoUpX7kTpaHjRPni1MHwKpaBJbpNqdEsHZsH4q\" />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>유튜브 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.KIN}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 지식인 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedField title=\"샴 고양이\" text=\"안녕하세요, 샴 고양이 키우고 싶어 하는데 샴 고양이 주의 할 점이랑 샴 고양이가 좋아하는 음식,장난감 등 꿀팁 좀... 샴고양이도 일반 고양이랑 별로 다른게 없읍니다. 그저 있다면 사람을 더 좋아하는 온순한 애교냥이에...\" />\n          <EmbedField title=\"샴고양이와 키우기 좋은 종\" text=\"안녕하세요 현재 샴고양이를 키우고 있는데 제가 일 다닐때 애기가 많이 우울해하는거같아서 스코티쉬폴드를... 그래서 이번에 폴드는 아는 지인분께 무료분양드리고 다른 고양이를 찾고있는데 혹시 샴고양이와 잘맞는 고양이 종이...\" />\n          <EmbedField title=\"샴 고양이 어디가 아픈걸까요\" text=\"5살 샴 고양이를 키우고있어요 근데 고양이가 마시는 물 그릇에 이렇게 뿌옇게 뭐가 있어요. 어디가 아픈걸까요..ㅠ (사료그릇이랑 물그릇을 나란히 두는게 아니여서 사료가 물그릇에 빠진건 아니에요 단순히 사진속의 뿌연거만 보고 뭔지...\" />\n          <div>1/10</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>네이버 지식인 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.CHEAPEST}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 최저가 Nekopara Vol.1</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>NEKOPARA Vol. 1</div>\n          <div>{EMOJI.DOLLAR} 9.99$</div>\n          <EmbedFooter\n            image=\"https://images-ext-1.discordapp.net/external/PAeHsdFwI_DE_DXWVIHYDOCeuNWS4D0CFky4EJkZFvc/https/www.cheapshark.com/img/reviews/positive.png\"\n            text=\"압도적으로 긍정적 - 전체 사용자 평가 18988건 중 96%가 긍정적이다냥! • (1/1)\"\n          />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div><a href=\"https://cheapshark.com\" target=\"_blank\" rel=\"noreferrer\">cheapshark.com</a>에서 게임 최저가를 검색합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.SHOPPING}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 쇼핑 고양이 사료</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://search.shopping.naver.com/search/all?query=%EA%B3%A0%EC%96%91%EC%9D%B4%20%EC%82%AC%EB%A3%8C&frm=NVSHATC\" target=\"_blank\" rel=\"noreferrer\">고양이 전연령 사료</a></div>\n          <div>• 최저 5870원 ~ 133200원</div>\n          <EmbedFooter\n            image=\"https://images-ext-1.discordapp.net/external/r_tAvWWzO30Pppmuvj-Dw2F0ROoZxJWpmo3ytOCQc9I/%3F1/https/www.naver.com/favicon.ico\"\n            text=\"네이버 - 일반상품 • (1/10)\"\n          />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>네이버 쇼핑의 검색 결과를 보여드립니다.</CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.STOCK}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 주식 네이버</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n        <img src={`${process.env.PUBLIC_URL}/command/stock.png`} />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>주식/증권 검색 결과를 보여드립니다.</CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.COIN}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 코인 도지</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n        <img src={`${process.env.PUBLIC_URL}/command/coin.png`} />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>가상화폐 검색 결과를 보여드립니다.</CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.EXCHANGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 환율 100달러</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">💵 118750원</ChatBubble>\n        <ChatBubble position=\"right\">샴 환율 1000엔</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">💵 10431.8원</ChatBubble>\n        <ChatBubble position=\"right\">샴 환율 500CAD</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">💵 92240원</ChatBubble>\n      </ChatContainer>\n      <CommandDesc>해당 금액을 원으로 환산한 금액을 보여드립니다.</CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Search;\n","import { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DATE = (date: Date) => `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`;\n\nexport const RANDOM = {\n  CMD: \"랜덤\",\n  DESC: \"이 채널의 랜덤한 메시지를 보여준다냥!\",\n  MSG_FETCH_LIMIT: 100,\n  MSG_CHECK: (url: string) => `[원본 메시지${EMOJI.SPEECH_BUBBLE}](${url})`,\n  MSG_URL: (guildId: string, channelId: string, msgId: string) => `https://discordapp.com/channels/${guildId}/${channelId}/${msgId}`,\n  ERROR: {\n    NO_ENTRY_FOUND: \"이 채널은 아직 메시지가 충분히 기록되지 않았다냥!\",\n    CANT_FIND_MSG: \"메시지를 하나도 가져오지 못했다냥! 다시 시도해달라냥!\"\n  }\n} as const;\n\nexport const FORCES = [\n  \"육군\", \"의경\", \"해병\",\n  \"해군\", \"해경\", \"의방\",\n  \"공군\", \"공익\"\n] as const;\n\nexport const DISCHARGE = {\n  CMD: \"전역일\",\n  DESC: \"전역일 정보를 확인한다냥!\",\n  USAGE: \"이름\",\n  TARGET: \"찾을 사람\",\n  CHECK: \"확인\",\n  DESC_OPTION: \"전역일 정보를 알고 싶은 사람의 이름을 달라냥!\",\n  SHORTEN_AFTER_THIS_DATE: new Date(2018, 10 - 1, 1),\n  FORCE_INFO: {\n    육군: { duration: 21, maxShortenMonth: 3 },\n    의경: { duration: 21, maxShortenMonth: 3 },\n    해병: { duration: 21, maxShortenMonth: 3 },\n    해군: { duration: 23, maxShortenMonth: 3 },\n    해경: { duration: 23, maxShortenMonth: 3 },\n    의방: { duration: 23, maxShortenMonth: 3 },\n    공군: { duration: 24, maxShortenMonth: 2 },\n    공익: { duration: 24, maxShortenMonth: 3 }\n  },\n  TITLE: (name: string) => `${name}의 전역일 정보다냥!`,\n  DETAILED: \"자세한 정보\",\n  PROGRESS_EMOJI: (percent: number) => `${EMOJI.SPARKLING_HEART.repeat(percent)}${EMOJI.BLACK_HEART.repeat(100 - percent)}`,\n  FORCE_DETAIL: (force: string) => `${force}`,\n  SHORTEN_DATE: (days: number) => `단축일수: ${days}일`,\n  JOIN_DATE: (date: Date) => `입대일자: ${DATE(date)}`,\n  DISCHARGE_DATE: (date: Date) => `전역일자: ${DATE(date)}`,\n  DAYS_PROGRESSED: (days: number) => `복무한 날: ${days}일`,\n  DAYS_LEFT: (days: number) => `남은 날: ${days}일`,\n  PERCENTAGE: (percent: number) => `복무율: ${percent.toFixed(1)}%`,\n  ADD: {\n    CMD: \"추가해줘\",\n    DESC: \"새로운 전역일 정보를 추가한다냥!\",\n    USAGE: \"이름\",\n    ALIAS: [\"추가\"],\n    DESC_OPTION: \"추가할 사람의 이름을 달라냥!\",\n    NAME_MAX_LENGTH: 10,\n    CONVERSATION_TIME: 30,\n    PROMPT_TIME: 30,\n    NAME_ALREADY_EXISTS: (name: string) => `${name}의 전역일 정보는 이미 존재한다냥! 먼저 삭제해달라냥!`,\n    DIALOGUE_JOIN_DATE_TITLE: (name: string) => `${name}의 전역일 정보를 추가한다냥!`,\n    DIALOGUE_JOIN_DATE_DESC: \"먼저, YYYY/MM/DD의 형식으로 입대일을 알려달라냥!\",\n    DIALOGUE_JOIN_DATE_EXAMPLE: \"예) 2013/1/2\",\n    DIALOGUE_FORCES_TITLE: \"다음으로, 군별을 알려달라냥! 다음 중 하나를 골라달라냥!\",\n    DIALOGUE_FORCES_EXAMPLE: () => `${FORCES.join(\", \")}`,\n    SUCCESS: (name: string) => `${EMOJI.MILITARY_HELMET} ${strong(name)}의 정보를 추가했다냥!`\n  },\n  LIST: {\n    CMD: \"목록\",\n    DESC: \"전역일 목록을 확인한다냥!\",\n    ENTRY_PER_PAGE: 10,\n    ENTRY: (info: { name: string; joinDate: Date }) => `${EMOJI.SMALL_WHITE_SQUARE}${info.name} - ${DATE(info.joinDate)}`\n  },\n  REMOVE: {\n    CMD: \"삭제해줘\",\n    DESC: \"전역일 항목을 삭제한다냥!\",\n    USAGE: \"이름\",\n    DESC_OPTION: \"삭제할 사람의 이름을 달라냥!\",\n    ALIAS: [\"삭제\", \"제거\", \"제거해줘\"],\n    SUCCESS: (name: string) => `${EMOJI.MILITARY_HELMET} ${strong(name)}의 전역일 정보를 삭제했다냥!`\n  },\n  ERROR: {\n    NOT_FOUND: \"아직 등록되지 않은 사람이다냥!\",\n    EMPTY_RESULT: \"전역일 정보가 하나도 등록되지 않았다냥!\",\n    NAME_TOO_LONG: (max: number) => `이름이 너무 길다냥! ${max}자 이내로 달라냥!`,\n    PROVIDE_NAME_TO_ADD: \"등록할 사람의 이름을 달라냥!\",\n    PROVIDE_NAME_TO_REMOVE: \"삭제할 사람의 이름을 달라냥!\",\n    JOIN_DATE_NOT_FORMATTED: \"입대일자는 YYYY/MM/DD 형식으로 달라냥!\",\n    FORCES_NOT_LISTED: `${FORCES.map(force => strong(force)).join(\", \")} 중에 하나를 골라달라냥!`\n  }\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\n\nimport * as HISTORY from \"~/const/command/history\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst History = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WN의 전역일 정보다냥!</div>\n          <div style={{ wordBreak: \"break-all\" }}>{[...Array(100).keys()].map(() => EMOJI.SPARKLING_HEART)}</div>\n          <div>자세한 정보</div>\n          <div>공군</div>\n          <div>입대일자: 2013년 1월 2일</div>\n          <div>전역일자: 2015년 1월 1일</div>\n          <div>복무한 날: 729일</div>\n          <div>남은 날: 0일</div>\n          <div>복무율: 100.0%</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>등록된 전역일 정보를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.ADD} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 추가해줘 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WN의  전역일 정보를 추가한다냥!</div>\n          <div>먼저, YYYY/MM/DD의 형식으로 입대일을 알려달라냥!</div>\n          <div>예) 2013/1/2</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">2013/1/2</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>다음으로, 군별을 알려달라냥! 다음 중 하나를 골라달라냥!</div>\n          <div>육군, 의경, 해병, 해군, 해경, 의방, 공군, 공익</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">공군</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          💂 WN의 정보를 추가했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>전역일 정보를 새로 추가합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.LIST} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>🔹 WN - 2013년 1월 2일</div>\n          <div>1/1</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>등록된 전역일 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.REMOVE} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 삭제해줘 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          💂 WN의 전역일 정보를 삭제했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>전역일 정보를 삭제합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default History;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\nimport EnvVariables from \"~/type/EnvVariables\";\n\nexport const STEAM = {\n  CMD: \"스팀\",\n  DESC: \"스팀과 관련된 내용들을 조회할 수 있는 명령어들이다냥!\",\n  COMMUNITY_ID_DESC: \"스팀 계정의 커뮤니티 ID를 달라냥!\",\n  SEARCH_BY_COMMUNITY_ID_URL: \"http://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/\",\n  SEARCH_BY_GAME_NAME_URL: \"https://store.steampowered.com/api/storesearch/\",\n  SUMMARY_URL: \"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002\",\n  BAN_URL: \"http://api.steampowered.com/ISteamUser/GetPlayerBans/v1\",\n  RECENT_GAME_URL: \"http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v1\",\n  LEVEL_URL: \"http://api.steampowered.com/IPlayerService/GetSteamLevel/v1\",\n  FRIEND_URL: \"http://api.steampowered.com/ISteamUser/GetFriendList/v1\",\n  OWNING_GAME_URL: \"http://api.steampowered.com/IPlayerService/GetOwnedGames/v1\",\n  CURRENT_PLAYERS_URL: \"http://api.steampowered.com/ISteamUserStats/GetNumberOfCurrentPlayers/v1\",\n  ICON_URL: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\",\n  PROFILE_GAME_URL: baseUrl => `${baseUrl}games/?tab=all`,\n  GAME_IMG_URL: (appid, url) => `http://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${url}.jpg`,\n  STORE_URL: appid => `https://store.steampowered.com/app/${appid}`,\n  SEARCH_BY_COMMUNITY_ID_PARAMS: (env: EnvVariables, query: string) => ({\n    vanityurl: query,\n    key: env.STEAM_API_KEY\n  }),\n  SEARCH_BY_GAME_NAME_PARAMS: (query: string) => ({\n    term: query,\n    l: \"english\",\n    cc: \"US\"\n  }),\n  STEAM_IDS_PARAMS: (env: EnvVariables, id: string) => ({\n    steamids: id,\n    key: env.STEAM_API_KEY\n  }),\n  RECENT_GAME_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    count: 3\n  }),\n  STEAM_ID_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY\n  }),\n  GAME_ID_PARAMS: (env: EnvVariables, id: string) => ({\n    appid: id,\n    key: env.STEAM_API_KEY\n  }),\n  OWNING_GAME_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    include_appinfo: \"1\",\n    include_played_free_games: \"1\"\n  }),\n  FRIEND_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    relationship: \"friend\"\n  }),\n  PLAYTIME: (minute: number) => `총 플레이 시간: ${minute ? (minute / 60).toFixed(1) : 0}시간`,\n  PLAYTIME_SHORT: (minute: number) => `${minute ? (minute / 60).toFixed(1) : 0}시간`,\n  ERROR: {\n    USER_NOT_FOUND: \"그 아이디로는 유저를 찾지 못했다냥!\",\n    EMPTY_GAMES: \"계정이 비공개거나 가진 게임이 하나도 없다냥!\"\n  }\n} as const;\n\nexport const PROFILE = {\n  CMD: \"프로필\",\n  DESC: \"프로필 정보를 요약해서 보여준다냥!\",\n  USAGE: \"커뮤니티id\",\n  PERSONA_STATE: {\n    0: \"오프라인\",\n    1: \"온라인\",\n    2: \"바쁨\",\n    3: \"자리 비움\",\n    4: \"수면 중\",\n    5: \"거래할 사람 찾는 중\",\n    6: \"같이 게임해요\"\n  },\n  PLAYING_STATE: (game: string) => `${strong(game)}플레이 중`,\n  REGISTERED: (timestamp: number) => {\n    const date = new Date(timestamp);\n    return `${date.getUTCFullYear()}년 ${date.getUTCMonth() + 1}월에 가입`;\n  },\n  LAST_LOGOFF: (timestamp: number) => {\n    const dateDiff = new Date(new Date().getTime() - new Date(timestamp).getTime());\n\n    const diff = {\n      year: Math.floor(dateDiff.getUTCFullYear() - 1970),\n      month: Math.floor(dateDiff.getUTCMonth() % 12),\n      week: Math.floor(dateDiff.getUTCDate() / 7),\n      // If days over 31 it won't be a problem as we're not using this value then\n      day: Math.floor((dateDiff.getUTCDate() - 1) % 31),\n      hour: Math.floor(dateDiff.getUTCHours() % 24),\n      minute: Math.floor(dateDiff.getUTCMinutes() % 60)\n    };\n\n    const last = diff.year > 1\n      ? `${diff.year}년`\n      : diff.year && diff.month\n        ? `${diff.year}년 ${diff.month}개월`\n        : diff.month > 1\n          ? `${diff.month}개월`\n          : diff.week\n            ? `${diff.week}주`\n            : diff.day > 1\n              ? `${diff.day}일`\n              : diff.day && diff.hour\n                ? `${diff.day}일 ${diff.hour}시간`\n                : diff.hour > 1\n                  ? `${diff.hour}시간`\n                  : diff.hour && diff.minute\n                    ? `${diff.hour}시간 ${diff.minute}분`\n                    : `${Math.max(diff.minute, 1)}분`;\n    return `마지막 접속: ${last} 전`;\n  },\n  TITLE: (name: string, flag: string) => `${flag}${name}`,\n  FIELD_DETAIL: \"유저 정보\",\n  FIELD_BAN: \"밴 기록\",\n  FIELD_RECENT_GAME: \"최근 플레이 게임 (지난 2주간)\",\n  BAN_COMMUNITY: \"커뮤니티 밴\",\n  BAN_VAC: \"VAC 밴\",\n  BAN_GAME: \"게임 밴\",\n  BAN_ECONOMY: \"거래 밴\",\n  LEVEL: (level: number) => `LEVEL - ${strong(level.toString())}`,\n  FRIENDS: (friends: any[]) => `친구 - ${strong(friends.length.toString())}명`,\n  GAMES: (gamesCount: number) => `게임 - ${strong(gamesCount.toString())}개`,\n  GAME_DESC: (game: { name: string; playtime_2weeks: number }) => `${EMOJI.MIDDLE_DOT} ${strong(game.name)} - ${(game.playtime_2weeks / 60).toFixed(1)}시간`\n} as const;\n\nexport const RANDOM = {\n  CMD: \"랜덤\",\n  DESC: \"계정에서 무작위 게임을 가져와서 보여준다냥!\",\n  USAGE: \"커뮤니티id\"\n} as const;\n\nexport const LIBRARY = {\n  CMD: \"라이브러리\",\n  DESC: \"계정의 게임들을 플레이 시간이 높은 것부터 보여준다냥!\",\n  USAGE: \"커뮤니티id\",\n  GAMES_PER_PAGE: 10,\n  MAX_PAGES: 5\n} as const;\n\nexport const PLAYERS = {\n  CMD: \"동접\",\n  DESC: \"게임의 현재 접속자 수를 알려준다냥!\",\n  ALIAS: [\"동접자수\"],\n  USAGE: \"게임명\",\n  USAGE_DESC: \"현재 접속자 수를 조회할 게임 이름을 달라냥!\",\n  TARGET: \"게임\",\n  CURRENT: players => `현재 플레이어 수: ${players}`\n} as const;\n\nexport const TOP = {\n  CMD: \"동접순위\",\n  DESC: \"현재 동접순위를 확인한다냥!\",\n  SEARCH_URL: \"https://store.steampowered.com/stats/Steam-Game-and-Player-Statistics?l=koreana\",\n  GAMES_PER_PAGE: 10,\n  FORMAT_INFO: \"동접순위 (현재 / 최고)\",\n  GAME_TITLE: (idx: number, game: string[]) => `${idx}. ${strong(game[2])}`,\n  GAME_STATISTICS: (game: string[]) => `${EMOJI.MIDDLE_DOT} ${game[0]}명 / ${game[1]}명`\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedField from \"../../component/embed/EmbedField\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\n\nimport * as STEAM from \"~/const/command/steam\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Steam = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={STEAM.PROFILE} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 프로필 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WoodNeck</div>\n          <EmbedField title=\"유저 정보\" text={<><div>🇰🇷</div><div>LEVEL - 72</div><div>게임 - 1913개</div></>}/>\n          <EmbedField title=\"최근 플레이 게임 (지난 2주간)\" text=\"• 고양이 낙원 - 113.5시간\" />\n          <EmbedFooter image=\"https://images-ext-1.discordapp.net/external/1f_R4CatEN7peDuRS10JSuqTkc-jPnW8KGm4iOo_UUQ/https/upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\" text=\"2010년 4월에 가입\" />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 사용자의 스팀 프로필 정보를 요약해서 표시합니다.</div>\n        <div>스팀 커뮤니티 ID는 사용자 프로필에서 우클릭 {\"->\"} URL복사를 통해 확인하실 수 있습니다.</div>\n        <div>예) https://steamcommunity.com/id/woodneck {\"=>\"} \"woodneck\"</div>\n        <div>예2) https://steamcommunity.com/profiles/12345678901234567 {\"=>\"} \"12345678901234567\"</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.RANDOM} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 랜덤 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={{ avatar: \"https://images-ext-2.discordapp.net/external/Gk53Fo4pzLLTD4xClBFtVWUjfEid88YgIAYbmZ3_FNo/http/media.steampowered.com/steamcommunity/public/images/apps/224480/a2def5192d16c9a997dfff6d4f1febcd28ee83f9.jpg\", name: \"Octodad: Dadliest Catch\" }} />\n          <div>총 플레이 시간: 8.8시간</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 사용자의 계정에서 무작위 게임을 가져와 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.LIBRARY} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 라이브러리 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WoodNeck</div>\n          <div>{EMOJI.VIDEO_GAME} Atlas Reactor - 438.9시간</div>\n          <div>{EMOJI.VIDEO_GAME} Team Fortress 2 - 436.5시간</div>\n          <div>{EMOJI.VIDEO_GAME} Killing Floor 2 - 223.3시간</div>\n          <div>{EMOJI.VIDEO_GAME} Dota 2 - 196.1시간</div>\n          <div>{EMOJI.VIDEO_GAME} Tom Clancy's The Division - 190.5시간</div>\n          <div>{EMOJI.VIDEO_GAME} GameMaker: Studio - 187.4시간</div>\n          <div>{EMOJI.VIDEO_GAME} NEKOPARA Vol. 1 - 161.3시간</div>\n          <div>{EMOJI.VIDEO_GAME} Terraria - 138.1시간</div>\n          <div>{EMOJI.VIDEO_GAME} Aseprite - 126.8시간</div>\n          <div>{EMOJI.VIDEO_GAME} FINAL FANTASY XV WINDOWS EDITION - 125.1시간</div>\n          <div>1/5</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>사용자 계정의 게임들을 플레이 시간이 높은 것부터 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.PLAYERS} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 동접 Nekopara Vol.1</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://cdn.discordapp.com/attachments/817765838001668116/818511043021897748/1472914171_QQ20160902205022noise_scaleLevel1x2.000000.png\" target=\"_blank\" rel=\"noreferrer\">Nekopara Vol.1</a></div>\n          <div>현재 플레이어 수: 83</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 게임의 현재 접속자 수를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.TOP} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 동접순위</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedField title=\"1. Counter-Strike: Global Offensive\" text=\"• 800,857명 / 1,201,993명\" />\n          <EmbedField title=\"2. Dota 2\" text=\"• 467,223명 / 650,049명\" />\n          <EmbedField title=\"3. PLAYERUNKNOWN'S BATTLEGROUNDS\" text=\"• 330,183명 / 454,613명\" />\n          <EmbedField title=\"4. Valheim\" text=\"• 161,027명 / 330,489명\" />\n          <EmbedField title=\"5. Apex Legends\" text=\"• 157,783명 / 228,948명\" />\n          <EmbedFooter image=\"https://images-ext-1.discordapp.net/external/1f_R4CatEN7peDuRS10JSuqTkc-jPnW8KGm4iOo_UUQ/https/upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\" text=\"동접순위 (현재 / 최고) • (1/10)\" />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 가장 플레이어 수가 많은 게임을 100개까지 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Steam;\n","import \"./CommandInfo.css\";\n\nconst CommandItem: React.FC<{\n  title: string;\n}> = ({ title, children }) => {\n  return <div className=\"command-item command-info\">\n    <div className=\"command-info-title\">{title}</div>\n    {children}\n  </div>\n}\n\nexport default CommandItem;\n","import Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport * as EMOJI from \"~/const/emoji\";\nimport { code } from \"~/util/markdown\";\n\nexport const ICON = {\n  CMD: \"아이콘\",\n  DESC: \"아이콘 관리 페이지를 반환한다냥!\",\n  SLASH_DESC: \"아이콘 관련 명령어들이다냥!\",\n  MANAGE: \"관리\",\n  TITLE: (guildName: string) => `${EMOJI.LINK} ${guildName}의 아이콘 관리 페이지다냥!`,\n  NAME_MAX_LENGTH: 10\n};\n\nexport const SHOW = {\n  CMD: \"콘\",\n  DESC: \"저장해둔 아이콘을 표시한다냥!\",\n  USAGE: \"아이콘\",\n  ALIAS: [\"보여줘\"],\n  SLASH_DESC: \"아이콘 관련 명령어들이다냥!\",\n  DESC_OPTION: \"보여줄 아이콘 이름을 \\\"그룹이름 아이콘이름\\\"으로 달라냥! 그룹은 생략 가능하다냥\"\n};\n\nexport const ADD = {\n  CMD: \"추가해줘\",\n  DESC: \"새로운 아이콘을 추가한다냥!\",\n  USAGE: \"[그룹이름] 아이콘이름\",\n  ALIAS: [\"추가\"],\n  REPLACE_TITLE: \"이미 해당 이름을 가진 아이콘이 존재한다냥! 교체할거냥?\",\n  SUCCESS: (name: string) => `${Josa.r(name, \"을/를\")} 추가했다냥!`,\n  TUTORIAL_URL: \"https://cdn.discordapp.com/attachments/805419701386739722/805419755497848862/icon_add.png\",\n  ERROR: {\n    PROVIDE_NAME_TO_ADD: `추가할 아이콘 이름을 ${code(\"그룹명\")} ${code(\"아이콘명\")}으로 달라냥! 그룹명은 생략 가능하다냥!`,\n    PROVIDE_IMAGES: \"추가할 이미지도 같이 달라냥!\\n아래처럼 이미지를 추가하면서 명령어를 같이 입력하면 된다냥!\",\n    IMAGE_TOO_MANY: \"추가할 이미지는 한 장만 달라냥!\",\n    GROUP_NAME_TOO_LONG: `그룹명이 너무 길다냥! ${ICON.NAME_MAX_LENGTH}자 이내로 달라냥!`,\n    ICON_NAME_TOO_LONG: `아이콘 이름이 너무 길다냥! ${ICON.NAME_MAX_LENGTH}자 이내로 달라냥!`\n  }\n};\n\nexport const REMOVE = {\n  CMD: \"삭제해줘\",\n  DESC: \"기존 아이콘을 삭제한다냥!\",\n  USAGE: \"[그룹이름] 아이콘이름\",\n  SLASH_USAGE_ICON: \"아이콘\",\n  SLASH_USAGE_GROUP: \"그룹\",\n  USAGE_DESC_ICON: \"아이콘 이름을 달라냥!\",\n  USAGE_DESC_GROUP: \"아이콘 그룹이 있을 경우 그룹 이름을 달라냥!\",\n  ALIAS: [\"삭제\", \"제거\", \"제거해줘\"],\n  SUCCESS: (name: string) => `${Josa.r(name, \"을/를\")} 삭제했다냥!`,\n  ERROR: {\n    PROVIDE_NAME_TO_REMOVE: `삭제할 아이콘 이름을 ${code(\"그룹명\")} ${code(\"아이콘명\")}으로 달라냥! 그룹명은 생략 가능하다냥!`,\n    NOT_FOUND: \"아이콘을 찾을 수 없다냥!\"\n  }\n};\n\nexport const LIST = {\n  CMD: \"목록\",\n  DESC: dedent`\n    그룹 안의 아이콘 목록을 표시한다냥!\n    그룹 이름을 주지 않을 경우 그룹에 속하지 않은 아이콘들을 표시한다냥!`,\n  USAGE: \"그룹명\",\n  USAGE_DESC: \"아이콘을 찾을 그룹명을 달라냥!\",\n  ITEMS_NAME: \"등록된 폴더랑 이미지\",\n  ITEM_PER_PAGE: 10,\n  TYPE: {\n    GROUP: \"GROUP\",\n    ICON: \"ICON\"\n  },\n  EMOJI: {\n    GROUP: EMOJI.FILE,\n    ICON: EMOJI.PICTURE\n  } as const,\n  ERROR: {\n    NO_GROUP: \"그런 이름을 가진 그룹이 존재하지 않는다냥!\"\n  }\n};\n\nexport const ROLE = {\n  CMD: \"역할설정\",\n  DESC: \"아이콘을 관리할 수 있는 역할을 설정한다냥!\",\n  USAGE: \"[@역할명]\",\n  SLASH_USAGE: \"역할\",\n  DESC_USAGE: \"아이콘을 관리 권한을 토글할 역할을 달라냥! 역할을 주지 않을 경우, 모두가 역할을 사용할 수 있도록 설정한다냥!\",\n  ALIAS: [\"역할\"],\n  MSG: {\n    SUCCESS_WITH_ROLE: (roleMention: string) => `이제 서버 관리자랑 ${roleMention}만 아이콘을 관리할 수 있다냥!`,\n    SUCCESS_WITHOUT_ROLE: \"아이콘 관리 역할을 제거했다냥! 아무나 아이콘을 관리할 수 있다냥!\"\n  },\n  ERROR: {\n    PROVIDE_EXACTLY_ONE_ROLE: `설정할 역할은 하나만 ${code(\"@멘션\")}해서 달라냥!`\n  }\n};\n","import { Link } from \"react-router-dom\";\n\nimport CommandItem from \"../../component/command/CommandItem\";\nimport CommandInfo from \"../../component/command/CommandInfo\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport Mention from \"../../component/command/Mention\";\n\nimport * as ICON from \"~/const/command/icon\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Icon = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandInfo title=\"아이콘이란?\">\n      <ChatContainer>\n        <ChatBubble position=\"right\">~케장 그렇군요</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={{\n            name: \"USER\",\n            avatar: \"https://cdn.discordapp.com/embed/avatars/0.png\"\n          }} />\n          <img src=\"https://cdn.discordapp.com/attachments/817765838001668116/820596279734304768/c1e2f05c7e12b6be.png\" />\n        </ChatBubble>\n      </ChatContainer>\n      <div style={{ marginTop: \"20px\" }}>\n        <CommandDesc>\n          <div style={{ color: \"#000\" }}>아이콘은 접두사(~)에 이미지 이름을 붙여 메시지를 보내면 샴고양이가 메시지를 이미지로 변환시켜주는 기능입니다.</div>\n        </CommandDesc>\n        <div style={{ fontSize: \"1.5em\" }}>사용법</div>\n        <div>~[아이콘 그룹명] [아이콘 이름]</div>\n        <div>~[아이콘 이름] (그룹이 없는 경우)</div>\n        <hr />\n        <div><Link to=\"/icon\" style={{ fontSize: \"1.5em\" }}>아이콘 관리 페이지</Link></div>\n        <hr />\n        <div>이미지를 디스코드 서버에 저장하기 때문에, 최대 8MB까지의 이미지들만 업로드 가능합니다.</div>\n      </div>\n    </CommandInfo>\n    <CommandItem command={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <a href=\"https://woodneck.github.io/siamese/#/icon\">\n            {EMOJI.LINK} 샴고양이 개발 서버의 아이콘 관리 페이지다냥!\n          </a>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>아이콘 관리 페이지 링크를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.ADD} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">\n          <img src={siamese.avatar} className=\"bot-avatar\" />\n          <div>샴 아이콘 추가해줘 샴고양이</div>\n        </ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          샴고양이를 추가했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>새로운 아이콘을 추가합니다.</div>\n        <img src=\"https://cdn.discordapp.com/attachments/805419701386739722/805419755497848862/icon_add.png\" />\n        <div>위와 같이 이미지를 업로드하면서 명령어를 같이 입력하셔야 합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.REMOVE} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 삭제해줘 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          샴고양이를 삭제했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>기존 아이콘을 삭제합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.LIST} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.FILE} 고양</div>\n          <div>{EMOJI.FILE} 케장</div>\n          <div>{EMOJI.PICTURE} 샴고양이</div>\n          <div>1/1</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 서버의 아이콘 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.ROLE} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 역할설정 <Mention name=\"dev\" /></ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          이제 서버 관리자랑 <Mention name=\"dev\" />만 아이콘을 관리할 수 있다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>아이콘을 관리할 수 있는 역할을 설정합니다.</div>\n        <div>설정하지 않을 경우, 서버의 모든 사람이 아이콘을 관리할 수 있습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Icon;\n","import { Guild, Role } from \"discord.js\";\nimport Josa from \"josa-js\";\n\nimport Siamese from \"~/Siamese\";\nimport { roleMention } from \"~/util/helper\";\n\nexport const ROLE_RESTRICT = {\n  CMD: \"역할제한\",\n  DESC: \"봇을 사용할 수 있는 역할을 제한한다냥!\",\n  ADD: {\n    CMD: \"추가해줘\",\n    DESC: \"봇을 사용할 수 있는 역할을 추가한다냥!\",\n    USAGE: \"@역할명1 @역할명2 @역할명3\",\n    ALIAS: [\"추가\"],\n    ADDED: (bot: Siamese, guild: Guild, roles: Role[]) => `${bot.user.toString()}${Josa.c(bot.getDisplayName(guild), \"을/를\")} 사용할 수 있는 역할에 ${roles.map(role => role.toString()).join(\", \")}를 추가했다냥!`\n  },\n  LIST: {\n    CMD: \"목록\",\n    DESC: \"현재 봇을 사용할 수 있는 역할들을 표시한다냥!\",\n    CAN_BE_USED_FOR_EVERYONE: (bot: Siamese) => `이 서버에서는 누구나 ${bot.user.toString()}를 사용할 수 있다냥!`,\n    ACTIVE_ROLES: (roles: Role[]) => `현재 활성화된 역할들이다냥! - ${roles.map(role => role.toString()).join(\", \")}`\n  },\n  REMOVE: {\n    CMD: \"삭제해줘\",\n    DESC: \"봇을 사용할 수 있는 역할들 중에서 해당 역할을 제거한다냥!\",\n    USAGE: \"@역할명1 @역할명2 @역할명3\",\n    ALIAS: [\"삭제\", \"제거\", \"제거해줘\"],\n    REMOVED: (bot: Siamese, guild: Guild, roles: string[]) => `${bot.user.toString()}${Josa.c(bot.getDisplayName(guild), \"을/를\")} 사용할 수 있는 역할에서 ${roles.map(role => roleMention(role)).join(\", \")}를 제거했다냥!`\n  },\n  ERROR: {\n    MENTION_ROLE: \"역할을 @멘션해서 달라냥!\",\n    NO_ROLES_TO_REMOVE: \"이 서버에서는 누구나 명령어를 사용할 수 있다냥!\"\n  }\n};\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\n\nimport * as SETTING from \"~/const/command/setting\";\n\nconst Setting = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={SETTING.ROLE_RESTRICT.ADD} parent={SETTING.ROLE_RESTRICT}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 역할제한 추가해줘 @dev</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>@샴고양이를 사용할 수 있는 역할에 @dev를 추가했다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>봇을 사용할 수 있는 역할 목록에 주어진 역할을 추가합니다.</div>\n        <div>샴고양이를 사용할 수 있는 역할이 하나라도 주어졌을 경우, 해당 역할들만 샴고양이 명령어를 사용 가능합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SETTING.ROLE_RESTRICT.LIST} parent={SETTING.ROLE_RESTRICT}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 역할제한 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>현재 활성화된 역할들이다냥! - @dev</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 봇을 사용할 수 있는 역할들을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SETTING.ROLE_RESTRICT.REMOVE} parent={SETTING.ROLE_RESTRICT}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 역할제한 삭제해줘 @dev</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>@샴고양이를 사용할 수 있는 역할에서 @dev를 제거했다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>봇을 사용할 수 있는 역할들 목록에서 해당 역할을 제거합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Setting;\n","export const BOT = \"#c6cdc7\";\nexport const INFO = \"#e5e5e5\";\nexport const ERROR = \"#cc3300\";\nexport const WARNING = \"#ffcc00\";\nexport const GOOD = \"#99cc33\";\nexport const DEFAULT = \"DEFAULT\";\nexport const RANDOM = \"RANDOM\";\nexport const STEAM = {\n  OFFLINE: \"#6a6a6a\",\n  ONLINE: \"#53a4c4\",\n  PLAYING: \"#8fb93b\"\n} as const;\nexport const WHITE = \"#ffffff\";\nexport const BLACK = \"#000000\";\nexport const ORANGE = \"#f4900c\";\nexport const BLUE = \"#55acee\";\nexport const RED = \"#dd2e44\";\nexport const YELLOW = \"#fdcc58\";\n","export const MESSAGE_MAX_LENGTH = 1950;\n\nexport const FOOTER_MAX_LENGTH = 2048;\n\nexport const DISCORD_ERROR_CODE = {\n  UNKNOWN_CHANNEL: 10003,\n  MISSING_ACCESS: 50001,\n  MISSING_PERMISSION: 50013\n};\n\nexport const ACTIVITY = {\n  PLAYING: \"PLAYING\",\n  STREAMING: \"STREAMING\",\n  LISTENING: \"LISTENING\",\n  WATCHING: \"WATCHING\"\n} as const;\n\nexport const MSG_RETRIEVE_MAXIMUM = 100;\nexport const MAX_INTERACTION_DURATION = 900000 - 30000; // 15min - 30sec\n\nexport const BUTTON_STYLE = {\n  PRIMARY: \"PRIMARY\",\n  SECONDARY: \"SECONDARY\",\n  DANGER: \"DANGER\",\n  LINK: \"LINK\",\n  SUCCESS: \"SUCCESS\"\n} as const;\n","/* eslint-disable @typescript-eslint/naming-convention */\nexport enum CardSymbol {\n  SPADE,\n  HEART,\n  DIAMOND,\n  CLUB,\n  JOKER\n}\n\nexport const CARD_EMOJI = {\n  [CardSymbol.SPADE]: \"<:pixel_spade:961988790195482644>\",\n  [CardSymbol.CLUB]: \"<:pixel_club:961988790178676797>\",\n  [CardSymbol.HEART]: \"<:pixel_heart:961988790178701413>\",\n  [CardSymbol.DIAMOND]: \"<:pixel_diamond:961988790321287238>\",\n  [CardSymbol.JOKER]: \"<:pixel_joker:961990276879101972>\"\n};\n\nconst CARD_NAME = {\n  [0]: \"A\",\n  [10]: \"J\",\n  [11]: \"Q\",\n  [12]: \"K\",\n  JOKER: \"JOKER\"\n};\n\nclass PlayingCard {\n  private _symbol: CardSymbol;\n  // Index within a type(symbol like spade, heart, club), from 0 to 13\n  private _index: number;\n\n  // Unique ID\n  public get id() { return this._symbol * 13 + this._index; }\n  public get symbol() { return this._symbol; }\n  public get index() { return this._index; }\n\n  public constructor(symbol: CardSymbol, index: number) {\n    this._symbol = symbol;\n    this._index = index;\n  }\n\n  public getName(): string {\n    if (this._symbol === CardSymbol.JOKER) return \"JOKER\";\n\n    const index = this._index;\n\n    if (CARD_NAME[index]) return CARD_NAME[index];\n    else return `${index + 1}`;\n  }\n\n  public getEmoji(): string {\n    return CARD_EMOJI[this._symbol];\n  }\n\n  public canAnimate(): boolean {\n    if (this._symbol === CardSymbol.JOKER) return true;\n    if (this._index === 0) return true; // Ace\n    if (this._index >= 10) return true; // JQK\n    return false;\n  }\n}\n\nexport default PlayingCard;\n","import { GuildMember } from \"discord.js\";\nimport Josa from \"josa-js\";\n\nimport * as COLOR from \"~/const/color\";\nimport * as EMOJI from \"~/const/emoji\";\nimport { BUTTON_STYLE } from \"~/const/discord\";\nimport { EMOJI as MAHJONG_EMOJI, TILE_TYPE } from \"~/const/mahjong\";\nimport MahjongTile from \"~/core/game/mahjong/MahjongTile\";\nimport PlayingCard, { CardSymbol, CARD_EMOJI } from \"~/core/game/PlayingCard\";\nimport { range, toEmoji } from \"~/util/helper\";\n\nexport const GAME = {\n  THREAD_NAME: (gameName: string, id: string) => `${EMOJI.JOYSTICK} ${gameName} (ID ${id})`,\n  START_MSG: (gameName: string) => `${EMOJI.JOYSTICK} ${gameName} 게임을 생성한다냥!`,\n  READY: (initiator: GuildMember) => `${initiator.toString()}냥, 게임이 준비됐다냥!`,\n  SURRENDER: \"항복하기\",\n  NOT_YOUR_TURN: \"상대방의 턴이다냥!\",\n  NOT_IN_GAME: \"게임 참가자가 아니다냥!\",\n  END_BY_TIME: `${EMOJI.STOPWATCH} 플레이어가 반응하지 않아 게임을 끝낸다냥!`,\n  END_BY_SURRENDER: (player: GuildMember) => `${EMOJI.WHITE_FLAG} ${Josa.r(player.displayName, \"이/가\")} 항복했다냥!`,\n  WINNER_HEADER: (players: GuildMember[], winner: number) => winner >= 0\n    ? `${EMOJI.TROPHY} ${players[winner].displayName}의 승리다냥!`\n    : \"무승부다냥!\",\n  PLAYER_HEADER_LABEL: \"플레이어\",\n  JOIN_BTN_LABEL: \"참가하기\",\n  JOIN_PLAYERS_LIST: (players: Array<{ user: GuildMember }>, maxPlayer: number) => `참가자 목록 (${players.length}명 / 최대 ${maxPlayer}명)\\n${players.map(player => `${EMOJI.MIDDLE_DOT} ${player.user.displayName}`).join(\"\\n\")}`,\n  JOIN_FOOTER: (minPlayer: number) => `준비됐으면 시작 버튼을 눌러달라냥! 최소 ${minPlayer}명부터 시작 가능하다냥!`,\n  LEAVE_BTN_LABEL: \"참가취소\",\n  GAME_HEADER_LABEL: \"게임\",\n  START_BTN_LABEL: \"시작\",\n  CANCEL_BTN_LABEL: \"취소\",\n  CANCELED: \"게임을 취소했다냥!\",\n  INITIATING_GAME: \"게임을 시작한다냥!\",\n  TURN_HEADER: (player: GuildMember) => `${player.toString()}의 차례다냥!`,\n  RECONNECT_TITLE: (players: GuildMember[]) => `${players.map(player => player.toString()).join(\", \")}냥, 게임을 계속하려면 재접속이 필요하다냥! 아래 버튼을 눌러달라냥!`,\n  RECONNECT_LABEL: \"재접속하기\",\n  RECONNECT_LIST_TITLE: \"재접속이 필요한 플레이어들\",\n  RECONNECT_COMPLETE: \"게임을 재개한다냥!\",\n  SYMBOL: {\n    PLAYER: \"PLAYER\",\n    JOIN: \"JOIN\",\n    LEAVE: \"LEAVE\",\n    GAME: \"GAME\",\n    START: \"START\",\n    CANCEL: \"CANCEL\",\n    NEXT_TURN: \"NEXT_TURN\",\n    SKIP: \"SKIP\",\n    SELECT: \"SELECT\",\n    PENALTY: \"PENALTY\",\n    GG: \"GG\",\n    RECONNECT: \"RECONNECT\"\n  }\n};\n\nexport const OTHELLO = {\n  CMD: \"오셀로\",\n  DESC: \"상대방을 지정해서 오셀로 게임을 한다냥!\",\n  USAGE: \"@대전상대\",\n  ALIAS: [\"리버시\"],\n  USAGE_SLASH: \"대전상대\",\n  DESC_SLASH: \"대전상대를 지정한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.CIRCLE.BLUE} ${author.displayName}의 오셀로`,\n  TURN_HEADER: (user: GuildMember, playerIdx: number) => `${user.toString()}(${OTHELLO.DISC[playerIdx]})의 차례다냥!`,\n  FIELD_TITLE: (players: GuildMember[]) => `${EMOJI.JOYSTICK} ${players[0].displayName}(${OTHELLO.DISC[0]}) VS ${players[1].displayName}(${OTHELLO.DISC[1]})`,\n  FIELD_DESC: (players: GuildMember[], whiteCount: number, blackCount: number) => `${OTHELLO.DISC[0]} ${players[0].displayName}: ${whiteCount}\\n${OTHELLO.DISC[1]} ${players[1].displayName}: ${blackCount}`,\n  DIRECTIONS: [\n    [1, 0], [-1, 0], [0, 1], [0, -1],\n    [1, 1], [1, -1], [-1, 1], [-1, -1]\n  ],\n  DISC: [EMOJI.SMALL_ORANGE_DIAMOND, EMOJI.SMALL_BLUE_DIAMOND],\n  DISC_ACTIVE: [\n    EMOJI.CIRCLE.ORAGNE,\n    EMOJI.CIRCLE.BLUE,\n    EMOJI.LARGE_ORANGE_DIAMOND,\n    EMOJI.LARGE_BLUE_DIAMOND\n  ],\n  CANDIDATE_MARKERS: [\n    ...range(10).map(val => `${val}${EMOJI.KEYCAP}`),\n    ...EMOJI.LETTER\n  ]\n} as const;\n\nexport const YACHT = {\n  CMD: \"요트\",\n  DESC: \"상대방을 지정해서 요트(Yacht) 게임을 한다냥!\",\n  USAGE: \"@대전상대\",\n  ALIAS: [\"얏찌\", \"야추\"],\n  USAGE_SLASH: \"대전상대\",\n  DESC_SLASH: \"대전상대를 지정한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.DICE} ${author.displayName}의 요트`,\n  TURN_HEADER: (user: GuildMember) => `${user.toString()}의 차례다냥! 주사위 버튼을 누르면 잠글 수 있다냥!`,\n  ALL_LOCKED: \"모든 주사위가 잠겨있다냥!\",\n  NAMES: [\n    \"Aces\",\n    \"Deuces\",\n    \"Threes\",\n    \"Fours\",\n    \"Fives\",\n    \"Sixes\",\n    \"Choice\",\n    \"Quads\",\n    \"F.House\",\n    \"S.Straight\",\n    \"L.Straight\",\n    \"Yacht\"\n  ],\n  SYMBOL: {\n    ROLL: \"ROLL\",\n    EYE: \"EYE\",\n    NEXT_TURN: \"NEXT_TURN\",\n    GG: \"GG\"\n  },\n  LABEL: {\n    ROLL: (rerollLeft: number) => `주사위 굴리기 (남은 횟수: ${rerollLeft})`\n  }\n};\n\nexport const CONNECT4 = {\n  CMD: \"사목\",\n  DESC: \"상대방을 지정해서 사목(Connect 4, Four-in-a-Row) 게임을 한다냥!\",\n  USAGE: \"@대전상대\",\n  ALIAS: [\"4목\"],\n  USAGE_SLASH: \"대전상대\",\n  DESC_SLASH: \"대전상대를 지정한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.CIRCLE.RED} ${author.displayName}의 사목`,\n  DIRECTIONS: [\n    [1, 0], [-1, 0], [0, 1], [0, -1],\n    [1, 1], [1, -1], [-1, 1], [-1, -1]\n  ],\n  CIRCLE: {\n    [0]: EMOJI.CIRCLE.RED,\n    [1]: EMOJI.CIRCLE.YELLOW,\n    [2]: EMOJI.HEART.RED,\n    [3]: EMOJI.HEART.YELLOW,\n    [-1]: EMOJI.CIRCLE.BLACK\n  },\n  COLOR: {\n    [0]: COLOR.RED,\n    [1]: COLOR.YELLOW,\n    [-1]: COLOR.BLACK\n  },\n  TURN_HEADER: (user: GuildMember, playerIdx: number) => `${user.toString()}(${CONNECT4.CIRCLE[playerIdx]})의 차례다냥!`\n};\n\n\nexport const TICTACTOE = {\n  CMD: \"틱택토\",\n  DESC: \"상대방을 지정해서 틱택토 게임을 한다냥!\",\n  USAGE: \"@대전상대\",\n  USAGE_SLASH: \"대전상대\",\n  DESC_SLASH: \"대전상대를 지정한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.OK} ${author.displayName}의 틱택토`,\n  MARK: {\n    [0]: \"O\",\n    [1]: \"X\"\n  },\n  STYLE: {\n    [0]: BUTTON_STYLE.SUCCESS,\n    [1]: BUTTON_STYLE.DANGER\n  },\n  TURN_HEADER: (user: GuildMember, playerIdx: number) => `${user.toString()}(${TICTACTOE.MARK[playerIdx]})의 차례다냥!`\n};\n\nexport const ONECARD = {\n  CMD: \"원카드\",\n  DESC: \"원카드 게임을 한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.JOKER} ${author.displayName}의 원카드`,\n  TAKE_PENALTY: (user: GuildMember, added: number, cardCount: number) => `${user.toString()}가 카드를 ${added}장 추가하고 턴을 넘긴다냥 (현재 카드 수: ${cardCount})`,\n  HELP_TITLE: \"원카드 도움말\",\n  HELP_DESC: [\n    \"들고 있는 카드를 가장 먼저 없애는 사람이 승리한다냥!\",\n    \"자기 차례에는 같은 무늬나 같은 숫자의 카드만 낼 수 있다냥!\",\n    \"자기 차례에 낼 카드가 없다면 카드를 한 장 추가해야 한다냥!\"\n  ].map(desc => `${EMOJI.MIDDLE_DOT} ${desc}`).join(\"\\n\"),\n  HELP_SPECIAL_TITLE: \"특수 카드들\",\n  HELP_SPECIAL_DESC: [\n    `${CARD_EMOJI[CardSymbol.SPADE]} 숫자 7 - 원하는 무늬로 변경할 수 있다냥`,\n    `${CARD_EMOJI[CardSymbol.SPADE]} J - 한 사람을 건너 뛴다냥`,\n    `${CARD_EMOJI[CardSymbol.SPADE]} Q - 진행 방향을 반대로 변경한다냥`,\n    `${CARD_EMOJI[CardSymbol.JOKER]} 숫자 2, A, Joker - 공격 카드, 상대방의 공격은 더 강한 카드로만 막을 수 있으며, 막을 카드가 없으면 여러 장의 카드를 받게 된다냥 (각각 2장, 3장, 5장 추가)`\n  ].join(\"\\n\"),\n  HELP_DEFEAT_TITLE: \"파산 조건\",\n  HELP_DEFEAT_DESC: [\n    \"플레이어 수에 따라 다음 카드 개수 이상의 카드를 보유하게 되면 파산하며, 자동으로 패배한다냥\",\n    `${CARD_EMOJI[CardSymbol.DIAMOND]} 2명 - 20장`,\n    `${CARD_EMOJI[CardSymbol.HEART]} 3명 - 19장`,\n    `${CARD_EMOJI[CardSymbol.CLUB]} 4명 - 14장`\n  ].join(\"\\n\"),\n  INITIAL_CARD: 5,\n  CARD_LEFT: (count: number) => `남은 카드 수: ${count}`,\n  TURN_HEADER: (player: GuildMember) => `${player.toString()}냥, 낼 카드를 선택해달라냥!`,\n  CHANGE_HEADER: (player: GuildMember) => `${player.toString()}냥, 바꿀 무늬를 선택해달라냥!`,\n  WINNER_HEADER: (winner: GuildMember, lastCard: PlayingCard) => `${EMOJI.TROPHY} ${winner.displayName}의 승리다냥! (${lastCard.getEmoji()}${lastCard.getName()})`,\n  LABEL: {\n    DEFEATED: \"파산\",\n    SKIP: (count: number) => `${count}장 먹기`\n  }\n} as const;\n\nexport const LADDER = {\n  CMD: \"사다리\",\n  DESC: \"사다리 게임을 한다냥!\",\n  USAGE: \"당첨1 당첨2 당첨3...\",\n  SLASH_USAGE: \"당첨항목들\",\n  USAGE_DESC: \"당첨 항목들을 띄어쓰기로 구분해서 달라냥!\",\n  ALIAS: [\"사다리게임\", \"사다리타기\"],\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.LADDER} ${author.displayName}의 사다리게임`,\n  ARG_NOT_IN_RANGE: \"고를 수 있는 당첨항목이 너무 적거나 많다냥! 2~9개 사이의 당첨항목을 달라냥!\",\n  NUMBER_URL: [\n    \"https://discord.com/assets/68546f5fc3b2166f42cf90b7e23c5ae9.svg\",\n    \"https://discord.com/assets/eb29ce5fcf54bc3b23ff77039a4ecf3c.svg\",\n    \"https://discord.com/assets/67f896405747f26f63f09e0cb048d358.svg\",\n    \"https://discord.com/assets/09fe8a2882cac4cdb4712ab9622d3fe1.svg\",\n    \"https://discord.com/assets/5575865e2cb3d50ea051b09d7e1d2550.svg\",\n    \"https://discord.com/assets/f8b3e0e54d99d2b2962a2e474b2110e4.svg\",\n    \"https://discord.com/assets/c5ef2ff553f9cecd81add57e79aaf81d.svg\",\n    \"https://discord.com/assets/71de2e3efd19455f1c63b9bd00329ec5.svg\",\n    \"https://discord.com/assets/488cb48b4a6952b728df8bbe99fdbb20.svg\"\n  ],\n  SHOW_RESULT: \"전체 결과 보기\",\n  RESULT_SENT_ALREADY: \"그 결과는 이미 표시했다냥!\"\n} as const;\n\nexport const MAHJONG = {\n  CMD: \"마작\",\n  DESC: \"리치마작을 플레이한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.MAHJONG} ${author.displayName}의 작탁`,\n  PLAYER_FIELD_TITLE: (user: GuildMember, wind: number, postfix: string = \"\") => {\n    const windEmoji = MAHJONG_EMOJI[TILE_TYPE.KAZE][wind];\n    return `${toEmoji(windEmoji.name, windEmoji.id)}${user.displayName}${postfix}`;\n  },\n  PLAYER_FIELD_OVERFLOW_TITLE: (user: GuildMember, wind: number) => {\n    const windEmoji = MAHJONG_EMOJI[TILE_TYPE.KAZE][wind];\n    return `${toEmoji(windEmoji.name, windEmoji.id)}${user.displayName}의 버림패 (계속)`;\n  },\n  TILES_LEFT: (count: number) => `남은 패 수: ${count}`,\n  DISCARD_TITLE: (user: GuildMember) => `${user.displayName}의 타패다냥!`,\n  RIICHI_TITLE: (user: GuildMember) => `${user.displayName}의 리치냥!`,\n  CHI_TITLE: (user: GuildMember) => `${user.displayName}의 치다냥!`,\n  PONG_TITLE: (user: GuildMember) => `${user.displayName}의 퐁이다냥!`,\n  KANG_TITLE: (user: GuildMember) => `${user.displayName}의 깡이다냥!`,\n  TSUMO_TITLE: (user: GuildMember, lastTile: MahjongTile) => `${lastTile.getEmoji()} ${user.displayName}의 쯔모다냥!`,\n  RON_TITLE: (user: GuildMember, lastTile: MahjongTile) => `${lastTile.getEmoji()} ${user.displayName}의 론이다냥!`,\n  NAGASHI_MANGWAN_TITLE: (user: GuildMember) => `${user.displayName}의 유국만관이다냥!`,\n  SCORE_FORMAT: (score: number, subscore: number) => `${score}판 ${subscore}부`,\n  FINAL_RANK_TITLE: `${EMOJI.TROPHY} 최종 순위다냥!`,\n  WAITING_OTHER_PLAYER: \"다른 플레이어를 기다리는 중이다냥...\",\n  YAKU_TITLE: \"역\",\n  DORA_INDICATOR_TITLE: \"도라표시패\",\n  ROUND_FORMAT: (wind: number, roundWind: number, windRepeat: number) => {\n    const windEmojiData = MAHJONG_EMOJI[TILE_TYPE.KAZE][wind];\n    const windEmoji = toEmoji(windEmojiData.name, windEmojiData.id);\n\n    return `${windEmoji} 동${roundWind + 1}국${windRepeat > 0 ? ` ${windRepeat}본장` : \"\"}`;\n  },\n  RESULT_FOOTER: `${EMOJI.STOPWATCH} 10초 뒤 다음 게임을 시작한다냥!`,\n  END_ROUND_TITLE: \"유국이다냥!\",\n  END_BY_KANG_TITLE: \"유국이다냥! (사깡산료)\",\n  RIICHI_BAR: [\n    MAHJONG_EMOJI.RIICHI[0],\n    MAHJONG_EMOJI.RIICHI[1],\n    MAHJONG_EMOJI.RIICHI[0]\n  ].map(emoji => toEmoji(emoji.name, emoji.id)).join(\"\"),\n  RIICHI_BAR_LONG: [\n    MAHJONG_EMOJI.RIICHI[0],\n    MAHJONG_EMOJI.RIICHI[0],\n    MAHJONG_EMOJI.RIICHI[1],\n    MAHJONG_EMOJI.RIICHI[0],\n    MAHJONG_EMOJI.RIICHI[0]\n  ].map(emoji => toEmoji(emoji.name, emoji.id)).join(\"\"),\n  POINT: (point: number) => `${point}점`,\n  TENPAI_TITLE: \"현재 대기패\",\n  LABEL: {\n    CHI: \"치\",\n    PON: \"퐁\",\n    KANG: \"깡\",\n    RIICHI: \"리치\",\n    TSUMO: \"쯔모\",\n    RON: \"론\",\n    TENPAI: \"텐파이\",\n    NO_TENPAI: \"노텐\",\n    SKIP: \"스킵\",\n    FURITEN: \"후리텐\"\n  },\n  SYMBOL: {\n    CHI: \"CHI\",\n    PON: \"PON\",\n    KANG: \"KANG\",\n    RIICHI: \"RIICHI\",\n    TSUMO: \"TSUMO\",\n    RON: \"RON\",\n    DISCARD: \"DISCARD\",\n    SKIP: \"SKIP\"\n  }\n} as const;\n\nexport const CONNECT5 = {\n  CMD: \"오목\",\n  DESC: \"상대방을 지정해서 오목을 한다냥!\",\n  USAGE: \"@대전상대\",\n  USAGE_SLASH: \"대전상대\",\n  DESC_SLASH: \"대전상대를 지정한다냥!\",\n  JOIN_MSG_TITLE: (author: GuildMember) => `${EMOJI.CIRCLE.WHITE} ${author.displayName}의 오목`,\n  DIRECTIONS: [\n    [1, 0], [-1, 0], [0, 1], [0, -1],\n    [1, 1], [1, -1], [-1, 1], [-1, -1]\n  ],\n  DIR_INDEX_MAP: {\n    [0]: 7,\n    [1]: 1,\n    [2]: 6,\n    [3]: 3,\n    [4]: 2,\n    [5]: 5,\n    [6]: 0,\n    [7]: 4\n  },\n  PIECE: {\n    [-1]: EMOJI.DOT,\n    [0]: EMOJI.SMALL_ORANGE_DIAMOND,\n    [1]: EMOJI.SMALL_BLUE_DIAMOND,\n    [2]: EMOJI.LARGE_ORANGE_DIAMOND,\n    [3]: EMOJI.LARGE_BLUE_DIAMOND\n  },\n  CURSOR: {\n    [-1]: EMOJI.ROUND_PUSH_PIN,\n    [0]: EMOJI.CIRCLE.ORAGNE,\n    [1]: EMOJI.CIRCLE.BLUE\n  },\n  COLOR: {\n    [-1]: COLOR.BLACK,\n    [0]: COLOR.ORANGE,\n    [1]: COLOR.BLUE\n  },\n  TURN_HEADER: (user: GuildMember, playerIdx: number) => `${user.toString()}(${CONNECT5.PIECE[playerIdx]})의 차례다냥!`\n};\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\n\nimport * as MINIGAME from \"~/const/command/minigame\";\n\nconst Search = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n      <CommandItem command={MINIGAME.OTHELLO}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 오셀로 [@상대방]</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 오셀로\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>상대방을 지정하거나 기다린 후에 쓰레드 채널 내에서 오셀로(리버시) 게임을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.YACHT}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 요트 @상대방</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 요트\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>상대방을 지정하거나 기다린 후에 쓰레드 채널 내에서 요트(Yacht) 게임을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.CONNECT4}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 사목 @상대방</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 사목\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>상대방을 지정하거나 기다린 후에 쓰레드 채널 내에서 사목(Connect 4) 게임을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.TICTACTOE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 틱택토 @상대방</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 틱택토\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>상대방을 지정하거나 기다린 후에 쓰레드 채널 내에서 틱택토 게임을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.ONECARD}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 원카드</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 틱택토\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>플레이를 최대 4명까지 기다린 후에 쓰레드 채널 내에서 원카드 게임을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.LADDER}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 사다리 당첨항목1 당첨항목2 당첨항목3 ...</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 사다리\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>2~9개 사이의 당첨항목을 띄어쓰기로 구분해서 명령어를 사용하여 사다리 게임을 생성할 수 있습니다.</div>\n        <div>당첨항목과 동일한 수만큼 플레이어가 참가한 뒤에 사다리 게임을 시작할 수 있습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.ONECARD}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 마작</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 마작\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>플레이어가 4명이 될 때까지 기다린 후에 쓰레드 채널 내에서 리치마작을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={MINIGAME.CONNECT5}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 오목</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🕹️ 오목\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>상대방을 지정하거나 기다린 후에 쓰레드 채널 내에서 오목을 플레이합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Search;\n","import * as EMOJI from \"~/const/emoji\";\n\nexport const FFXIV = {\n  CMD: \"파판\",\n  DESC: \"파이널 판타지 14 관련 정보들을 조회할 수 있는 명령어들이다냥!\",\n  ITEM: {\n    CMD: \"아이템\",\n    DESC: \"파이널 판타지 14 아이템 정보를 검색한다냥!\",\n    USAGE: \"이름\",\n    USAGE_DESC: \"검색할 아이템 이름을 달라냥!\",\n    ENTRIES_ENDPOINT: \"http://guide.ff14.co.kr/lodestone/search\",\n    ITEM_ENDPOINT: (subURL: string) => `http://guide.ff14.co.kr${subURL}`,\n    COLOR: {\n      \"col2\": \"#61b400\",\n      \"col3\": \"#1a66ff\",\n      \"col4\": \"#910fff\",\n      \"col7\": \"#ff3dad\",\n      \"col8\": \"#959595\"\n    },\n    HQ_ITEM_FOOTER: \"*는 HQ 아이템일때의 정보를 뜻한다냥\",\n    HQ_ITEM_IMAGE: \"https://image.ff14.co.kr/html2/guide/img/item_hq_icon.png\"\n  },\n  LOG: {\n    CMD: \"로그\",\n    DESC: \"파이널 판타지 14 유저의 로그 정보를 검색한다냥!\",\n    USAGE: \"유저\",\n    USAGE_DESC: \"검색할 유저 이름을 달라냥!\",\n    CHAR_SEARCH_ENDPOINT: \"https://ko.fflogs.com/search/autocomplete\",\n    REQUEST_HEADERS: {\n      referer: \"https://ko.fflogs.com\"\n    },\n    CHAR_TYPE: \"캐릭터\",\n    PERSON_ICON_URL: \"https://cdn.discordapp.com/attachments/817765838001668116/964539996184903780/All-Rounder_Icon_1.png\",\n    ZONE_THUMB_URL: (id: string) => `https://assets.rpglogs.com/img/ff/zones/zone-${id}.png`,\n    ZONE_INFO_URL: (zoneID: string, charID: string) => `https://ko.fflogs.com/character/rankings-zone/${charID}/dps/3/${zoneID}/0/5000/0/-1/Any/rankings/0/0`,\n    ZONE_INFO_FOOTER: `${EMOJI.SMALL_ORANGE_DIAMOND} 정규 파티 / rdps 기준`,\n    COLOR: {\n      artifact: \"#e5cc80\",\n      legendary: \"#ff8000\",\n      astounding: \"#e268a8\",\n      magnificent: \"#be8200\",\n      epic: \"#a335ee\",\n      rare: \"#0070ff\",\n      uncommon: \"#1eff00\",\n      common: \"#666666\"\n    }\n  }\n} as const;\n\nexport const BLIZZARD = {\n  TOKEN_ENDPOINT: \"https://kr.battle.net/oauth/token\"\n} as const;\n\nexport const HEARTHSTONE = {\n  CMD: \"하스스톤\",\n  DESC: \"하스스톤 관련 정보들을 조회할 수 있는 명령어들이다냥!\",\n  ALIAS: [\"돌\"],\n  CARD: {\n    CMD: \"카드\",\n    DESC: \"하스스톤 카드를 검색한다냥!\",\n    USAGE: \"키워드\",\n    USAGE_DESC: \"검색할 카드 이름이나 키워드를 달라냥!\",\n    ENDPOINT: \"https://kr.api.blizzard.com/hearthstone/cards\",\n    DEFAULT_PARAMS: {\n      locale: \"ko_KR\"\n    },\n    RARITY_COLOR: {\n      [0]: \"#9d9d9d\",\n      [1]: \"#ffffff\",\n      [2]: \"#1eff00\",\n      [3]: \"#0070dd\",\n      [4]: \"#a335ee\",\n      [5]: \"#ff8000\",\n      [6]: \"#e6cc80\",\n      [7]: \"#e6cc80\"\n    }\n  }\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\n\nimport * as GAME from \"~/const/command/game\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Search = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={GAME.FFXIV.ITEM} parent={GAME.FFXIV}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 파판 아이템</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={{\n            avatar: \"https://images-ext-2.discordapp.net/external/wGCcgsj9pgHkg9vjkmgf6m3uOCyjPNENXYuZTM3zBPI/https/image.ff14.co.kr/guide/resources/images/GV5.5/033000/033888.png\",\n            name: \"강하하는 드래곤 서슬발톱\"\n          }} />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 }, { emoji: EMOJI.GREEN_CHECK, count: 1 }, { emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>파이널 판타지 14 아이템 정보를 검색합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={GAME.FFXIV.LOG} parent={GAME.FFXIV}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 파판 로그 타타루</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>대충 로그 내용</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>ko.fflogs.com에서 파이널 판타지 14 유저 로그 정보를 검색합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={GAME.HEARTHSTONE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 하스스톤 카드 안녕로봇</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          안녕로봇의 발명가는 즉시 땜장이 학교와 땜장이 마을에서 쫓겨났으며, 결국에는 동부 왕국에서 영원히 추방되었습니다.\n          <img src=\"https://d15f34w2p8l1cc.cloudfront.net/hearthstone/0826c562b2c7d620a4511ab88a4dcf6712cfcb842f7e410df4cd7af1cb0797a6.png\" />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 }, { emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>하스스톤 카드를 검색합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Search;\n","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Bot from \"./command/Bot\";\nimport Utility from \"./command/Utility\";\nimport Search from \"./command/Search\";\nimport History from \"./command/History\";\nimport Steam from \"./command/Steam\";\nimport Icon from \"./command/Icon\";\nimport Setting from \"./command/Setting\";\nimport Minigame from \"./command/Minigame\";\nimport Game from \"./command/Game\";\n\nimport NotFound from \"./NotFound\";\n\nimport * as CATEGORY from \"~/const/category\";\n\nimport \"./Command.css\";\n\nconst Command = () => {\n  return (\n    <div className=\"command-container\">\n      <Switch>\n        <Route path={`/command/${CATEGORY.BOT.ID}`} component={Bot} />\n        <Route path={`/command/${CATEGORY.UTILITY.ID}`} component={Utility} />\n        <Route path={`/command/${CATEGORY.SEARCH.ID}`} component={Search} />\n        <Route path={`/command/${CATEGORY.HISTORY.ID}`} component={History} />\n        <Route path={`/command/${CATEGORY.STEAM.ID}`} component={Steam} />\n        <Route path={`/command/${CATEGORY.ICON.ID}`} component={Icon} />\n        <Route path={`/command/${CATEGORY.SETTING.ID}`} component={Setting} />\n        <Route path={`/command/${CATEGORY.MINIGAME.ID}`} component={Minigame} />\n        <Route path={`/command/${CATEGORY.GAME.ID}`} component={Game} />\n        <Route path=\"/command/*\" component={NotFound} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default Command;\n","import { useEffect, useMemo } from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Sidebar from \"./component/Sidebar\";\n\nimport Home from \"./pages/Home\";\nimport Icon from \"./pages/Icon\";\nimport Command from \"./pages/Command\";\nimport NotFound from \"./pages/NotFound\";\n\nimport { setUser } from \"./redux/actions\";\nimport { RootState } from \"./redux/reducers\";\n\nimport User from \"~/api/type/User\";\n\nimport \"./Main.css\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/user`, {\n      credentials: \"include\"\n    }).then(user => user.json())\n      .then(user => dispatch(setUser(user as User)))\n  }, [dispatch]);\n\n  const pageContainerClass = useMemo(() => {\n    const classes = [\"page-container\"];\n    if (hamburger.open) {\n      classes.push(\"noscroll\");\n    }\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <HashRouter>\n      <div className=\"main-container\">\n        <Sidebar />\n        <div className={pageContainerClass}>\n          <Switch>\n            <Route path=\"/icon\" component={Icon} />\n            <Route path=\"/command\" component={Command} />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_GUILDS } from \"../actionTypes\";\nimport { setGuilds } from \"../actions\";\nimport Guild from \"~/api/type/Guild\";\n\nconst defaultState: Guild[] = [];\n\ntype GuildAction = ReturnType<typeof setGuilds>;\n\nexport default (state = defaultState, action: GuildAction) => {\n  switch (action.type) {\n    case SET_GUILDS: {\n      return [\n        ...action.payload\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_HAMBURGER } from \"../actionTypes\";\nimport { toggleHamburger } from \"../actions\";\n\nconst defaultState = {\n  open: false\n};\n\ntype HamburgerAction = ReturnType<typeof toggleHamburger>;\n\nexport default (state = defaultState, action: HamburgerAction) => {\n  switch (action.type) {\n    case TOGGLE_HAMBURGER: {\n      return {\n        ...state,\n        open: !state.open\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SELECT_ALL_ICON, SET_ICONS, TOGGLE_ICON, UNSELECT_ALL_ICON } from \"../actionTypes\";\nimport { toggleIconChecked, setCheckedIcons, selectAllIcons, unselectAllIcons } from \"../actions\";\n\nconst defaultState: {\n  [id: string]: {\n    checked: boolean;\n  };\n} = {};\n\ntype IconAction =\n  | ReturnType<typeof toggleIconChecked>\n  | ReturnType<typeof setCheckedIcons>\n  | ReturnType<typeof selectAllIcons>\n  | ReturnType<typeof unselectAllIcons>;\n\nexport default (state = defaultState, action: IconAction) => {\n  switch (action.type) {\n    case TOGGLE_ICON: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          checked: state[id] ? !state[id].checked : true\n        }\n      };\n    }\n    case SET_ICONS: {\n      const ids = action.payload;\n      return ids.reduce((state, id) => ({\n        ...state,\n        [id]: { checked: false }\n      }), {});\n    }\n    case SELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: true }\n        }\n      }, state);\n    }\n    case UNSELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: false }\n        }\n      }, state);\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport guilds from \"./guilds\";\nimport hamburger from \"./hamburger\";\nimport icon from \"./icon\";\n\nconst rootReducer = combineReducers({\n  user,\n  guilds,\n  hamburger,\n  icon\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { SET_USER } from \"../actionTypes\";\nimport { setUser } from \"../actions\";\nimport User from \"~/api/type/User\";\n\nconst defaultState: User | null = null;\n\ntype UserAction = ReturnType<typeof setUser>;\n\nexport default (state: User | null = defaultState, action: UserAction) => {\n  switch (action.type) {\n    case SET_USER: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\";\n\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}