{"version":3,"sources":["component/Sidebar.tsx","component/Login.tsx","component/Profile.tsx","component/Header.tsx","pages/Home.tsx","component/Loading.tsx","pages/GuildList.tsx","pages/IconList.tsx","pages/Icon.tsx","pages/Command.tsx","pages/NotFound.tsx","pages/AuthNeeded.tsx","Main.tsx","reportWebVitals.js","index.js"],"names":["routes","path","name","icon","Sidebar","className","map","route","to","activeClassName","isActive","match","location","pathname","includes","xlinkHref","process","target","rel","href","Login","onClick","window","Profile","user","src","avatarURL","Header","alt","id","Home","Loading","GuildList","useState","guilds","setGuilds","useEffect","fetch","credentials","then","res","json","guild","iconURL","hasPermission","IconList","guildID","useParams","iconGroups","setIconGroups","icons","setIcons","Promise","all","groups","images","iconGroup","_id","url","Icon","useRouteMatch","Command","NotFound","AuthNeeded","Main","setUser","basename","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23e4217d.chunk.js","sourcesContent":["import {\n  NavLink\n} from \"react-router-dom\";\n\nimport \"./Sidebar.css\";\n\ninterface Route {\n  path: string;\n  name: string;\n  icon: string;\n}\n\nconst routes: Route[] = [\n  {\n    path: \"/\",\n    name: \"홈\",\n    icon: \"home\"\n  },\n  {\n    path: \"/icon\",\n    name: \"아이콘\",\n    icon: \"archive\"\n  },\n  {\n    path: \"/command\",\n    name: \"명령어 목록\",\n    icon: \"bolt\"\n  }\n];\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar-container\">\n      <div className=\"sidebar-menu\">\n        {routes.map((route) => (\n          <NavLink to={route.path} className=\"sidebar-menu-item\" activeClassName=\"selected\"\n            key={route.name}\n            isActive={(match, location) => {\n              if (!match) return false;\n              if (route.path === \"/\") return location.pathname === route.path;\n\n              return location.pathname.includes(route.path);\n            }}\n          >\n            <svg className=\"sidebar-menu-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${route.icon}.svg#icon`} />\n            </svg>\n            <span>{route.name}</span>\n          </NavLink>\n        ))}\n      </div>\n      <div className=\"sidebar-others\">\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\">\n          <div className=\"sidebar-others-item\">\n            <svg className=\"sidebar-others-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n            </svg>\n            <span>샴고양이 초대하기</span>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./Login.css\";\n\nconst Login = () => {\n  return (\n    <div className=\"header-menu\">\n      <div className=\"header-menu-item\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"header-menu-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/login.svg#icon`} />\n        </svg>\n        <span>로그인</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Login;\n","import React from \"react\";\nimport User from \"../type/User\";\nimport \"./Profile.css\";\n\nconst Profile: React.FC<{ user: User }> = ({ user }) => {\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-overlay\"\n        onClick={() => {\n          window.location.href = `${process.env.REACT_APP_API_URL}/logout`\n        }}\n      >로그아웃</div>\n      <img className=\"profile-avatar\" src={user.avatarURL} />\n    </div>\n  )\n}\n\nexport default Profile;\n","import React from \"react\";\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport \"./Header.css\";\nimport Login from \"./Login\";\nimport User from \"../type/User\";\nimport Profile from \"./Profile\";\n\nconst Header: React.FC<{\n  user: User | null;\n}> = ({ user }) => {\n  return (\n    <div className=\"header-container\">\n      <Link to=\"/\">\n        <div className=\"header-logo\">\n          <div className=\"header-logo-text\">\n            <span>샴고양이</span>\n          </div>\n          <img className=\"header-logo-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        </div>\n      </Link>\n      {user != null\n        ? user.id\n          ? <Profile user={user} />\n          : <Login />\n        : <></>\n      }\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"emoji-big\">🏗️</h1>\n      <h1>🚧공사중🚧</h1>\n    </div>\n  )\n}\n\nexport default Home;\n","import \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport Loading from \"../component/Loading\";\nimport Guild from \"../type/Guild\";\nimport \"./GuildList.css\";\n\nconst GuildList: React.FC = () => {\n  const [guilds, setGuilds] = useState<Guild[] | null>(null);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/guilds`, {\n      credentials: \"include\"\n    }).then(res => res.json())\n      .then(guilds => {\n        setGuilds(guilds as Guild[]);\n      })\n  }, []);\n\n  if (!guilds) return <Loading />\n\n  return (\n    <div className=\"guild-container\">\n      <div className=\"guild-header\">\n        <div className=\"guild-header-text\">\n          <span>서버 목록</span>\n        </div>\n      </div>\n      <div className=\"guild-subtitle\">\n        아이콘을 편집할 서버를 선택해주세요\n      </div>\n      {\n        guilds.map(guild => (\n          <div key={guild.id}>\n            <div className=\"guild-separator\"></div>\n            <Link to={`/icon/${guild.id}`} className=\"guild-item\">\n              <img className=\"guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n              <div className=\"guild-name\">{ guild.name }</div>\n              <svg className={`guild-approved-icon ${guild.hasPermission ? \"yes\" : \"no\"}`}>\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${guild.hasPermission ? \"approve\" : \"cancel\"}.svg#icon`} />\n              </svg>\n              <div className=\"guild-enter-icon-container\">\n                <svg className=\"guild-enter-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/right-arrow.svg#icon`} />\n                </svg>\n              </div>\n            </Link>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default GuildList;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport Loading from \"../component/Loading\";\nimport Icon from \"../type/Icon\";\nimport IconGroup from \"../type/IconGroup\";\nimport \"./IconList.css\";\n\nconst IconList: React.FC = () => {\n  let { guildID } = useParams<{ guildID: string }>();\n  const [iconGroups, setIconGroups] = useState<IconGroup[] | null>(null);\n  const [icons, setIcons] = useState<Icon[] | null>(null);\n\n  useEffect(() => {\n    Promise.all([\n      fetch(`${process.env.REACT_APP_API_URL}/directories?id=${guildID}`, {\n        credentials: \"include\"\n      }).then(res => res.json()),\n      fetch(`${process.env.REACT_APP_API_URL}/icons?id=${guildID}`, {\n        credentials: \"include\"\n      }).then(res => res.json())\n    ]).then(([groups, images]) => {\n      setIconGroups(groups as IconGroup[]);\n      setIcons(images as Icon[]);\n    });\n  }, [guildID]);\n\n  if (!iconGroups || !icons) return <Loading />\n\n  return (\n    <>\n      <div className=\"icon-menu-container\">\n        <div className=\"icon-menu-item\">\n          <svg className=\"icon-menu-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/upload.svg#icon`} />\n          </svg>\n          <span>업로드</span>\n        </div>\n      </div>\n      <div className=\"icon-item-container\">\n        <Link to=\"/icon\" className=\"icon-item icon-back-button\">\n          <svg>\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/left-arrow.svg#icon`} />\n          </svg>\n        </Link>\n        {\n          iconGroups.map(iconGroup => (\n            <div key={iconGroup._id} className=\"icon-item icon-card\">\n              <div>📁</div>\n              <span>{ iconGroup.name }</span>\n            </div>\n          ))\n        }\n        {\n          icons.map(icon => (\n            <div key={icon._id} className=\"icon-item icon-card\">\n              <img className=\"icon-img\" src={icon.url} />\n              <span>{icon.name}</span>\n            </div>\n          ))\n        }\n      </div>\n    </>\n  );\n}\n\nexport default IconList;\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\n\nimport GuildList from \"./GuildList\";\nimport IconList from \"./IconList\";\nimport \"./Icon.css\";\n\nconst Icon = () => {\n  const match = useRouteMatch();\n\n  return (<Switch>\n    <Route path={`${match.path}/:guildID`}>\n      <IconList />\n    </Route>\n    <Route path={match.path}>\n      <GuildList />\n    </Route>\n  </Switch>)\n}\n\nexport default Icon;\n","import \"./Command.css\";\n\nconst Command = () => {\n  return (\n    <div className=\"command-container\">\n      <h1 className=\"emoji-big\">🏗️</h1>\n      <h1>🚧공사중🚧</h1>\n    </div>\n  )\n}\n\nexport default Command;\n","import \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <svg className=\"not-found-icon\">\n      <use xlinkHref={`${process.env.PUBLIC_URL}/icons/warn.svg#icon`} />\n    </svg>\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default NotFound;\n","import \"./AuthNeeded.css\";\n\nconst AuthNeeded = () => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-header\">먼저 로그인이 필요합니다</div>\n      <div className=\"auth-login-button\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"auth-discord-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n        </svg>\n        <div className=\"auth-login-separator\"></div>\n        <span>디스코드로 로그인하기</span>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthNeeded;\n","import { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport \"./Main.css\";\nimport Sidebar from \"./component/Sidebar\";\nimport Header from \"./component/Header\";\nimport Home from \"./pages/Home\";\nimport Icon from \"./pages/Icon\";\nimport Command from \"./pages/Command\";\nimport NotFound from \"./pages/NotFound\";\nimport AuthNeeded from \"./pages/AuthNeeded\";\nimport User from \"./type/User\";\n\nconst Main = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/user`, {\n      credentials: \"include\"\n    }).then(user => user.json())\n      .then(user => {\n        setUser(user as User);\n      })\n  }, []);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"main-container\">\n        <Header user={user} />\n        <div className=\"contents-container\">\n          <Sidebar />\n          <div className=\"page-container\">\n            <Switch>\n              <Route path=\"/icon\">\n                {\n                  user\n                    ? user.id\n                      ? <Icon />\n                      : <AuthNeeded />\n                    : <></>\n                }\n              </Route>\n              <Route path=\"/command\" component={Command} />\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}