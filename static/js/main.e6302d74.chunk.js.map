{"version":3,"sources":["component/Sidebar.tsx","component/Header.tsx","pages/Home.tsx","pages/Icon.tsx","pages/Command.tsx","pages/NotFound.tsx","Main.tsx","reportWebVitals.js","index.js"],"names":["routes","path","name","icon","Sidebar","className","map","route","to","activeClassName","isActive","match","location","pathname","xlinkHref","process","target","rel","href","Header","alt","src","Home","Icon","user","id","Command","NotFound","Main","useState","basename","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAYMA,EAAkB,CACtB,CACEC,KAAM,IACNC,KAAM,SACNC,KAAM,QAER,CACEF,KAAM,QACNC,KAAM,qBACNC,KAAM,WAER,CACEF,KAAM,WACNC,KAAM,kCACNC,KAAM,SAqCKC,EAjCC,WACd,OACE,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,eAAf,SACGL,EAAOM,KAAI,SAACC,GAAD,OACV,eAAC,IAAD,CAASC,GAAID,EAAMN,KAAMI,UAAU,oBAAoBI,gBAAgB,WACrEC,SAAU,SAACC,EAAOC,GAChB,QAAKD,GAEEC,EAASC,WAAaN,EAAMN,MAJvC,UAOE,qBAAKI,UAAU,oBAAf,SACE,qBAAKS,UAAS,UAAKC,WAAL,kBAAqCR,EAAMJ,KAA3C,iBAEhB,+BAAOI,EAAML,eAInB,qBAAKG,UAAU,iBAAf,SACE,mBAAGW,OAAO,SAASC,IAAI,aAAaC,KAAK,kGAAzC,SACE,sBAAKb,UAAU,sBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKS,UAAS,UAAKC,WAAL,+BAEhB,gGC1BGI,G,MAvBA,WACb,OACE,sBAAKd,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,sBAAKH,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,8DAEF,qBAAKA,UAAU,kBAAkBe,IAAI,OAAOC,IAAG,UAAKN,WAAL,sBAGnD,mBAAGG,KAAK,0KAAR,SACE,sBAAKb,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKS,UAAS,UAAKC,WAAL,6BAEhB,gECXKO,G,MATF,WACX,OACE,sBAAKjB,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,iFCQSkB,EARV,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACN,OAAW,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,IACX,8BAAOD,EAAKC,KAEZ,2FCCWC,G,MATC,WACd,OACE,sBAAKrB,UAAU,oBAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,iFCKSsB,G,MATE,kBACf,sBAAKtB,UAAU,sBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKS,UAAS,UAAKC,WAAL,4BAEhB,sDCmCWa,EAzBF,WAAO,IAAD,EACAC,qBAATL,EADS,oBAKjB,OACE,cAAC,IAAD,CAAQM,SAAUf,WAAlB,SACE,sBAAKV,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,qBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAK,QAAQ8B,UAAW,kBAAMR,EAAK,CAAEC,YAC5C,cAAC,IAAD,CAAOvB,KAAK,WAAW8B,UAAWL,IAClC,cAAC,IAAD,CAAOzB,KAAK,IAAI+B,OAAK,EAACD,UAAWT,IACjC,cAAC,IAAD,CAAOrB,KAAK,IAAI8B,UAAWJ,kBCrB1BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6302d74.chunk.js","sourcesContent":["import {\n  NavLink\n} from \"react-router-dom\";\n\nimport \"./Sidebar.css\";\n\ninterface Route {\n  path: string;\n  name: string;\n  icon: string;\n}\n\nconst routes: Route[] = [\n  {\n    path: \"/\",\n    name: \"홈\",\n    icon: \"home\"\n  },\n  {\n    path: \"/icon\",\n    name: \"아이콘\",\n    icon: \"archive\"\n  },\n  {\n    path: \"/command\",\n    name: \"명령어 목록\",\n    icon: \"bolt\"\n  }\n];\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar-container\">\n      <div className=\"sidebar-menu\">\n        {routes.map((route) => (\n          <NavLink to={route.path} className=\"sidebar-menu-item\" activeClassName=\"selected\"\n            isActive={(match, location) => {\n              if (!match) return false;\n\n              return location.pathname === route.path;\n            }}\n          >\n            <svg className=\"sidebar-menu-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${route.icon}.svg#icon`} />\n            </svg>\n            <span>{route.name}</span>\n          </NavLink>\n        ))}\n      </div>\n      <div className=\"sidebar-others\">\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\">\n          <div className=\"sidebar-others-item\">\n            <svg className=\"sidebar-others-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n            </svg>\n            <span>샴고양이 초대하기</span>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import {\n  Link\n} from \"react-router-dom\";\n\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header-container\">\n      <Link to=\"/\">\n        <div className=\"header-logo\">\n          <div className=\"header-logo-text\">\n            <span>샴고양이</span>\n          </div>\n          <img className=\"header-logo-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        </div>\n      </Link>\n      <a href=\"https://discordapp.com/api/oauth2/authorize?client_id=357073005819723777&scope=identify&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fauth%2Fcallback\">\n        <div className=\"header-menu\">\n          <svg className=\"header-menu-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/login.svg#icon`} />\n          </svg>\n          <span>로그인</span>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"emoji-big\">🏗️</h1>\n      <h1>🚧공사중🚧</h1>\n    </div>\n  )\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Icon: React.FC<{\n  user?: {\n    id: string\n  }\n}> = ({ user }) => {\n  return user?.id ? (\n    <div>{ user.id }</div>\n  ) : (\n    <div>로그인이 필요합니다</div>\n  )\n}\n\nexport default Icon;\n","import \"./Command.css\";\n\nconst Command = () => {\n  return (\n    <div className=\"command-container\">\n      <h1 className=\"emoji-big\">🏗️</h1>\n      <h1>🚧공사중🚧</h1>\n    </div>\n  )\n}\n\nexport default Command;\n","import \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <svg className=\"not-found-icon\">\n      <use xlinkHref={`${process.env.PUBLIC_URL}/icons/warn.svg#icon`} />\n    </svg>\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default NotFound;\n","import {\n  useState\n} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './Main.css';\nimport Sidebar from \"./component/Sidebar\";\nimport Header from \"./component/Header\";\nimport Home from \"./pages/Home\";\nimport Icon from \"./pages/Icon\";\nimport Command from \"./pages/Command\";\nimport NotFound from \"./pages/NotFound\";\n\nconst Main = () => {\n  const [ user ] = useState<{\n    id: string;\n  }>();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"main-container\">\n        <Header />\n        <div className=\"contents-container\">\n          <Sidebar />\n          <div className=\"page-container\">\n            <Switch>\n              <Route path=\"/icon\" component={() => Icon({ user })} />\n              <Route path=\"/command\" component={Command} />\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}