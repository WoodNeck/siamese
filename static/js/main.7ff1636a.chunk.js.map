{"version":3,"sources":["pages/IconList.tsx","component/Login.tsx","component/Profile.tsx","redux/actionTypes.ts","redux/actions.ts","component/SubcategoryLink.tsx","../../src/const/emoji.ts","../../src/const/category.ts","component/Sidebar.tsx","pages/Home.tsx","pages/GuildList.tsx","pages/NotFound.tsx","../../src/api/const/url.ts","component/IconHeaderMenu.tsx","component/Loading.tsx","component/MasterCheckbox.tsx","component/ItemCheckbox.tsx","component/NameInput.tsx","component/IconChat.tsx","pages/AuthNeeded.tsx","pages/Icon.tsx","component/command/CommandItem.tsx","component/command/ChatBubble.tsx","component/command/ChatContainer.tsx","component/command/CommandDesc.tsx","component/embed/EmbedHeader.tsx","component/embed/EmbedFooter.tsx","../../src/util/helper.ts","../../src/util/markdown.ts","../../src/const/command/bot.ts","pages/command/Bot.tsx","component/embed/EmbedMenu.tsx","component/command/Mention.tsx","../../src/const/command/utility.ts","pages/command/Utility.tsx","component/embed/EmbedField.tsx","component/command/NSFW.tsx","../../src/const/command/search.ts","pages/command/Search.tsx","../../src/const/command/sound.ts","pages/command/Sound.tsx","../../src/const/command/history.ts","pages/command/History.tsx","../../src/const/command/steam.ts","pages/command/Steam.tsx","component/command/CommandInfo.tsx","../../src/const/command/icon.ts","pages/command/Icon.tsx","pages/Command.tsx","pages/Setting.tsx","Main.tsx","reportWebVitals.js","redux/reducers/guilds.ts","redux/reducers/hamburger.ts","redux/reducers/icon.ts","redux/reducers/index.ts","redux/reducers/user.ts","index.tsx"],"names":["ItemType","Login","className","onClick","window","location","href","process","xlinkHref","Profile","user","logout","src","avatarURL","tag","SET_USER","SET_GUILDS","TOGGLE_HAMBURGER","TOGGLE_ICON","SET_ICONS","SELECT_ALL_ICON","UNSELECT_ALL_ICON","toggleHamburger","type","ACTION","setCheckedIcons","ids","payload","Subcategory","to","children","dispatch","useDispatch","useLocation","activeClassName","isActive","pathname","startsWith","SMALL_WHITE_SQUARE","MIDDLE_DOT","ARROW_LEFT","ARROW_RIGHT","CROSS","DOLLAR","VIDEO_GAME","FILE","PICTURE","LINK","BOT","ID","NAME","DESC","EMOJI","UTILITY","SEARCH","SOUND","HISTORY","STEAM","ICON","Sidebar","useSelector","state","hamburger","guilds","routes","useMemo","path","name","icon","active","subcategories","map","guild","id","iconURL","Object","values","CATEGORY","category","containerClass","classes","open","push","join","alt","route","target","rel","Home","style","padding","borderRadius","fontSize","backgroundColor","marginTop","color","GuildList","hasPermission","data-tip","data-for","place","effect","NotFound","ICONS","DIRECTORY","DIRECTORIES","IconHeaderMenu","icons","iconGroups","iconGroup","openDropzone","forceUpdate","checkedState","createFolder","useCallback","formData","FormData","append","fetch","URL","method","credentials","body","then","res","a","status","Error","text","toast","catch","err","error","message","toString","selectedGroups","filter","group","checked","selectedIcons","length","removeGroups","headers","JSON","stringify","directories","guildID","removeIcons","Promise","all","res1","res2","ok","removed","success","Loading","MasterCheckbox","useState","allChecked","setAllChecked","useEffect","every","onClickCapture","e","preventDefault","stopPropagation","bigger","shape","variant","readOnly","ItemCheckbox","toggleIconChecked","animation","pointerEvents","Boolean","NameInput","onUpdate","editing","setEditing","updateName","newName","maxLength","onBlur","value","onKeyDown","key","currentTarget","defaultValue","autoFocus","IconChat","modal","clickConfirm","username","marginLeft","width","height","viewBox","d","fill","url","IconList","useParams","groupID","setIconGroups","setIcons","setIconGroup","find","useReducer","x","iconFetcher","withReactContent","Swal","json","images","item","groups","selected","showIcon","fire","html","heightAuto","prevName","replace","endPoint","itemName","GROUP","useDropzone","accept","disabled","noClick","noKeyboard","maxSize","onDrop","files","forEach","file","uploadingToast","autoClose","update","render","TYPE","SUCCESS","ERROR","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","author","iconCount","Date","createdTimestamp","toLocaleDateString","position","closeOnClick","AuthNeeded","Icon","match","useRouteMatch","setGuilds","CommandItem","command","parent","voiceOnly","commandName","CMD","ALIAS","alias","USAGE","ChatBubble","avatar","ChatContainer","CommandDesc","EmbedHeader","EmbedFooter","image","dedent","callSite","args","format","str","split","substr","trim","output","slice","i","strong","word","code","block","lang","PING","MSG","ping","botName","botDisplayName","uptime","Josa","c","getUTCHours","getUTCMinutes","getUTCSeconds","INVITE","TITLE","HELP","MENU_TIME","INFO","GUILD_CNT","guildCnt","USER_CNT","userCnt","DEV_SERVER","serverName","inviteLink","GITHUB_ICON_URL","Bot","siamese","scrollTo","EmbedMenu","items","idx","emoji","count","Mention","DICE","MIN","MAX","DEFAULT","userName","num","maxNum","numStr","ARG_INCORRECT","min","max","CHOOSE","ARG_NOT_SUFFICIENT","prefix","SAY","TARGET","VOTE","CONVERSATION_TIME","OPTIONS_TITLE","OPTIONS_DESC","OPTIONS_FOOTER","DURATION_TITLE","DURATION_DESC","DURATION_FOOTER","DURATION_MIN","DURATION_MAX","HELP_DESC","RESULT_DESC","votes","RESULT_DESC_TIE","options","vote","title","FOOTER","time","COUNT","cnt","OPTIONS_BETWEEN_2_9","DURATION_SHOULD_CLAMPED","AVATAR","MENTION_NEEDED","MENTION_ONLY_ONE","TRANSLATE","DEFAULT_LANG","LANGS","NO_CONTENT","LIST","ENTRY_PER_PAGE","ENTRY","Utility","keys","EmbedField","NSFW","IMAGE","SEARCH_URL","SEARCH_PARAMS","env","query","isSafeSearch","params","q","GOOGLE_API_KEY","cx","GOOGLE_SEARCH_ENGINE_ID","searchType","assign","safe","YOUTUBE","MAX_RESULTS","VIDEO_URL","videoId","KIN","SERVICE_NAME","ITEMS_PER_PAGE","display","sort","CHEAPEST","sortBy","pageSize","pageNumber","REDIRECT_URL","GAME_SALE_DESC","price","originalPrice","savings","metaScore","metaLink","link","GAME_NO_SALE_DESC","METASCORE_IMG","METASCORE_COLOR","score","REVIEW_TEXT","REVIEW_FOOTER","percent","REVIEW_ICON","SHOPPING","PRICE","low","high","PRODUCT_TYPE","1","2","3","4","5","6","7","8","9","10","11","12","PARAMS","Search","TTS","MAX_LENGTH","LANGUAGE","MESSAGE_TOO_LONG","OUT","Sound","DATE","date","getFullYear","getMonth","getDate","RANDOM","MSG_FETCH_LIMIT","MSG_CHECK","MSG_URL","guildId","channelId","msgId","NO_ENTRY_FOUND","CANT_FIND_MSG","FORCES","DISCHARGE","SHORTEN_AFTER_THIS_DATE","FORCE_INFO","육군","duration","maxShortenMonth","의경","해병","해군","해경","의방","공군","공익","DETAILED","PROGRESS_EMOJI","repeat","FORCE_DETAIL","force","SHORTEN_DATE","days","JOIN_DATE","DISCHARGE_DATE","DAYS_PROGRESSED","DAYS_LEFT","PERCENTAGE","toFixed","ADD","NAME_MAX_LENGTH","PROMPT_TIME","NAME_ALREADY_EXISTS","DIALOGUE_JOIN_DATE_TITLE","DIALOGUE_JOIN_DATE_DESC","DIALOGUE_JOIN_DATE_EXAMPLE","DIALOGUE_FORCES_TITLE","DIALOGUE_FORCES_EXAMPLE","RECITAL_TIME","info","joinDate","REMOVE","NOT_FOUND","EMPTY_RESULT","NAME_TOO_LONG","PROVIDE_NAME_TO_ADD","PROVIDE_NAME_TO_REMOVE","JOIN_DATE_NOT_FORMATTED","FORCES_NOT_LISTED","History","wordBreak","Array","SEARCH_BY_COMMUNITY_ID_URL","SEARCH_BY_GAME_NAME_URL","SUMMARY_URL","BAN_URL","RECENT_GAME_URL","LEVEL_URL","FRIEND_URL","OWNING_GAME_URL","CURRENT_PLAYERS_URL","ICON_URL","PROFILE_GAME_URL","baseUrl","GAME_IMG_URL","appid","STORE_URL","SEARCH_BY_COMMUNITY_ID_PARAMS","vanityurl","STEAM_API_KEY","SEARCH_BY_GAME_NAME_PARAMS","term","l","cc","STEAM_IDS_PARAMS","steamids","RECENT_GAME_PARAMS","steamid","STEAM_ID_PARAMS","GAME_ID_PARAMS","OWNING_GAME_PARAMS","include_appinfo","include_played_free_games","FRIEND_PARAMS","relationship","PLAYTIME","minute","PLAYTIME_SHORT","USER_NOT_FOUND","EMPTY_GAMES","PROFILE","PERSONA_STATE","0","PLAYING_STATE","game","REGISTERED","timestamp","getUTCFullYear","getUTCMonth","LAST_LOGOFF","dateDiff","getTime","diff","year","Math","floor","month","week","getUTCDate","day","hour","last","flag","FIELD_DETAIL","FIELD_BAN","FIELD_RECENT_GAME","BAN_COMMUNITY","BAN_VAC","BAN_GAME","BAN_ECONOMY","LEVEL","level","FRIENDS","friends","GAMES","gamesCount","GAME_DESC","playtime_2weeks","LIBRARY","GAMES_PER_PAGE","MAX_PAGES","PLAYERS","CURRENT","players","TOP","FORMAT_INFO","GAME_TITLE","GAME_STATISTICS","Steam","guildName","REPLACE_TITLE","r","TUTORIAL_URL","PROVIDE_IMAGES","IMAGE_TOO_MANY","GROUP_NAME_TOO_LONG","ICON_NAME_TOO_LONG","ITEM_PER_PAGE","NO_GROUP","ROLE","SUCCESS_WITH_ROLE","roleMention","SUCCESS_WITHOUT_ROLE","PROVIDE_EXACTLY_ONE_ROLE","NO_ROLE","Command","component","Setting","Main","setUser","pageContainerClass","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","rootReducer","combineReducers","action","reduce","newState","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff1636a.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useReducer, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\"\nimport withReactContent from \"sweetalert2-react-content\"\nimport { useDropzone } from \"react-dropzone\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NotFound from \"./NotFound\";\nimport IconHeaderMenu from \"../component/IconHeaderMenu\";\nimport Loading from \"../component/Loading\";\nimport MasterCheckbox from \"../component/MasterCheckbox\";\nimport ItemCheckbox from \"../component/ItemCheckbox\";\nimport NameInput from \"../component/NameInput\";\nimport IconChat from \"../component/IconChat\";\nimport { RootState } from \"../redux/reducers\";\nimport { setCheckedIcons } from \"../redux/actions\";\nimport * as URL from \"~/api/const/url\";\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\n\nimport \"./IconList.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"@djthoms/pretty-checkbox\";\n\nenum ItemType {\n  ICON,\n  GROUP\n}\n\nconst IconList: React.FC = () => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const user = useSelector((state: RootState) => state.user);\n  const dispatch = useDispatch();\n\n  const { guildID, groupID } = useParams<{ guildID: string, groupID?: string }>();\n  const [iconGroups, setIconGroups] = useState<IconGroup[] | null>(null);\n  const [icons, setIcons] = useState<Icon[] | null>(null);\n  const [iconGroup, setIconGroup] = useState<IconGroup | null>(null);\n\n  const guild = guilds.find(guild => guild.id === guildID)!;\n  const [iconFetcher, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const modal = withReactContent(Swal);\n  const hasPermission = guild ? guild.hasPermission : false;\n\n  useEffect(() => {\n    if (groupID) {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}?id=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}&groupID=${groupID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([group, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[]].map(item => item.id)));\n        setIconGroups([]);\n        setIcons(images);\n        setIconGroup(group as IconGroup);\n      });\n    } else {\n      Promise.all([\n        fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}?id=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json()),\n        fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}?guildID=${guildID}`, {\n          credentials: \"include\"\n        }).then(res => res.json())\n      ]).then(([groups, images]) => {\n        dispatch(setCheckedIcons([...images as Icon[], ...groups as IconGroup[]].map(item => item.id)));\n        setIconGroups(groups.map((group: IconGroup) => ({...group, selected: false, editing: false})));\n        setIcons(images.map((icon: Icon) => ({...icon, selected: false})));\n        setIconGroup(null);\n      });\n    }\n  }, [guildID, groupID, iconFetcher, dispatch]);\n\n  const showIcon = useCallback((icon: Icon) => {\n    modal.fire({\n      html: <IconChat user={user!} icon={icon} iconGroup={iconGroup} modal={modal} />,\n      heightAuto: false\n    });\n  }, [user, modal, iconGroup]);\n\n  const updateName = useCallback((item: Icon | IconGroup, type: ItemType, newName: string) => {\n    const prevName = item.name;\n    newName = newName.replace(/\\s+/, \"\");\n\n    const endPoint = type === ItemType.ICON ? URL.ICON : URL.DIRECTORY;\n    const itemName = type === ItemType.ICON ? \"아이콘 이름\" : \"그룹명\";\n\n    item.name = newName;\n    if (type === ItemType.ICON && icons) {\n      setIcons([...icons]);\n    } else if (type === ItemType.GROUP && iconGroups) {\n      setIconGroups([...iconGroups]);\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}${endPoint}`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        id: item.id,\n        name: newName\n      })\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast.success(`${itemName}을 업데이트했습니다!`);\n    }).catch(err => {\n      item.name = prevName;\n      if (type === ItemType.ICON && icons) {\n        setIcons([...icons]);\n      } else if (type === ItemType.GROUP && iconGroups) {\n        setIconGroups([...iconGroups]);\n      }\n      toast.error(() => <div>❌ {itemName}을 변경하지 못했습니다<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [icons, iconGroups]);\n\n  const {\n    getRootProps,\n    getInputProps,\n    open: openDropzone,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: \"image/jpg, image/jpeg, image/png, image/gif, image/webp\",\n    disabled: !hasPermission,\n    noClick: true,\n    noKeyboard: true,\n    maxSize: 8388608, // 8MB\n    onDrop: files => {\n      if (files.length <= 0) {\n        modal.fire({\n          icon: \"error\",\n          html: \"이미지 크기가 너무 크거나(8MB 이상)<br/>지원하지 않는 파일 포맷이 섞여있어요!\",\n          heightAuto: false\n        });\n        return;\n      }\n\n      const formData = new FormData();\n\n      formData.append(\"guildID\", guildID);\n      if (groupID) {\n        formData.append(\"groupID\", groupID);\n      }\n\n      files.forEach(file => {\n        formData.append(\"icons[]\", file, file.name);\n      });\n\n      const uploadingToast = toast(`${files.length}개의 아이콘을 업로드중입니다...`, { autoClose: false });\n\n      fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      }).then(async res => {\n        if (res.status !== 200) {\n          throw new Error(await res.text());\n        }\n        // Re-render component\n        toast.update(uploadingToast, {\n          render: `${files.length}개의 아이콘을 추가했습니다!`,\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000\n        });\n        forceUpdate();\n      }).catch(err => {\n        toast.update(uploadingToast, {\n          render: () => <div>❌ 아이콘 업로드에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000\n        });\n      });\n    }\n  });\n\n  const containerClass = useMemo(() => {\n    const classes = [\"icon-container\"];\n\n    isDragActive && classes.push(\"drag-active\");\n    isDragAccept && classes.push(\"drag-accept\");\n    isDragReject && classes.push(\"drag-reject\");\n\n    return classes.join(\" \");\n  }, [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  if (!guild) return <NotFound />\n  if (!iconGroups || !icons) return <Loading />\n\n  return (\n    <div {...getRootProps({className: containerClass})}>\n      <IconHeaderMenu\n        icons={icons} iconGroups={iconGroups} iconGroup={iconGroup}\n        guild={guild} hasPermission={hasPermission} openDropzone={openDropzone} forceUpdate={forceUpdate}\n      />\n      <div className=\"icon-item-container\">\n        <div className=\"icon-item icon-item-header\">\n          { hasPermission && <MasterCheckbox /> }\n          <div className=\"icon-item-name-container header-name\">이름</div>\n          <div className=\"icon-item-author\">생성자</div>\n          <div className=\"icon-item-count\">아이콘 개수</div>\n          <div className=\"icon-item-date\">생성일자</div>\n        </div>\n        {\n          iconGroups.map(iconGroup => (\n            <Link key={iconGroup.id} className=\"icon-item\" to={`/icon/${guildID}/${iconGroup.id}`}>\n                { guild.hasPermission && <ItemCheckbox id={iconGroup.id} />}\n                <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n                </svg>\n                <NameInput name={iconGroup.name} onUpdate={newName => updateName(iconGroup, ItemType.GROUP, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ iconGroup.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ iconGroup.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\">{ iconGroup.iconCount }</div>\n              <div className=\"icon-item-date\">{ new Date(iconGroup.createdTimestamp).toLocaleDateString() }</div>\n            </Link>\n          ))\n        }\n        {\n          icons.map(icon => (\n            <div key={icon.id} className=\"icon-item\" onClick={() => showIcon(icon)}>\n              { guild.hasPermission && <ItemCheckbox id={icon.id} />}\n              <div className=\"icon-item-name-container\">\n                <svg className=\"icon-item-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/image.svg#icon`} />\n                </svg>\n                <NameInput name={icon.name} onUpdate={newName => updateName(icon, ItemType.ICON, newName)} />\n              </div>\n              <div className=\"icon-item-author\">\n                <img className=\"icon-item-author-icon\" src={ icon.author?.avatarURL ?? \"\" }></img>\n                <span className=\"icon-item-author-tag\">{ icon.author?.tag ?? \"\" }</span>\n              </div>\n              <div className=\"icon-item-count\"></div>\n              <div className=\"icon-item-date\">{ new Date(icon.createdTimestamp).toLocaleDateString() }</div>\n            </div>\n          ))\n        }\n      </div>\n      <div className=\"icon-footer\">\n        <img className=\"icon-footer-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        <div className=\"icon-footer-chat-bubble\">드래그 & 드롭으로도 업로드할 수 있다냥!</div>\n      </div>\n      <div className=\"icon-drag-visualizer\">\n        <svg className=\"icon-drag-add\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add.svg#icon`} />\n        </svg>\n        <div className=\"icon-drag-reject-container\">\n          <svg className=\"icon-drag-reject\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} />\n          </svg>\n          <div>지원하지 않는 파일 포맷이 섞여있어요!</div>\n        </div>\n      </div>\n      <input {...getInputProps()} />\n      <ToastContainer position=\"bottom-right\" closeOnClick />\n    </div>\n  );\n}\n\nexport default IconList;\n","import \"./Login.css\";\n\nconst Login = () => {\n  return (\n    <div className=\"header-menu\">\n      <div className=\"header-menu-item\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"header-menu-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/login.svg#icon`} />\n        </svg>\n        <span>로그인</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Login;\n","import React from \"react\";\nimport User from \"~/api/type/User\";\nimport \"./Profile.css\";\n\nconst Profile: React.FC<{ user: User }> = ({ user }) => {\n  const logout = () => {\n    window.location.href = `${process.env.REACT_APP_API_URL}/logout`;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-overlay\"\n        onClick={logout}\n      >로그아웃</div>\n      <img className=\"profile-avatar\" src={user.avatarURL} />\n      <span className=\"profile-username\">{ user.tag }</span>\n      <div className=\"profile-logout\" onClick={logout}>로그아웃</div>\n    </div>\n  )\n}\n\nexport default Profile;\n","export const SET_USER = \"user/SET\" as const;\n\nexport const SET_GUILDS = \"guilds/SET\" as const;\n\nexport const TOGGLE_HAMBURGER = \"hamburger/TOGGLE\" as const;\n\nexport const TOGGLE_ICON = \"icon/TOGGLE\" as const;\nexport const SET_ICONS = \"icon/SET\" as const;\nexport const SELECT_ALL_ICON = \"icon/SELECT_ALL\" as const;\nexport const UNSELECT_ALL_ICON = \"icon/UNSELECT_ALL\" as const;\n","import Guild from \"~/api/type/Guild\";\nimport User from \"~/api/type/User\";\nimport * as ACTION from \"./actionTypes\";\n\nexport const setUser = (user: User) => ({\n  type: ACTION.SET_USER,\n  payload: user\n});\n\nexport const setGuilds = (guilds: Guild[]) => ({\n  type: ACTION.SET_GUILDS,\n  payload: guilds\n});\n\nexport const toggleHamburger = () => ({\n  type: ACTION.TOGGLE_HAMBURGER\n});\n\nexport const toggleIconChecked = (id: string) => ({\n  type: ACTION.TOGGLE_ICON,\n  payload: { id }\n});\n\nexport const setCheckedIcons = (ids: string[]) => ({\n  type: ACTION.SET_ICONS,\n  payload: ids\n});\n\nexport const selectAllIcons = () => ({\n  type: ACTION.SELECT_ALL_ICON\n});\n\nexport const unselectAllIcons = () => ({\n  type: ACTION.UNSELECT_ALL_ICON\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { toggleHamburger } from \"../redux/actions\";\n\nimport \"./SubcategoryLink.css\";\n\nconst Subcategory: React.FC<{\n  to: string;\n  className?: string;\n}> = ({ to, className, children }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  return <NavLink to={to} className={`subcategory-item ${className ? className : \"\"}`} activeClassName=\"selected\"\n    isActive={() => location.pathname.startsWith(to)}\n    onClick={() => dispatch(toggleHamburger())}\n  >\n    { children }\n  </NavLink>\n}\n\nexport default Subcategory;\n","export const TOOLS = \"🛠️\";\nexport const SMALL_BLUE_DIAMOND = \"🔹\";\nexport const SMALL_ORANGE_DIAMOND = \"🔸\";\nexport const SMALL_WHITE_SQUARE = \"▫️\";\nexport const SMALL_BLACK_SQUARE = \"▪️\";\nexport const UP_TRIANGLE = \"🔺\";\nexport const SPEAKING_HEAD = \"🗣️\";\nexport const LOUD_SPEAKER = \"📢\";\nexport const EXCLAMATION = \"❗\";\nexport const BANGBANG = \"‼️\";\nexport const QUESTION_MARK = \"❓\";\nexport const MIDDLE_DOT = \"•\";\nexport const DICE = \"🎲\";\nexport const WWW = \"🌐\";\nexport const MAGNIFYING_GLASS_LEFT = \"🔍\";\nexport const ARROW_SHADED_RIGHT = \"➩\";\nexport const ARROW_LEFT = \"⬅\";\nexport const ARROW_RIGHT = \"➡\";\nexport const ARROW_UP = \"↑\";\nexport const PLAY = \"▶\";\nexport const PAUSE = \"⏸️\";\nexport const CROSS = \"❌\";\nexport const WARNING = \"⚠️\";\nexport const WAVY_DASH = \"〰️\";\nexport const ALARM = \"⏰\";\nexport const STOPWATCH = \"⏱️\";\nexport const CLOCK_3 = \"🕒\";\nexport const HEADPHONES = \"🎧\";\nexport const MICROPHONE = \"🎤\";\nexport const CD = \"💿\";\nexport const MUSIC_NOTE = \"🎵\";\nexport const MUSIC_NOTES = \"🎶\";\nexport const MUSIC_8TH = \"♪\";\nexport const LOOP = \"🔁\";\nexport const HOURGLASS_NOT_DONE = \"⏳\";\nexport const DOLLAR = \"💵\";\nexport const BOOKS = \"📚\";\nexport const MONEY_WITH_WINGS = \"💸\";\nexport const GREEN_CHECK = \"✅\";\nexport const ANGER = \"💢\";\nexport const NO_ENTRY = \"⛔\";\nexport const LARGE_CIRCLE = \"⭕\";\nexport const BLUE_CIRCLE = \"🔵\";\nexport const VIDEO_GAME = \"🎮\";\nexport const PEOPLE = \"👥\";\nexport const NSFW = \"🔞\";\nexport const EGGPLANT = \"🍆\";\nexport const SPARKLING_HEART = \"💖\";\nexport const BLACK_HEART = \"🖤\";\nexport const BOT = \"🤖\";\nexport const WRENCH = \"🔧\";\nexport const GEAR = \"⚙️\";\nexport const BAR_CHART = \"📊\";\nexport const THINKING = \"🤔\";\nexport const KEYCAP = \"⃣\";\nexport const TEN = \"🔟\";\nexport const STAR = \"⭐\";\nexport const GLOWING_STAR = \"🌟\";\nexport const LOW_BRIGHTNESS = \"🔅\";\nexport const THERMOMETER = \"🌡️\";\nexport const SPEECH_BUBBLE = \"💬\";\nexport const RULER = \"📏\";\nexport const SCALES = \"⚖️\";\nexport const CAT = {\n  KISSING: \"😽\",\n  GRINNING: \"😸\"\n};\nexport const CROSSED_SWORDS = \"⚔️\";\nexport const SHIELD = \"🛡️\";\nexport const GOLD_MEDAL = \"🥇\";\nexport const SILVER_MEDAL = \"🥈\";\nexport const BRONZE_MEDAL = \"🥉\";\nexport const FILE = \"📁\";\nexport const FLOPPY_DISC = \"💾\";\nexport const PICTURE = \"🖼️\";\nexport const MEMO = \"📝\";\nexport const WHITE_FLOWER = \"💮\";\nexport const PUSH_PIN = \"📌\";\nexport const ENVELOPE_WITH_ARROW = \"📩\";\nexport const LINK = \"🔗\";\nexport const CROWN = \"👑\";\nexport const BALLOT_BOX = \"🗳️\";\nexport const MILITARY_HELMET = \"🪖\";\nexport const SCROLL = \"📜\";\nexport const LETTER = {\n  A: \"🇦\",\n  B: \"🇧\",\n  C: \"🇨\",\n  D: \"🇩\",\n  E: \"🇪\",\n  F: \"🇫\",\n  G: \"🇬\",\n  H: \"🇭\",\n  I: \"🇮\",\n  J: \"🇯\",\n  K: \"🇰\",\n  L: \"🇱\",\n  M: \"🇲\",\n  N: \"🇳\",\n  O: \"🇴\",\n  P: \"🇵\",\n  Q: \"🇶\",\n  R: \"🇷\",\n  S: \"🇸\",\n  T: \"🇹\",\n  U: \"🇺\",\n  V: \"🇻\",\n  W: \"🇼\",\n  X: \"🇽\",\n  Y: \"🇾\",\n  Z: \"🇿\"\n};\nexport const ZERO_WIDTH_SPACE = \"​\";\n","import * as EMOJI from \"~/const/emoji\";\n\nexport const BOT = {\n  ID: \"bot\",\n  NAME: \"봇\",\n  DESC: \"봇과 관련된 정보들을 확인할 수 있다냥!\",\n  EMOJI: EMOJI.BOT\n};\nexport const UTILITY = {\n  ID: \"utility\",\n  NAME: \"유틸리티\",\n  DESC: \"유용한 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.TOOLS\n};\nexport const SEARCH = {\n  ID: \"search\",\n  NAME: \"검색\",\n  DESC: \"인터넷으로 검색한 결과를 보여주는 명령어들이다냥!\",\n  EMOJI: EMOJI.MAGNIFYING_GLASS_LEFT\n};\nexport const SOUND = {\n  ID: \"sound\",\n  NAME: \"음악\",\n  DESC: \"음성 채널에서 사용할 수 있는 명령어들이다냥!\",\n  EMOJI: EMOJI.MUSIC_NOTES\n};\nexport const HISTORY = {\n  ID: \"history\",\n  NAME: \"기록\",\n  DESC: \"서버의 각종 기록들을 열람할 수 있다냥!\",\n  EMOJI: EMOJI.SCROLL\n};\nexport const STEAM = {\n  ID: \"steam\",\n  NAME: \"스팀\",\n  DESC: \"스팀에서 여러가지 정보를 검색한다냥!\",\n  EMOJI: EMOJI.MONEY_WITH_WINGS\n};\n// export const GAME = {\n//   ID: \"game\",\n//   NAME: \"게임\",\n//   DESC: \"다양한 게임과 관련된 명령어들이다냥!\",\n//   EMOJI: EMOJI.VIDEO_GAME\n// };\nexport const ICON = {\n  ID: \"icon\",\n  NAME: \"아이콘\",\n  DESC: \"아이콘 관련 명령어들을 모아놨다냥!\",\n  EMOJI: EMOJI.PICTURE\n};\n","import React, { useMemo } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Login from \"./Login\";\nimport Profile from \"./Profile\";\nimport SubcategoryLink from \"./SubcategoryLink\";\n\nimport { toggleHamburger } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\nimport * as CATEGORY from \"~/const/category\";\n\nimport \"./Sidebar.css\";\n\ninterface Route {\n  path: string;\n  name: string;\n  icon: string;\n  active: boolean;\n  subcategories?: JSX.Element[];\n}\n\nconst Sidebar: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const routes: Route[] = useMemo(() => [\n    {\n      path: \"/\",\n      name: \"홈\",\n      icon: \"home\",\n      active: location.pathname === \"/\"\n    },\n    {\n      path: \"/icon\",\n      name: \"아이콘\",\n      icon: \"archive\",\n      active: location.pathname.startsWith(\"/icon\"),\n      subcategories: guilds?.map(guild =>\n        <SubcategoryLink to={`/icon/${guild.id}`} key={guild.id} className=\"guild-link\">\n          <img className=\"subcategory-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n          { guild.name }\n        </SubcategoryLink>\n      )\n    },\n    {\n      path: \"/command/bot\",\n      name: \"명령어 목록\",\n      icon: \"bolt\",\n      active: location.pathname.startsWith(\"/command\"),\n      subcategories: Object.values(CATEGORY)\n        .map(category => <SubcategoryLink to={`/command/${category.ID}`} key={category.ID}>{category.EMOJI} {category.NAME}</SubcategoryLink>)\n    },\n    {\n      path: \"/setting\",\n      name: \"서버 설정\",\n      icon: \"setting\",\n      active: location.pathname.startsWith(\"/setting\"),\n    }\n  ], [guilds, location]);\n\n  const containerClass = useMemo(() => {\n    const classes = [\"sidebar-container\"];\n    if (hamburger.open) classes.push(\"visible\");\n\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <div className={containerClass}>\n      <div className=\"sidebar-menu-item-container header\">\n        <div className=\"header-burger\" onClick={() => dispatch(toggleHamburger())}>\n          <svg className=\"header-burger-icon\">\n            <use xlinkHref={\n              hamburger.open\n                ? `${process.env.PUBLIC_URL}/icons/cancel.svg#icon`\n                : `${process.env.PUBLIC_URL}/icons/hamburger.svg#icon`\n              } />\n          </svg>\n        </div>\n        <div className=\"header-logo\">\n          <div className=\"header-logo-text\">\n            <span>샴고양이</span>\n          </div>\n          <img className=\"header-logo-img\" alt=\"logo\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n        </div>\n      </div>\n      <div className=\"sidebar-menu\">\n        {routes.map((route) => (\n          <div className=\"sidebar-menu-item-container\" key={route.name}>\n            <NavLink to={route.path} className=\"sidebar-menu-item\" activeClassName=\"selected\"\n              isActive={() => route.active}\n            >\n              <svg className=\"sidebar-menu-icon\">\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${route.icon}.svg#icon`} />\n              </svg>\n              <span>{route.name}</span>\n            </NavLink>\n            { route.active && route.subcategories }\n          </div>\n        ))}\n      </div>\n      <div className=\"sidebar-bottom\">\n          <div className=\"sidebar-menu-item-container\">\n            {user != null\n              ? user.id\n                ? <Profile user={user} />\n                : <Login />\n              : <></>\n            }\n          </div>\n          <div className=\"sidebar-menu-item-container\">\n            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\">\n              <div className=\"sidebar-others-item\">\n                <svg className=\"sidebar-others-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n                </svg>\n                <span>샴고양이 초대하기</span>\n              </div>\n            </a>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <img className=\"home-img\" src=\"https://i.ytimg.com/vi/uMxnmGBGL78/maxresdefault.jpg\" />\n      <div>샴고양이 사용중에 궁금한게 또 있어요?</div>\n      <div><a href=\"https://discord.gg/uuSPaYtF8W\">샴고양이 DevServer</a>로 오십시오</div>\n\n      <div style={{\n        padding: \"15px\",\n        borderRadius: \"5px\",\n        fontSize: \"18px\",\n        backgroundColor: \"#ffe08a\",\n        marginTop: \"20px\",\n        color: \"rgba(0,0,0,.7)\"\n      }}>\n        <li>사이트 구조상 \"크로스 웹 사이트 추적 허용\"이 꺼져있으면 로그인이 불가능합니다.</li>\n        <li>iOS에서 로그인이 안될 경우 <strong>설정 {\"->\"} 사파리 {\"->\"} 크로스 사이트 추적 방지</strong>를 꺼보세요</li>\n        <li>시크릿 모드/개인 정보 보호 모드 등을 이용할 경우 <strong>\"타사 쿠키 차단\"</strong>을 꺼야만 로그인할 수 있습니다.</li>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./GuildList.css\";\n\nconst GuildList: React.FC = () => {\n  const guilds = useSelector((state: RootState) => state.guilds);\n\n  return (\n    <div className=\"guild-container\">\n      <div className=\"guild-header\">\n        <div className=\"guild-header-text\">\n          <span>서버 목록</span>\n        </div>\n      </div>\n      <div className=\"guild-subtitle\">\n        아이콘을 편집할 서버를 선택해주세요\n      </div>\n      {\n        guilds.map(guild => (\n          <div key={guild.id}>\n            <div className=\"guild-separator\"></div>\n            <Link to={`/icon/${guild.id}`} className=\"guild-item\">\n              <img className=\"guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n              <div className=\"guild-name\">{ guild.name }</div>\n              <svg className={`guild-approved-icon ${guild.hasPermission ? \"yes\" : \"no\"}`} data-tip data-for=\"guild-permission-tooltip\">\n                <use xlinkHref={`${process.env.PUBLIC_URL}/icons/${guild.hasPermission ? \"approve\" : \"cancel\"}.svg#icon`} />\n              </svg>\n              <ReactTooltip id=\"guild-permission-tooltip\" place=\"right\" type=\"dark\" effect=\"solid\">\n                <span>{ guild.hasPermission ? \"아이콘을 편집할 수 있는 서버입니다\" : \"아이콘 편집 권한이 없습니다\"}</span>\n              </ReactTooltip>\n              <div className=\"guild-enter-icon-container\">\n                <svg className=\"guild-enter-icon\">\n                  <use xlinkHref={`${process.env.PUBLIC_URL}/icons/right-arrow.svg#icon`} />\n                </svg>\n              </div>\n            </Link>\n          </div>\n        ))\n      }\n      <div className=\"guild-footer\">\n        - 서버가 표시되지 않나요? 샴고양이를 사용하는 서버에서 아무 메시지나 보낸 다음 다시 확인해보세요!\n      </div>\n    </div>\n  );\n};\n\nexport default GuildList;\n","import \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <span>404 Not Found</span>\n  </div>\n);\n\nexport default NotFound;\n","export const LOGOUT = \"/logout\";\nexport const USER = \"/user\";\nexport const GUILDS = \"/guilds\";\nexport const ICON = \"/icon\";\nexport const ICONS = \"/icons\";\nexport const DIRECTORY = \"/directory\";\nexport const DIRECTORIES = \"/directories\";\n","import React, { useCallback } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nimport { RootState } from \"../redux/reducers\";\nimport * as URL from \"~/api/const/url\";\nimport Guild from \"~/api/type/Guild\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport Icon from \"~/api/type/Icon\";\n\nimport \"./IconHeaderMenu.css\";\n\nconst IconHeaderMenu: React.FC<{\n  icons: Icon[] | null;\n  iconGroups: IconGroup[] | null;\n  iconGroup: IconGroup | null;\n  guild: Guild;\n  hasPermission: boolean;\n  openDropzone: () => void;\n  forceUpdate: React.DispatchWithoutAction;\n}> = ({ icons, iconGroups, guild, iconGroup, hasPermission, openDropzone, forceUpdate }) => {\n  const checkedState = useSelector((state: RootState) => state.icon);\n\n  const createFolder = useCallback(() => {\n    const formData = new FormData();\n    formData.append(\"guildID\", guild.id);\n\n    fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORY}`, {\n      method: \"POST\",\n      credentials: \"include\",\n      body: formData\n    }).then(async res => {\n      if (res.status !== 200) {\n        throw new Error(await res.text());\n      }\n      // Re-render component\n      toast(\"📁 폴더를 추가했습니다!\");\n      forceUpdate();\n    }).catch(err => {\n      toast.error(() => <div>❌ 새 폴더 생성에 실패했습니다 :(<br/>{err.message ? err.message : err.toString()}</div>);\n    });\n  }, [guild, forceUpdate]);\n\n  const removeSelected = () => {\n    if (!iconGroups || !icons) return;\n\n    const selectedGroups = iconGroups.filter(group => checkedState[group.id].checked);\n    const selectedIcons = icons.filter(icon => checkedState[icon.id].checked);\n\n    if (selectedGroups.length <= 0 && selectedIcons.length <= 0) return;\n\n    const removeGroups = fetch(`${process.env.REACT_APP_API_URL}${URL.DIRECTORIES}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        directories: selectedGroups.map(iconGroup => iconGroup.id),\n        guildID: guild.id,\n      })\n    });\n\n    const removeIcons = fetch(`${process.env.REACT_APP_API_URL}${URL.ICONS}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        icons: selectedIcons.map(icon => icon.id),\n        guildID: guild.id,\n      })\n    });\n\n    Promise.all([removeGroups, removeIcons]).then(([res1, res2]) => {\n      if (!res1.ok || !res2.ok) throw new Error();\n\n      const removed: string[] = [];\n      if (selectedGroups.length > 0) removed.push(`${selectedGroups.length}개의 그룹`);\n      if (selectedIcons.length > 0) removed.push(`${selectedIcons.length}개의 아이콘`);\n\n      toast.success(`${removed.join(\" 및 \")}을 삭제했습니다!`)\n      forceUpdate();\n    }).catch(() => {\n      toast(\"❌ 아이콘/폴더 삭제에 실패했습니다.\")\n    });\n  };\n\n  return <div className=\"icon-menu-container\">\n    <div className=\"icon-menu-left\">\n      <Link to={iconGroup ? `/icon/${guild.id}` : \"/icon\"} className=\"icon-menu-item icon-back-button-container\">\n        <svg className=\"icon-arrow-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/left-arrow.svg#icon`} />\n        </svg>\n      </Link>\n      <img className=\"icon-guild-icon\" src={ guild.iconURL ? guild.iconURL : `${process.env.PUBLIC_URL}/icons/discord.svg#icon`}></img>\n      <div className=\"icon-guild-title\">\n        <span>{ guild.name }</span>\n        {\n          iconGroup &&\n          <div className=\"icon-group-title\">\n            <span className=\"icon-group-separator\"> / </span>\n            <svg className=\"icon-group-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/folder.svg#icon`} />\n            </svg>\n            <span>{ iconGroup.name }</span>\n          </div>\n        }\n      </div>\n    </div>\n    {\n      hasPermission &&\n      <div className=\"icon-menu-right\">\n        {\n          !iconGroup &&\n          <div className=\"icon-menu-item icon-add-folder-btn\" onClick={createFolder} data-tip data-for=\"icon-menu-add-folder-tooltip\">\n            <svg className=\"icon-menu-icon\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/add-folder.svg#icon`} />\n            </svg>\n            <ReactTooltip id=\"icon-menu-add-folder-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n              <span>아이콘 그룹 추가</span>\n            </ReactTooltip>\n          </div>\n        }\n        <div className=\"icon-menu-item icon-remove-btn\" onClick={removeSelected} data-tip data-for=\"icon-menu-remove-tooltip\">\n          <svg className=\"icon-menu-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/trash.svg#icon`} />\n          </svg>\n          <ReactTooltip id=\"icon-menu-remove-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n            <span>선택된 항목들 삭제</span>\n          </ReactTooltip>\n        </div>\n        <div className=\"icon-menu-item\" onClick={openDropzone}>\n          <svg className=\"icon-upload-icon\">\n            <use xlinkHref={`${process.env.PUBLIC_URL}/icons/upload.svg#icon`} />\n          </svg>\n          <span className=\"icon-upload-text\">업로드</span>\n        </div>\n      </div>\n    }\n  </div>\n}\n\nexport default IconHeaderMenu;\n","import \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllIcons, unselectAllIcons } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst MasterCheckbox: React.FC = () => {\n  const icons = useSelector((state: RootState) => state.icon);\n  const dispatch = useDispatch();\n  const [allChecked, setAllChecked] = useState(false);\n\n  useEffect(() => {\n    setAllChecked(Object.values(icons).every(icon => icon.checked))\n  }, [icons])\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (allChecked) {\n      dispatch(unselectAllIcons());\n    } else {\n      dispatch(selectAllIcons());\n    }\n  }}>\n    <Checkbox color=\"danger\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={allChecked} readOnly />\n  </div>\n}\n\nexport default MasterCheckbox;\n","import { Checkbox } from \"pretty-checkbox-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleIconChecked } from \"../redux/actions\";\nimport { RootState } from \"../redux/reducers\";\n\nimport \"./ItemCheckbox.css\";\n\nconst ItemCheckbox: React.FC<{\n  id: string;\n}> = ({ id }) => {\n  const icon = useSelector((state: RootState) => state.icon[id]);\n  const dispatch = useDispatch();\n\n  return <div className=\"icon-item-checkbox-container\" onClickCapture={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(toggleIconChecked(id));\n  }}>\n    <Checkbox color=\"danger\" animation=\"jelly\" bigger shape=\"curve\" variant=\"thick\" className=\"icon-item-checkbox\"\n      style={{ pointerEvents: \"none\" }}\n      icon={<svg className=\"icon-checkbox-icon\"><use xlinkHref={`${process.env.PUBLIC_URL}/icons/cancel.svg#icon`} /></svg>}\n      checked={Boolean(icon && icon.checked)} readOnly={true}\n    />\n  </div>\n}\n\nexport default ItemCheckbox;\n","import React, { useCallback, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./NameInput.css\";\n\nconst NameInput: React.FC<{\n  name: string;\n  onUpdate: (newName: string) => any;\n}> = ({ name, onUpdate }) => {\n  const [editing, setEditing] = useState(false);\n\n  const updateName = useCallback((newName: string) => {\n    if (newName !== name) {\n      onUpdate(newName);\n    }\n    setEditing(false);\n  }, [name, onUpdate]);\n\n  return editing\n    ? <>\n        <input type=\"text\" maxLength={10}\n          onBlur={e => updateName(e.target.value)}\n          onClick={e => {\n            e.stopPropagation();\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === \"Enter\" || e.key === \"Escape\") {\n              updateName(e.currentTarget.value);\n            }\n          }}\n          defaultValue={name} autoFocus={true}\n          className=\"icon-item-name editing\" />\n        <svg key={1} className=\"icon-item-icon icon-edit-finish-icon\" onClick={e => {\n          e.stopPropagation();\n          e.preventDefault();\n        }}>\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/approve.svg#icon`} />\n        </svg>\n      </>\n    : <>\n      <span className=\"icon-item-name\">{name}</span>\n      <svg key={2} className=\"icon-item-icon icon-edit-icon\" onClick={e => {\n        e.stopPropagation();\n        e.preventDefault();\n        setEditing(true);\n      }} data-tip data-for=\"icon-edit-tooltip\">\n        <use xlinkHref={`${process.env.PUBLIC_URL}/icons/edit.svg#icon`} />\n      </svg>\n      <ReactTooltip id=\"icon-edit-tooltip\" place=\"right\" type=\"light\" effect=\"solid\">\n        <span>이름 변경하기</span>\n      </ReactTooltip>\n    </>;\n};\n\nexport default NameInput;\n","import React from \"react\";\nimport Swal from \"sweetalert2\";\nimport { ReactSweetAlert } from \"sweetalert2-react-content\";\n\nimport Icon from \"~/api/type/Icon\";\nimport IconGroup from \"~/api/type/IconGroup\";\nimport User from \"~/api/type/User\";\n\nimport \"./IconChat.css\";\n\nconst IconChat: React.FC<{\n  user: User;\n  icon: Icon;\n  iconGroup: IconGroup | null;\n  modal: typeof Swal & ReactSweetAlert;\n}> = ({ user, icon, iconGroup, modal }) => {\n  return <div className=\"chat-container\" onClick={() => {\n    modal.clickConfirm();\n  }}>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={user.avatarURL} />\n      <div className=\"chat-contents\">\n        <span className=\"chat-author-name\">{ user.username }</span>\n        <span>~{ iconGroup ? `${iconGroup.name} ${icon.name}` : icon.name }</span>\n      </div>\n    </div>\n    <div className=\"chat-item\">\n      <img className=\"chat-author-image\" src={`${process.env.PUBLIC_URL}/logo20.png`} />\n      <div className=\"chat-contents\">\n        <div className=\"chat-name-wrapper\">\n          <span className=\"chat-author-name\">샴고양이</span>\n          <div className=\"chat-bot-tag\">\n            <svg style={{marginLeft: \"-4px\"}} width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\"><path d=\"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\" fill=\"currentColor\"></path></svg>\n            <span>봇</span>\n          </div>\n        </div>\n        <div className=\"chat-embed-wrapper\">\n          <div className=\"chat-embed-author\">\n            <img className=\"chat-embed-author-image\" src={user.avatarURL} />\n            <span className=\"chat-embed-author-name\">{ user.username }</span>\n          </div>\n          <img className=\"chat-icon-image\" src={icon.url} />\n        </div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default IconChat;\n","import \"./AuthNeeded.css\";\n\nconst AuthNeeded = () => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-header\">로그인이 필요합니다</div>\n      <div className=\"auth-login-button\" onClick={() => {\n        window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`;\n      }}>\n        <svg className=\"auth-discord-icon\">\n          <use xlinkHref={`${process.env.PUBLIC_URL}/icons/discord.svg#icon`} />\n        </svg>\n        <div className=\"auth-login-separator\"></div>\n        <span>디스코드로 로그인하기</span>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthNeeded;\n","import React, { useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GuildList from \"./GuildList\";\nimport IconList from \"./IconList\";\nimport AuthNeeded from \"./AuthNeeded\";\nimport Loading from \"../component/Loading\";\nimport { RootState } from \"../redux/reducers\";\nimport { setGuilds } from \"../redux/actions\";\nimport Guild from \"~/api/type/Guild\";\n\nimport \"./Icon.css\";\n\nconst Icon: React.FC = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const guilds = useSelector((state: RootState) => state.guilds);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/guilds`, {\n      credentials: \"include\"\n    }).then(res => res.json())\n      .then(guilds => dispatch(setGuilds(guilds as Guild[])))\n  }, [dispatch]);\n\n  if (!user) return <></>;\n  if (!user.id) return <AuthNeeded />;\n  if (!guilds) return <Loading />;\n\n  return (<Switch>\n    <Route path={[\n      `${match.path}/:guildID/:groupID`,\n      `${match.path}/:guildID`\n    ]}>\n      <IconList />\n    </Route>\n    <Route path={match.path}>\n      <GuildList />\n    </Route>\n  </Switch>)\n}\n\nexport default Icon;\n","import ReactTooltip from \"react-tooltip\";\n\nimport \"./CommandItem.css\";\n\ninterface Command {\n  CMD: string;\n  DESC: string;\n  USAGE?: string;\n  ALIAS?: readonly string[];\n}\n\nconst CommandItem: React.FC<{\n  command: Command;\n  parent?: {\n    CMD: string;\n  };\n  voiceOnly?: boolean;\n}> = ({ command, parent, children, voiceOnly = false }) => {\n  const commandName = parent ? `${parent.CMD} ${command.CMD}` : command.CMD;\n\n  return <div className=\"command-item\">\n    <div className=\"command-header\">\n      <div className=\"command-title\">\n        {voiceOnly &&\n          <>\n            <svg className=\"command-voice-icon\" data-tip data-for=\"voice-channel-tooltip\">\n              <use xlinkHref={`${process.env.PUBLIC_URL}/icons/volume-up.svg#icon`} />\n            </svg>\n            <ReactTooltip id=\"voice-channel-tooltip\" place=\"top\" type=\"dark\" effect=\"solid\">\n              <span>음성 채널에서만 사용 가능한 명령어입니다.</span>\n            </ReactTooltip>\n          </>\n        }\n        { commandName }\n        {command.ALIAS &&\n        <div className=\"command-alias\">\n          <div>or...</div>\n          {\n            command.ALIAS.map(alias => (<div key={alias} className=\"command-alias-item\">{alias}</div>))\n          }\n        </div>\n      }\n      </div>\n      {command.USAGE &&\n        <div className=\"command-usage\">사용법: 샴 {commandName} {command.USAGE}</div>\n      }\n    </div>\n    {children}\n  </div>\n}\n\nexport default CommandItem;\n","import React from \"react\";\n\nimport \"./ChatBubble.css\";\n\nconst ChatBubble: React.FC<{\n  author?: {\n    name: string;\n    avatar: string;\n  };\n  position: \"left\" | \"right\";\n}> = ({ author, position, children }) => {\n  return <div className={`chat-bubble-container ${position}`}>\n    {author &&\n      <div className=\"chat-bubble-author\">\n        <img className=\"chat-bubble-author-image\" src={author.avatar} />\n        <span className=\"chat-bubble-author-name\">{author.name}</span>\n      </div>\n    }\n    <div className=\"chat-bubble\">\n      { children }\n    </div>\n  </div>\n}\n\nexport default ChatBubble;\n","import React from \"react\";\n\nimport \"./ChatContainer.css\";\n\nconst ChatContainer: React.FC = ({ children }) => {\n  return <div className=\"bubblechat-container\">\n    { children }\n  </div>\n}\n\nexport default ChatContainer;\n","import React from \"react\";\n\nimport \"./CommandDesc.css\";\n\nconst CommandDesc: React.FC = ({ children }) => {\n  return <div className=\"command-desc-container\">\n    { children }\n  </div>\n}\n\nexport default CommandDesc;\n","import React from \"react\";\n\nimport \"./EmbedHeader.css\";\n\nconst EmbedHeader: React.FC<{\n  author: {\n    name: string;\n    avatar: string;\n  };\n}> = ({ author }) => {\n  return <div className=\"embed-header-container\">\n      <img className=\"embed-header-image\" src={author.avatar} />\n      <span className=\"embed-header-name\">{author.name}</span>\n  </div>\n}\n\nexport default EmbedHeader;\n","import React from \"react\";\n\nimport \"./EmbedFooter.css\";\n\nconst EmbedFooter: React.FC<{\n  image: string;\n  text: string;\n}> = ({ image, text }) => {\n  return <div className=\"embed-footer-container\">\n      <img className=\"embed-footer-image\" src={image} />\n      <span className=\"embed-footer-text\">{text}</span>\n  </div>\n}\n\nexport default EmbedFooter;\n","// Dedent from string, useful for multiline string template\nexport const dedent = (callSite: TemplateStringsArray, ...args: any[]) => {\n  const format = (str: string) => {\n    const strSplitted = str.split(\"\\n\");\n\n    return strSplitted.map(substr => substr.trim())\n      .filter(substr => substr.length > 0)\n      .join(\"\\n\");\n  };\n\n  if (typeof callSite === \"string\") {\n    return format(callSite);\n  }\n\n  const output = callSite\n    .slice(0, args.length + 1)\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    .map((text, i) => (i === 0 ? \"\" : args[i - 1]) + text)\n    .join(\"\");\n\n  return format(output);\n};\n\nexport const isBetween = (val: number, min: number, max: number) => val >= min && val <= max;\nexport const clamp = (val: number, min: number, max: number) => Math.min(Math.max(val, min), max);\n\nexport const getRandom = <T>(arr: T[]): T => arr[Math.floor((Math.random() * arr.length))];\n\nexport const shuffle = <T>(arr: T[]) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nexport const toValidUrl = (url: string) => {\n  if (url.startsWith(\"//\")) return `https:${url}`;\n  return url;\n};\n\nexport const rgbaToHex = (val: string) => {\n  const regex = /^rgba?\\((\\d{1,3})\\s?,\\s?(\\d{1,3})\\s?,\\s?(\\d{1,3})(?:,\\s?\\d.?\\d*)?\\s?\\)$/;\n  const matched = regex.exec(val);\n  if (!matched) return val;\n\n  const rgb = [matched[1], matched[2], matched[3]];\n\n  return rgb.map(color => clamp(parseFloat(color), 0, 255)) as [number, number, number];\n};\n\nexport default dedent;\n","\nconst escapeMarkdown = (a: string) => a;\n\nexport const strong = (word: string) => `**${word.trim().replace(/^[*]{2,}|[*]{2,}$/gm, \"\")}**`;\nexport const underline = (word: string) => `__${word.trim().replace(/^[_]{2,}|[_]{2,}$/gm, \"\")}__`;\nexport const italics = (word: string) => `*${word.trim().replace(/^\\*{1}[^*]*\\*{1}$/gm, word.trim().slice(1, -1))}*`;\nexport const strike = (word: string) => `~~${word.trim().replace(/[~]{2}/gm, \"\")}~~`;\nexport const code = (word: string) => `\\`${escapeMarkdown(word.trim().replace(/^[`]{1,}|[`]{1,}$/gm, \"\"))}\\``;\nexport const block = (word: string, lang = \"\") => `\\`\\`\\`${escapeMarkdown(lang.trim())}\\n${escapeMarkdown(word.trim())}\\`\\`\\``;\nexport const blockMd = (word: string, lang = \"\") => `\\`\\`\\`${lang}\\n${word}\\`\\`\\``;\nexport const link = (word: string, url: string) => `[${word}](${url})`;\n","import Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const PING = {\n  CMD: \"핑\",\n  DESC: \"퐁을 대답한다냥!\",\n  MSG: (ping: string, botName: string, botDisplayName: string, uptime: Date) => dedent`\n    퐁이다냥! 현재 샴고양이 웹소켓 핑 평균은 ${strong(`${ping}ms`)}다냥!\n    ${botName}${Josa.c(botDisplayName, \"은/는\")} ${uptime.getUTCHours()}시간 ${uptime.getUTCMinutes()}분 ${uptime.getUTCSeconds()}초동안 일하고 있다냥!`\n} as const;\n\nexport const INVITE = {\n  CMD: \"초대\",\n  DESC: \"봇을 초대할 수 있는 링크를 준다냥!\",\n  TITLE: (botName: string) => `${botName}의 초대링크다냥!`,\n  MSG: (botName: string) => `${EMOJI.LINK} 클릭해서 ${botName} 초대하기`\n} as const;\n\nexport const HELP = {\n  CMD: \"도움\",\n  DESC: \"명령어 목록을 보여준다냥!\",\n  ALIAS: [\"help\", \"도움말\"],\n  MENU_TIME: 30\n} as const;\n\nexport const DEV_SERVER = {\n  CMD: \"개발서버\",\n  DESC: \"개발 서버로 올 수 있는 초대 링크를 준다냥!\",\n  INVITE_LINK: (botName: string, inviteLink: string) => dedent`\n    ${botName}의 개발 서버 초대 링크다냥!\n    와서 사용/개발에 관한 질문, 기능요청, 버그제보 등을 할 수 있다냥!\n    ${inviteLink}`\n} as const;\n\nexport const INFO = {\n  CMD: \"정보\",\n  DESC: \"봇과 관련된 정보를 볼 수 있다냥!\",\n  GUILD_CNT: (guildCnt: number) => `${EMOJI.UP_TRIANGLE} 서버 수 - ${guildCnt}개`,\n  USER_CNT: (userCnt: number) => `${EMOJI.PEOPLE} 사용자 수 - ${userCnt}명`,\n  DEV_SERVER: (serverName: string, inviteLink: string) => `${EMOJI.ENVELOPE_WITH_ARROW} [${serverName}](${inviteLink})`,\n  GITHUB_ICON_URL: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\n\nimport * as BOT from \"~/const/command/bot\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Bot = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={BOT.PING}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 핑</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>퐁이다냥! 현재 샴고양이 웹소켓 핑 평균은 224.0ms다냥!</div>\n          <div>@샴고양이는 15시간 42분 7초동안 일하고 있다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>봇 테스트용 명령어입니다.</div>\n        <div>추가로, 샴고양이의 업타임도 확인할 수 있습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.INVITE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 초대</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>샴고양이의 초대링크다냥!</div>\n          <div><a href=\"https://discord.com/oauth2/authorize?client_id=357073005819723777&permissions=3238976&scope=bot\" target=\"_blank\" rel=\"noreferrer\">{EMOJI.LINK}클릭해서 샴고양이 초대하기</a></div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이를 다른 서버에 초대할 수 있는 링크를 반환합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.HELP}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 도움</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.BOT} 봇</div>\n          <div>봇과 관련된 정보들을 확인할 수 있다냥!</div>\n          <div>{EMOJI.SMALL_BLUE_DIAMOND}도움</div>\n          <div>명령어 목록을 보여준다냥!</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이의 명령어 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={BOT.INFO}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 정보</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={siamese} />\n          <div>{EMOJI.UP_TRIANGLE} 서버 수 - 304개</div>\n          <div><a href=\"https://discord.gg/uuSPaYtF8W\" target=\"_blank\" rel=\"noreferrer\">{EMOJI.ENVELOPE_WITH_ARROW} 샴고양이 개발 서버</a></div>\n          <EmbedFooter text=\"https://github.com/WoodNeck/siamese\" image=\"https://images-ext-1.discordapp.net/external/J_O7iH5CMe8LDWWhW_Erxi1agpn-uesx6LP0hv0c2Zg/https/github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이의 정보를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Bot;\n","import React from \"react\";\n\nimport \"./EmbedMenu.css\";\n\nconst EmbedMenu: React.FC<{\n  items: Array<{ emoji: string; count: number }>\n}> = ({ items }) => {\n  return <div className=\"embed-menu-container\">\n    { items.map((item, idx) => <div key={idx} className=\"embed-menu-item\">{item.emoji} {item.count}</div>)}\n  </div>\n}\n\nexport default EmbedMenu;\n","import React from \"react\";\n\nimport \"./Mention.css\"\n\nconst Mention: React.FC<{ name: string }> = ({ name }) => {\n  return <span className=\"mention\">@{name}</span>\n};\n\nexport default Mention;\n","import Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport { block, code, strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\nexport const DICE = {\n  CMD: \"주사위\",\n  DESC: \"n면짜리 주사위를 굴린다냥! (기본값: 100)\",\n  USAGE: \"[n]\",\n  MIN: 2,\n  MAX: 10000,\n  DEFAULT: 100,\n  MSG: (userName: string, num: number, maxNum: number) => {\n    // Korean josa for number 0-9\n    const josa = [\"이\", \"이\", \"가\", \"이\", \"가\", \"가\", \"이\", \"이\", \"이\", \"가\"];\n    const numStr = num.toString();\n    return `${userName}냥이 주사위를 굴려 🎲${strong(numStr)}${josa[num % 10]} 나왔다냥! (1-${maxNum})`;\n  },\n  ARG_INCORRECT: (min: number, max: number) => `${min}에서 ${max}사이의 숫자를 달라냥!`\n};\n\nexport const CHOOSE = {\n  CMD: \"골라줘\",\n  DESC: \"받은 항목들 중 하나를 임의로 골라준다냥!\",\n  USAGE: \"항목1 항목2 [항목3...]\",\n  ARG_NOT_SUFFICIENT: (prefix: string) => dedent`\n    고를 수 있는 항목을 충분히 달라냥!\n    ${block(`> ${prefix}${CHOOSE.CMD} 샴 먼치킨 아비시니안 페르시안 메인쿤`)}`\n};\n\nexport const SAY = {\n  CMD: \"따라해\",\n  DESC: \"해준 말을 지운 후에 따라한다냥!\",\n  USAGE: \"따라할 문장\",\n  TARGET: \"따라할 문장\"\n};\n\nexport const VOTE = {\n  CMD: \"투표\",\n  DESC: \"채널 내에서 간단한 투표를 할 수 있다냥!\",\n  USAGE: \"제목\",\n  TARGET: \"투표 제목\",\n  CONVERSATION_TIME: 120,\n  OPTIONS_TITLE: \"투표 항목들을 말해달라냥!\",\n  OPTIONS_DESC: \"콤마(,)로 항목들을 구분해서, 최소 2개에서 9개까지 투표 항목들을 말해달라냥!\",\n  OPTIONS_FOOTER: \"예) 옵션1, 옵션2, 옵션3\",\n  DURATION_TITLE: \"투표를 몇 분동안 하면 될까냥?\",\n  DURATION_DESC: dedent`\n\t\t\t투표를 종료하기까지 시간을 분 단위로 말해달라냥!\n\t\t\t최소 1분에서 최대 1440분(하루)까지 가능하다냥!`,\n  DURATION_FOOTER: \"예) 30\",\n  DURATION_MIN: 0.1,\n  DURATION_MAX: 1440,\n  HELP_DESC: dedent`\n\t\t\t투표를 시작한다냥! 번호 이모지를 클릭해서 투표하라냥!\n\t\t\t각자 가장 마지막에 클릭한 이모지가 최종 투표 항목이 된다냥!`,\n  RESULT_DESC: (name: string, votes: number) => `${strong(name)}${Josa.c(name, \"이/가\")} ${strong(votes.toString())}표로 가장 높은 표를 기록했다냥!`,\n  RESULT_DESC_TIE: (options: string[], vote: number) => `${options.map(strong).join(\", \")}${Josa.c(options[options.length - 1], \"이/가\")} ${vote}표로 동점이다냥!`,\n  TITLE: (title: string) => `${EMOJI.BALLOT_BOX} ${title}`,\n  FOOTER: (name: string, time: number) => `${name}의 투표 (${EMOJI.STOPWATCH}${time}m)`,\n  COUNT: (cnt: number) => `${cnt}표`,\n  ERROR: {\n    OPTIONS_BETWEEN_2_9: \"투표 항목을 콤마(,)로 구분해서 2개에서 9개 사이로 달라냥!\",\n    DURATION_SHOULD_CLAMPED: max => `투표 시간은 1에서 ${max} 사이의 숫자를 말해달라냥!`\n  }\n};\n\nexport const AVATAR = {\n  CMD: \"아바타\",\n  DESC: \"사용자의 아바타 이미지를 크게 보여준다냥!\",\n  USAGE: \"@사용자\",\n  MENTION_NEEDED: (prefix: string, botName: string) => dedent`\n    명령어 대상을 ${code(\"@멘션\")}해서 사용하는 명령어다냥!\n    ${block(`> ${prefix}${AVATAR.CMD} @${botName}`)}`,\n  MENTION_ONLY_ONE: \"한 명의 유저만 멘션해달라냥!\"\n};\n\nexport const TRANSLATE = {\n  CMD: \"번역\",\n  DESC: \"문장을 번역한다냥!\",\n  USAGE: \"[언어] 문장\",\n  ALIAS: [\"번역해줘\"],\n  DEFAULT_LANG: \"한국어\",\n  LANGS: {\n    \"아프리칸스어\": \"af\",\n    \"알바니아어\": \"sq\",\n    \"암하라어\": \"am\",\n    \"아랍어\": \"ar\",\n    \"아르메니아어\": \"hy\",\n    \"아제르바이잔어\": \"az\",\n    \"바스크어\": \"eu\",\n    \"벨라루스어\": \"be\",\n    \"벵골어\": \"bn\",\n    \"보스니아어\": \"bs\",\n    \"불가리아어\": \"bg\",\n    \"카탈로니아어\": \"ca\",\n    \"세부아노\": \"ceb\",\n    \"체와어\": \"ny\",\n    \"중국어\": \"zh-cn\",\n    \"중국어 간체\": \"zh-cn\",\n    \"중국어 번체\": \"zh-tw\",\n    \"코르시카어\": \"co\",\n    \"크로아티아어\": \"hr\",\n    \"체코어\": \"cs\",\n    \"덴마크어\": \"da\",\n    \"네덜란드어\": \"nl\",\n    \"영어\": \"en\",\n    \"에스페란토어\": \"eo\",\n    \"에스토니아어\": \"et\",\n    \"타갈로그어\": \"tl\",\n    \"핀란드어\": \"fi\",\n    \"프랑스어\": \"fr\",\n    \"프리지아어\": \"fy\",\n    \"갈리시아어\": \"gl\",\n    \"조지아어\": \"ka\",\n    \"독일어\": \"de\",\n    \"그리스어\": \"el\",\n    \"구자라트어\": \"gu\",\n    \"아이티크리올어\": \"ht\",\n    \"하우사어\": \"ha\",\n    \"하와이어\": \"haw\",\n    \"히브리어\": \"iw\",\n    \"힌디어\": \"hi\",\n    \"몽어\": \"hmn\",\n    \"헝가리어\": \"hu\",\n    \"아이슬란드어\": \"is\",\n    \"이그보어\": \"ig\",\n    \"인도네시아어\": \"id\",\n    \"아일랜드어\": \"ga\",\n    \"이탈리아어\": \"it\",\n    \"일본어\": \"ja\",\n    \"자바어\": \"jw\",\n    \"칸나다어\": \"kn\",\n    \"카자흐어\": \"kk\",\n    \"크메르어\": \"km\",\n    \"한국어\": \"ko\",\n    \"쿠르드어\": \"ku\",\n    \"키르기스어\": \"ky\",\n    \"라오어\": \"lo\",\n    \"라틴어\": \"la\",\n    \"라트비아어\": \"lv\",\n    \"리투아니아어\": \"lt\",\n    \"룩셈부르크어\": \"lb\",\n    \"마케도니아어\": \"mk\",\n    \"말라가시어\": \"mg\",\n    \"말레이어\": \"ms\",\n    \"말라얄람어\": \"ml\",\n    \"몰타어\": \"mt\",\n    \"마오리어\": \"mi\",\n    \"마라티어\": \"mr\",\n    \"몽골어\": \"mn\",\n    \"미얀마어\": \"my\",\n    \"네팔어\": \"ne\",\n    \"노르웨이어\": \"no\",\n    \"파슈토어\": \"ps\",\n    \"페르시아어\": \"fa\",\n    \"폴란드어\": \"pl\",\n    \"포르투갈어\": \"pt\",\n    \"펀자브어\": \"pa\",\n    \"루마니아어\": \"ro\",\n    \"러시아어\": \"ru\",\n    \"사모아어\": \"sm\",\n    \"스코틀랜드게일어\": \"gd\",\n    \"세르비아어\": \"sr\",\n    \"세소토어\": \"st\",\n    \"쇼나어\": \"sn\",\n    \"신디어\": \"sd\",\n    \"신할라어\": \"si\",\n    \"슬로바키아어\": \"sk\",\n    \"슬로베니아어\": \"sl\",\n    \"소말리아어\": \"so\",\n    \"스페인어\": \"es\",\n    \"순다어\": \"su\",\n    \"스와힐리어\": \"sw\",\n    \"스웨덴어\": \"sv\",\n    \"타지크어\": \"tg\",\n    \"타밀어\": \"ta\",\n    \"텔루구어\": \"te\",\n    \"태국어\": \"th\",\n    \"터키어\": \"tr\",\n    \"우크라이나어\": \"uk\",\n    \"우르두어\": \"ur\",\n    \"우즈베크어\": \"uz\",\n    \"베트남어\": \"vi\",\n    \"웨일즈어\": \"cy\",\n    \"코사어\": \"xh\",\n    \"이디시어\": \"yi\",\n    \"요루바어\": \"yo\",\n    \"줄루어\": \"zu\"\n  },\n  ERROR: {\n    NO_CONTENT: \"번역할 내용을 달라냥!\"\n  },\n  LIST: {\n    CMD: \"목록\",\n    DESC: \"번역 가능한 언어들을 보여준다냥!\",\n    ENTRY_PER_PAGE: 20,\n    ENTRY: (lang: string) => `${EMOJI.SMALL_WHITE_SQUARE}${lang}`,\n    MENU_TIME: 30\n  }\n};\n","import { useSelector } from \"react-redux\";\n\nimport CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport Mention from \"../../component/command/Mention\";\n\nimport { RootState } from \"../../redux/reducers\";\nimport * as UTILITY from \"~/const/command/utility\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Utility = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  const userName = user?.username ?? \"USER\";\n\n  return <>\n    <CommandItem command={UTILITY.DICE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 주사위</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><Mention name={userName} />냥이 주사위를 굴려 {EMOJI.DICE}54가 나왔다냥! (1-100)</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">샴 주사위 10000</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><Mention name={userName} />냥이 주사위를 굴려 {EMOJI.DICE}7409가 나왔다냥! (1-10000)</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>n(기본값: 100)면짜리 주사위를 굴려 결과를 보여드립니다.</div>\n        <div>n은 {UTILITY.DICE.MIN}부터 {UTILITY.DICE.MAX}까지 가능합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.CHOOSE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 골라줘 이거 요거 저거</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">요거</ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>주어진 항목들 중에 하나를 골라드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.SAY}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 따라해 냥</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">냥</ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>사용자의 명령어 메시지를 삭제한 후, 해당 메시지의 내용을 따라합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.VOTE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 투표 오늘 저녁 뭐먹지?</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표 항목들을 말해달라냥!</div>\n          <div>콤마(,)로 항목들을 구분해서, 최소 2개에서 9개까지 투표 항목들을 말해달라냥!</div>\n          <div>예) 옵션1, 옵션2, 옵션3</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">🍔, 🍕, 🍜, 🍣, 굶어</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표를 몇 분동안 하면 될까냥?</div>\n          <div>투표를 종료하기까지 시간을 분 단위로 말해달라냥!</div>\n          <div>최소 1분에서 최대 1440분(하루)까지 가능하다냥!</div>\n          <div>예) 30</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">30</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>투표를 시작한다냥! 번호 이모지를 클릭해서 투표하라냥!</div>\n          <div>각자 가장 마지막에 클릭한 이모지가 최종 투표 항목이 된다냥!</div>\n          <div>{EMOJI.BALLOT_BOX} 오늘 저녁 뭐먹지?</div>\n          <div>1️⃣ 🍔</div>\n          <div>2️⃣ 🍕</div>\n          <div>3️⃣ 🍜</div>\n          <div>4️⃣ 🍣</div>\n          <div>5️⃣ 굶어</div>\n          <EmbedFooter image={`${user?.avatarURL ?? siamese.avatar}`} text={`${userName}의 투표 (⏱️30m)•오늘 오후 3:51`}></EmbedFooter>\n          <EmbedMenu items={[{ emoji: \"1️⃣\", count: 1 },{ emoji: \"2️⃣\", count: 1 }, { emoji: \"3️⃣\", count: 1 }, { emoji: \"4️⃣\", count: 1 }, { emoji: \"5️⃣\", count: 1 }]} />\n        </ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          🍔가 5표로 가장 높은 표를 기록했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 채널 내에서 무기명 투표를 시작합니다.</div>\n        <div>투표 옵션은 최소 2개에서 최대 9개까지 가능합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.AVATAR}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아바타 <Mention name={userName} /></ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <img className=\"user-avatar\" src={user?.avatarURL ?? \"https://cdn.discordapp.com/embed/avatars/0.png\"} />\n          <EmbedFooter image={`${user?.avatarURL ?? siamese.avatar}`} text={userName}></EmbedFooter>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>멘션한 유저의 아바타를 큰 사이즈로 보여줍니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.TRANSLATE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 번역 Hello</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.MEMO} 안녕하세요</div>\n          <div>{EMOJI.WWW} 영어: Hello</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">샴 번역 프랑스어 안녕하세요</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.MEMO} salut</div>\n          <div>{EMOJI.WWW} 한국어: 안녕하세요</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>주어진 문장을 한국어로 번역합니다.</div>\n        <div>반대로, 번역할 언어가 주어졌을 경우 한국어 문장을 해당 언어로 번역합니다.</div>\n        <details>\n          <summary>번역 가능한 언어 목록</summary>\n          <ol>{ Object.keys(UTILITY.TRANSLATE.LANGS).map(lang => (\n            <li key={lang} className=\"little-tag\">{lang}</li>\n          )) }</ol>\n        </details>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={UTILITY.TRANSLATE.LIST} parent={UTILITY.TRANSLATE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 번역 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{ Object.keys(UTILITY.TRANSLATE.LANGS).slice(0, 10).map(lang => (\n            <div key={lang}>{EMOJI.SMALL_WHITE_SQUARE} {lang}</div>\n          )) }</div>\n          <div>1/5</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        번역 가능한 언어 목록을 표시합니다.\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Utility;\n","import React from \"react\";\n\nimport \"./EmbedField.css\";\n\nconst EmbedField: React.FC<{\n  title: string;\n  text: string | React.ReactNode;\n}> = ({ title, text }) => {\n  return <div className=\"embed-field-container\">\n    <span className=\"embed-field-title\">{title}</span>\n    <span className=\"embed-field-text\">{text}</span>\n  </div>\n}\n\nexport default EmbedField;\n","import React from \"react\";\n\nimport \"./NSFW.css\"\n\nconst NSFW: React.FC = ({ children }) => {\n  return <div className=\"nsfw-container\">\n    ⚠️ {children}\n  </div>\n};\n\nexport default NSFW;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { dedent } from \"~/util/helper\";\nimport { strong, strike, link } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\nimport EnvVariables from \"~/type/EnvVariables\";\n\nexport const IMAGE = {\n  CMD: \"이미지\",\n  DESC: \"구글 이미지를 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"이미지\",\n  MENU_TIME: 30,\n  SEARCH_URL: \"https://www.googleapis.com/customsearch/v1\",\n  SEARCH_PARAMS: (env: EnvVariables, query: string, isSafeSearch: boolean) => {\n    const params = {\n      q: query,\n      key: env.GOOGLE_API_KEY,\n      cx: env.GOOGLE_SEARCH_ENGINE_ID,\n      searchType: \"image\"\n    };\n\n    return Object.assign(params, isSafeSearch ? { safe: \"active\" } : { safe: \"off\" });\n  }\n} as const;\n\nexport const YOUTUBE = {\n  CMD: \"유튜브\",\n  DESC: \"유튜브 동영상을 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"동영상\",\n  MENU_TIME: 30,\n  MAX_RESULTS: 10,\n  VIDEO_URL: (videoId: string) => `https://youtu.be/${videoId}`\n} as const;\n\nexport const KIN = {\n  CMD: \"지식인\",\n  DESC: \"네이버 지식인을 검색한다냥!\",\n  USAGE: \"검색어\",\n  TARGET: \"지식인 항목\",\n  SERVICE_NAME: \"네이버 지식인\",\n  ICON: \"https://www.naver.com/favicon.ico?1\",\n  ITEMS_PER_PAGE: 5,\n  MENU_TIME: 30,\n  SEARCH_URL: \"https://openapi.naver.com/v1/search/kin.json\",\n  SEARCH_PARAMS: (query: string) => ({\n    query,\n    display: 50,\n    sort: \"sim\"\n  })\n} as const;\n\nexport const CHEAPEST = {\n  CMD: \"최저가\",\n  DESC: \"게임 최저가를 cheapshark.com에서 검색한다냥!\",\n  USAGE: \"게임명\",\n  TARGET: \"게임\",\n  MENU_TIME: 30,\n  SEARCH_URL: \"https://www.cheapshark.com/api/1.0/deals\",\n  SEARCH_PARAMS: (query: string) => ({\n    title: query,\n    sortBy: \"Savings\",\n    pageSize: 10,\n    pageNumber: 0\n  }),\n  REDIRECT_URL: (id: string) => `https://www.cheapshark.com/redirect.php?dealID=${id}`,\n  GAME_SALE_DESC: (price: string, originalPrice: string, savings: number, metaScore: number, metaLink: string) => dedent`\n    ${EMOJI.DOLLAR} ${strong(`${price}$`)} / ${strike(originalPrice)}$ (${savings}% 할인)\n    ${metaScore ? `Metascore: ${link(metaScore.toString(), `https://www.metacritic.com${metaLink}`)}` : \"\"}`,\n  GAME_NO_SALE_DESC: (originalPrice: string) => dedent`\n    ${EMOJI.DOLLAR} ${strong(`${originalPrice}$`)}`,\n  METASCORE_IMG: \"https://www.metacritic.com/images/icons/metacritic-icon.svg\",\n  METASCORE_COLOR: (score: number) => score >= 75\n    ? \"66cc33\"\n    : score >= 50\n      ? \"ffcc33\"\n      : \"ff0000\",\n  REVIEW_TEXT: {\n    \"Overwhelmingly Positive\": \"압도적으로 긍정적\",\n    \"Very Positive\": \"매우 긍정적\",\n    \"Positive\": \"긍정적\",\n    \"Mostly Positive\": \"대체로 긍정적\",\n    \"Mixed\": \"복합적\",\n    \"Mostly Negative\": \"대체로 부정적\",\n    \"Negative\": \"부정적\",\n    \"Very Negative\": \"매우 부정적\",\n    \"Overwhelmingly Negative\": \"압도적으로 부정적\"\n  },\n  REVIEW_FOOTER: (text: string, percent: string, count: string) => `${text} - 전체 사용자 평가 ${count}건 중 ${percent}%가 긍정적이다냥!`,\n  REVIEW_ICON: (percent: number) => percent\n    ? (percent >= 70) ? \"https://www.cheapshark.com/img/reviews/positive.png\"\n      : (percent >= 40) ? \"https://www.cheapshark.com/img/reviews/mixed.png\"\n        : \"https://www.cheapshark.com/img/reviews/negative.png\"\n    : \"\"\n} as const;\n\nexport const SHOPPING = {\n  CMD: \"쇼핑\",\n  DESC: \"네이버 쇼핑에 상품을 검색한다냥!\",\n  USAGE: \"상품명\",\n  TARGET: \"상품\",\n  ICON: \"https://www.naver.com/favicon.ico?1\",\n  MENU_TIME: 30,\n  SEARCH_URL: \"https://openapi.naver.com/v1/search/shop.json\",\n  SEARCH_PARAMS: (query: string) => ({\n    query,\n    display: 10\n  }),\n  PRICE: (low: number, high: number) => dedent`\n    ${high ? `${EMOJI.MIDDLE_DOT} 최저 ${low}원 ~ ${high}원` : `${EMOJI.MIDDLE_DOT} ${low}원`}`,\n  PRODUCT_TYPE: {\n    1: \"일반상품\",\n    2: \"일반상품\",\n    3: \"일반상품\",\n    4: \"중고상품\",\n    5: \"중고상품\",\n    6: \"중고상품\",\n    7: \"단종상품\",\n    8: \"단종상품\",\n    9: \"단종상품\",\n    10: \"판매예정상품\",\n    11: \"판매예정상품\",\n    12: \"판매예정상품\"\n  }\n} as const;\n\nexport const SEARCH = {\n  CMD: \"검색\",\n  DESC: \"구글에서 문서를 검색한다냥!\",\n  USAGE: \"검색할 내용\",\n  TARGET: \"검색 결과\",\n  MENU_TIME: 30,\n  URL: \"https://www.google.com/search\",\n  PARAMS: (query: string) => ({\n    q: query\n  })\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedField from \"../../component/embed/EmbedField\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport NSFW from \"../../component/command/NSFW\";\n\nimport * as SEARCH from \"~/const/command/search\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Search = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n      <CommandItem command={SEARCH.SEARCH}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 검색 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>샴(고양이) - 나무위키</div>\n          <div>2021년 2월 18일 ... 샴 고양이 (Siamese Cat)는 태국 원산의 고양이의 한 종류이다.</div>\n          <div>2. 기원[편집]. 샴은 태국에서 자연 발생한 종으로 흔히 태국 왕가의 고양이 품종 ...</div>\n          <div>나무위키 • (1/10)</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>구글 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.IMAGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 이미지 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <img className=\"bot-avatar\" src={siamese.avatar} />\n          <div>1/9</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>구글 이미지 검색 결과를 최대 10개까지 보여드립니다.</div>\n        <NSFW>\n          후방주의 채널에서 사용시 세이프서치를 사용하지 않습니다.\n        </NSFW>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.YOUTUBE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 유튜브 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://youtu.be/6NoVVJYH2S4\" target=\"_blank\" rel=\"noreferrer\">https://youtu.be/6NoVVJYH2S4</a></div>\n          <img className=\"bot-avatar\" src=\"https://lh3.googleusercontent.com/z6Sl4j9zQ88oUKNy0G3PAMiVwy8DzQLh_ygyvBXv0zVNUZ_wQPN_n7EAR2By3dhoUpX7kTpaHjRPni1MHwKpaBJbpNqdEsHZsH4q\" />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>유튜브 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.KIN}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 지식인 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedField title=\"샴 고양이\" text=\"안녕하세요, 샴 고양이 키우고 싶어 하는데 샴 고양이 주의 할 점이랑 샴 고양이가 좋아하는 음식,장난감 등 꿀팁 좀... 샴고양이도 일반 고양이랑 별로 다른게 없읍니다. 그저 있다면 사람을 더 좋아하는 온순한 애교냥이에...\" />\n          <EmbedField title=\"샴고양이와 키우기 좋은 종\" text=\"안녕하세요 현재 샴고양이를 키우고 있는데 제가 일 다닐때 애기가 많이 우울해하는거같아서 스코티쉬폴드를... 그래서 이번에 폴드는 아는 지인분께 무료분양드리고 다른 고양이를 찾고있는데 혹시 샴고양이와 잘맞는 고양이 종이...\" />\n          <EmbedField title=\"샴 고양이 어디가 아픈걸까요\" text=\"5살 샴 고양이를 키우고있어요 근데 고양이가 마시는 물 그릇에 이렇게 뿌옇게 뭐가 있어요. 어디가 아픈걸까요..ㅠ (사료그릇이랑 물그릇을 나란히 두는게 아니여서 사료가 물그릇에 빠진건 아니에요 단순히 사진속의 뿌연거만 보고 뭔지...\" />\n          <div>1/10</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>네이버 지식인 검색 결과를 최대 10개까지 보여드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.CHEAPEST}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 최저가 Nekopara Vol.1</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>NEKOPARA Vol. 1</div>\n          <div>{EMOJI.DOLLAR} 9.99$</div>\n          <EmbedFooter\n            image=\"https://images-ext-1.discordapp.net/external/PAeHsdFwI_DE_DXWVIHYDOCeuNWS4D0CFky4EJkZFvc/https/www.cheapshark.com/img/reviews/positive.png\"\n            text=\"압도적으로 긍정적 - 전체 사용자 평가 18988건 중 96%가 긍정적이다냥! • (1/1)\"\n          />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div><a href=\"https://cheapshark.com\" target=\"_blank\" rel=\"noreferrer\">cheapshark.com</a>에서 게임 최저가를 검색합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SEARCH.SHOPPING}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 쇼핑 고양이 사료</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://search.shopping.naver.com/search/all?query=%EA%B3%A0%EC%96%91%EC%9D%B4%20%EC%82%AC%EB%A3%8C&frm=NVSHATC\" target=\"_blank\" rel=\"noreferrer\">고양이 전연령 사료</a></div>\n          <div>• 최저 5870원 ~ 133200원</div>\n          <EmbedFooter\n            image=\"https://images-ext-1.discordapp.net/external/r_tAvWWzO30Pppmuvj-Dw2F0ROoZxJWpmo3ytOCQc9I/%3F1/https/www.naver.com/favicon.ico\"\n            text=\"네이버 - 일반상품 • (1/10)\"\n          />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>네이버 쇼핑의 검색 결과를 보여드립니다.</CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Search;\n","export const TTS = {\n  CMD: \"tts\",\n  ALIAS: [\"읽어줘\", \"말해줘\"],\n  DESC: \"메시지를 음성 채널에서 재생한다냥!\",\n  USAGE: \"문장\",\n  TARGET: \"읽을 문장\",\n  MAX_LENGTH: 500,\n  LANGUAGE: \"ko-KR\",\n  ERROR: {\n    MESSAGE_TOO_LONG: \"문장이 너무 길다냥! 500자 이하의 문장을 달라냥!\"\n  }\n} as const;\n\nexport const OUT = {\n  CMD: \"나가\",\n  DESC: \"재생하던 내용을 정지하고 참가한 음성채널에서 나간다냥!\"\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\n\nimport * as SOUND from \"~/const/command/sound\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Sound = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={SOUND.TTS} voiceOnly={true}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 tts 안뇽안뇽</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.MUSIC_NOTE}</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>주어진 문장을 사용자가 참가한 음성 채널에서 읽어드립니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={SOUND.OUT} voiceOnly={true}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 나가</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.GREEN_CHECK}</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>샴고양이가 재생하던 내용을 정지하고 참가한 음성채널에서 나갑니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Sound;\n","import { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DATE = (date: Date) => `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`;\n\nexport const RANDOM = {\n  CMD: \"랜덤\",\n  DESC: \"이 채널의 랜덤한 메시지를 보여준다냥!\",\n  MSG_FETCH_LIMIT: 100,\n  MSG_CHECK: (url: string) => `[원본 메시지${EMOJI.SPEECH_BUBBLE}](${url})`,\n  MSG_URL: (guildId: string, channelId: string, msgId: string) => `https://discordapp.com/channels/${guildId}/${channelId}/${msgId}`,\n  ERROR: {\n    NO_ENTRY_FOUND: \"이 채널은 아직 메시지가 충분히 기록되지 않았다냥!\",\n    CANT_FIND_MSG: \"메시지를 하나도 가져오지 못했다냥! 다시 시도해달라냥!\"\n  }\n} as const;\n\nexport const FORCES = [\n  \"육군\", \"의경\", \"해병\",\n  \"해군\", \"해경\", \"의방\",\n  \"공군\", \"공익\"\n] as const;\n\nexport const DISCHARGE = {\n  CMD: \"전역일\",\n  DESC: \"전역일 정보를 확인한다냥!\",\n  USAGE: \"이름\",\n  TARGET: \"찾을 사람\",\n  SHORTEN_AFTER_THIS_DATE: new Date(2018, 10 - 1, 1),\n  FORCE_INFO: {\n    육군: { duration: 21, maxShortenMonth: 3 },\n    의경: { duration: 21, maxShortenMonth: 3 },\n    해병: { duration: 21, maxShortenMonth: 3 },\n    해군: { duration: 23, maxShortenMonth: 3 },\n    해경: { duration: 23, maxShortenMonth: 3 },\n    의방: { duration: 23, maxShortenMonth: 3 },\n    공군: { duration: 24, maxShortenMonth: 2 },\n    공익: { duration: 24, maxShortenMonth: 3 }\n  },\n  TITLE: (name: string) => `${name}의 전역일 정보다냥!`,\n  DETAILED: \"자세한 정보\",\n  PROGRESS_EMOJI: (percent: number) => `${EMOJI.SPARKLING_HEART.repeat(percent)}${EMOJI.BLACK_HEART.repeat(100 - percent)}`,\n  FORCE_DETAIL: (force: string) => `${force}`,\n  SHORTEN_DATE: (days: number) => `단축일수: ${days}일`,\n  JOIN_DATE: (date: Date) => `입대일자: ${DATE(date)}`,\n  DISCHARGE_DATE: (date: Date) => `전역일자: ${DATE(date)}`,\n  DAYS_PROGRESSED: (days: number) => `복무한 날: ${days}일`,\n  DAYS_LEFT: (days: number) => `남은 날: ${days}일`,\n  PERCENTAGE: (percent: number) => `복무율: ${percent.toFixed(1)}%`,\n  ADD: {\n    CMD: \"추가해줘\",\n    DESC: \"새로운 전역일 정보를 추가한다냥!\",\n    USAGE: \"이름\",\n    ALIAS: [\"추가\"],\n    NAME_MAX_LENGTH: 10,\n    CONVERSATION_TIME: 30,\n    PROMPT_TIME: 30,\n    NAME_ALREADY_EXISTS: (name: string) => `${name}의 전역일 정보는 이미 존재한다냥! 먼저 삭제해달라냥!`,\n    DIALOGUE_JOIN_DATE_TITLE: (name: string) => `${name}의 전역일 정보를 추가한다냥!`,\n    DIALOGUE_JOIN_DATE_DESC: \"먼저, YYYY/MM/DD의 형식으로 입대일을 알려달라냥!\",\n    DIALOGUE_JOIN_DATE_EXAMPLE: \"예) 2013/1/2\",\n    DIALOGUE_FORCES_TITLE: \"다음으로, 군별을 알려달라냥! 다음 중 하나를 골라달라냥!\",\n    DIALOGUE_FORCES_EXAMPLE: () => `${FORCES.join(\", \")}`,\n    SUCCESS: (name: string) => `${EMOJI.MILITARY_HELMET} ${strong(name)}의 정보를 추가했다냥!`\n  },\n  LIST: {\n    CMD: \"목록\",\n    DESC: \"전역일 목록을 확인한다냥!\",\n    RECITAL_TIME: 30,\n    ENTRY_PER_PAGE: 10,\n    ENTRY: (info: { name: string; joinDate: Date }) => `${EMOJI.SMALL_WHITE_SQUARE}${info.name} - ${DATE(info.joinDate)}`\n  },\n  REMOVE: {\n    CMD: \"삭제해줘\",\n    DESC: \"전역일 항목을 삭제한다냥!\",\n    USAGE: \"이름\",\n    ALIAS: [\"삭제\", \"제거\", \"제거해줘\"],\n    SUCCESS: (name: string) => `${EMOJI.MILITARY_HELMET} ${strong(name)}의 전역일 정보를 삭제했다냥!`\n  },\n  ERROR: {\n    NOT_FOUND: \"아직 등록되지 않은 사람이다냥!\",\n    EMPTY_RESULT: \"전역일 정보가 하나도 등록되지 않았다냥!\",\n    NAME_TOO_LONG: (max: number) => `이름이 너무 길다냥! ${max}자 이내로 달라냥!`,\n    PROVIDE_NAME_TO_ADD: \"등록할 사람의 이름을 달라냥!\",\n    PROVIDE_NAME_TO_REMOVE: \"삭제할 사람의 이름을 달라냥!\",\n    JOIN_DATE_NOT_FORMATTED: \"입대일자는 YYYY/MM/DD 형식으로 달라냥!\",\n    FORCES_NOT_LISTED: `${FORCES.map(force => strong(force)).join(\", \")} 중에 하나를 골라달라냥!`\n  }\n} as const;\n","import { useSelector } from \"react-redux\";\n\nimport CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\n\nimport { RootState } from \"../../redux/reducers\";\nimport * as HISTORY from \"~/const/command/history\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst History = () => {\n  const user = useSelector((state: RootState) => state.user);\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={HISTORY.RANDOM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 랜덤</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={(user && user.id) ? { name: user.username, avatar: user.avatarURL } : siamese} />\n          <div>대충 채널의 예전 메시지 내용</div>\n          <a href=\"https://github.com/WoodNeck/siamese\" target=\"_blank\" rel=\"noreferrer\">원본 메시지 {EMOJI.SPEECH_BUBBLE}</a>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 채널의 예전 메시지들 중 하나를 무작위로 가져와 표시합니다.</div>\n        <div>메시지는 샴고양이가 서버에 참가한 시점부터 기록되기 때문에, 샴고양이가 참가하기 전 메시지는 가져올 수 없습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WN의 전역일 정보다냥!</div>\n          <div style={{ wordBreak: \"break-all\" }}>{[...Array(100).keys()].map(() => EMOJI.SPARKLING_HEART)}</div>\n          <div>자세한 정보</div>\n          <div>공군</div>\n          <div>입대일자: 2013년 1월 2일</div>\n          <div>전역일자: 2015년 1월 1일</div>\n          <div>복무한 날: 729일</div>\n          <div>남은 날: 0일</div>\n          <div>복무율: 100.0%</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>등록된 전역일 정보를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.ADD} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 추가해줘 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WN의  전역일 정보를 추가한다냥!</div>\n          <div>먼저, YYYY/MM/DD의 형식으로 입대일을 알려달라냥!</div>\n          <div>예) 2013/1/2</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">2013/1/2</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>다음으로, 군별을 알려달라냥! 다음 중 하나를 골라달라냥!</div>\n          <div>육군, 의경, 해병, 해군, 해경, 의방, 공군, 공익</div>\n        </ChatBubble>\n        <ChatBubble position=\"right\">공군</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          💂 WN의 정보를 추가했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>전역일 정보를 새로 추가합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.LIST} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>🔹 WN - 2013년 1월 2일</div>\n          <div>1/1</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>등록된 전역일 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={HISTORY.DISCHARGE.REMOVE} parent={HISTORY.DISCHARGE}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 전역일 삭제해줘 WN</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          💂 WN의 전역일 정보를 삭제했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>전역일 정보를 삭제합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default History;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { strong } from \"~/util/markdown\";\nimport * as EMOJI from \"~/const/emoji\";\nimport EnvVariables from \"~/type/EnvVariables\";\n\nexport const STEAM = {\n  CMD: \"스팀\",\n  SEARCH_BY_COMMUNITY_ID_URL: \"http://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/\",\n  SEARCH_BY_GAME_NAME_URL: \"https://store.steampowered.com/api/storesearch/\",\n  SUMMARY_URL: \"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002\",\n  BAN_URL: \"http://api.steampowered.com/ISteamUser/GetPlayerBans/v1\",\n  RECENT_GAME_URL: \"http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v1\",\n  LEVEL_URL: \"http://api.steampowered.com/IPlayerService/GetSteamLevel/v1\",\n  FRIEND_URL: \"http://api.steampowered.com/ISteamUser/GetFriendList/v1\",\n  OWNING_GAME_URL: \"http://api.steampowered.com/IPlayerService/GetOwnedGames/v1\",\n  CURRENT_PLAYERS_URL: \"http://api.steampowered.com/ISteamUserStats/GetNumberOfCurrentPlayers/v1\",\n  ICON_URL: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\",\n  PROFILE_GAME_URL: baseUrl => `${baseUrl}games/?tab=all`,\n  GAME_IMG_URL: (appid, url) => `http://media.steampowered.com/steamcommunity/public/images/apps/${appid}/${url}.jpg`,\n  STORE_URL: appid => `https://store.steampowered.com/app/${appid}`,\n  SEARCH_BY_COMMUNITY_ID_PARAMS: (env: EnvVariables, query: string) => ({\n    vanityurl: query,\n    key: env.STEAM_API_KEY\n  }),\n  SEARCH_BY_GAME_NAME_PARAMS: (query: string) => ({\n    term: query,\n    l: \"english\",\n    cc: \"US\"\n  }),\n  STEAM_IDS_PARAMS: (env: EnvVariables, id: string) => ({\n    steamids: id,\n    key: env.STEAM_API_KEY\n  }),\n  RECENT_GAME_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    count: 3\n  }),\n  STEAM_ID_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY\n  }),\n  GAME_ID_PARAMS: (env: EnvVariables, id: string) => ({\n    appid: id,\n    key: env.STEAM_API_KEY\n  }),\n  OWNING_GAME_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    include_appinfo: \"1\",\n    include_played_free_games: \"1\"\n  }),\n  FRIEND_PARAMS: (env: EnvVariables, id: string) => ({\n    steamid: id,\n    key: env.STEAM_API_KEY,\n    relationship: \"friend\"\n  }),\n  PLAYTIME: (minute: number) => `총 플레이 시간: ${minute ? (minute / 60).toFixed(1) : 0}시간`,\n  PLAYTIME_SHORT: (minute: number) => `${minute ? (minute / 60).toFixed(1) : 0}시간`,\n  ERROR: {\n    USER_NOT_FOUND: \"그 아이디로는 유저를 찾지 못했다냥!\",\n    EMPTY_GAMES: \"계정이 비공개거나 가진 게임이 하나도 없다냥!\"\n  }\n} as const;\n\nexport const PROFILE = {\n  CMD: \"프로필\",\n  DESC: \"프로필 정보를 요약해서 보여준다냥!\",\n  USAGE: \"커뮤니티_ID\",\n  PERSONA_STATE: {\n    0: \"오프라인\",\n    1: \"온라인\",\n    2: \"바쁨\",\n    3: \"자리 비움\",\n    4: \"수면 중\",\n    5: \"거래할 사람 찾는 중\",\n    6: \"같이 게임해요\"\n  },\n  PLAYING_STATE: (game: string) => `${strong(game)}플레이 중`,\n  REGISTERED: (timestamp: number) => {\n    const date = new Date(timestamp);\n    return `${date.getUTCFullYear()}년 ${date.getUTCMonth() + 1}월에 가입`;\n  },\n  LAST_LOGOFF: (timestamp: number) => {\n    const dateDiff = new Date(new Date().getTime() - new Date(timestamp).getTime());\n\n    const diff = {\n      year: Math.floor(dateDiff.getUTCFullYear() - 1970),\n      month: Math.floor(dateDiff.getUTCMonth() % 12),\n      week: Math.floor(dateDiff.getUTCDate() / 7),\n      // If days over 31 it won't be a problem as we're not using this value then\n      day: Math.floor((dateDiff.getUTCDate() - 1) % 31),\n      hour: Math.floor(dateDiff.getUTCHours() % 24),\n      minute: Math.floor(dateDiff.getUTCMinutes() % 60)\n    };\n\n    const last = diff.year > 1\n      ? `${diff.year}년`\n      : diff.year && diff.month\n        ? `${diff.year}년 ${diff.month}개월`\n        : diff.month > 1\n          ? `${diff.month}개월`\n          : diff.week\n            ? `${diff.week}주`\n            : diff.day > 1\n              ? `${diff.day}일`\n              : diff.day && diff.hour\n                ? `${diff.day}일 ${diff.hour}시간`\n                : diff.hour > 1\n                  ? `${diff.hour}시간`\n                  : diff.hour && diff.minute\n                    ? `${diff.hour}시간 ${diff.minute}분`\n                    : `${Math.max(diff.minute, 1)}분`;\n    return `마지막 접속: ${last} 전`;\n  },\n  TITLE: (name: string, flag: string) => `${flag}${name}`,\n  FIELD_DETAIL: \"유저 정보\",\n  FIELD_BAN: \"밴 기록\",\n  FIELD_RECENT_GAME: \"최근 플레이 게임 (지난 2주간)\",\n  BAN_COMMUNITY: \"커뮤니티 밴\",\n  BAN_VAC: \"VAC 밴\",\n  BAN_GAME: \"게임 밴\",\n  BAN_ECONOMY: \"거래 밴\",\n  LEVEL: (level: number) => `LEVEL - ${strong(level.toString())}`,\n  FRIENDS: (friends: any[]) => `친구 - ${strong(friends.length.toString())}명`,\n  GAMES: (gamesCount: number) => `게임 - ${strong(gamesCount.toString())}개`,\n  GAME_DESC: (game: { name: string; playtime_2weeks: number }) => `${EMOJI.MIDDLE_DOT} ${strong(game.name)} - ${(game.playtime_2weeks / 60).toFixed(1)}시간`\n} as const;\n\nexport const RANDOM = {\n  CMD: \"랜덤\",\n  DESC: \"계정에서 무작위 게임을 가져와서 보여준다냥!\",\n  USAGE: \"커뮤니티_ID\"\n} as const;\n\nexport const LIBRARY = {\n  CMD: \"라이브러리\",\n  DESC: \"계정의 게임들을 플레이 시간이 높은 것부터 보여준다냥!\",\n  USAGE: \"커뮤니티_ID\",\n  GAMES_PER_PAGE: 10,\n  MAX_PAGES: 5,\n  RECITAL_TIME: 30\n} as const;\n\nexport const PLAYERS = {\n  CMD: \"동접\",\n  DESC: \"게임의 현재 접속자 수를 알려준다냥!\",\n  ALIAS: [\"동접자수\"],\n  USAGE: \"게임명\",\n  TARGET: \"게임\",\n  CURRENT: players => `현재 플레이어 수: ${players}`,\n  RECITAL_TIME: 30\n} as const;\n\nexport const TOP = {\n  CMD: \"동접순위\",\n  DESC: \"현재 동접순위를 확인한다냥!\",\n  SEARCH_URL: \"https://store.steampowered.com/stats/Steam-Game-and-Player-Statistics?l=koreana\",\n  GAMES_PER_PAGE: 10,\n  RECITAL_TIME: 30,\n  FORMAT_INFO: \"동접순위 (현재 / 최고)\",\n  GAME_TITLE: (idx: number, game: string[]) => `${idx}. ${strong(game[2])}`,\n  GAME_STATISTICS: (game: string[]) => `${EMOJI.MIDDLE_DOT} ${game[0]}명 / ${game[1]}명`\n} as const;\n","import CommandItem from \"../../component/command/CommandItem\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedFooter from \"../../component/embed/EmbedFooter\";\nimport EmbedField from \"../../component/embed/EmbedField\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\n\nimport * as STEAM from \"~/const/command/steam\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Steam = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandItem command={STEAM.PROFILE} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 프로필 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WoodNeck</div>\n          <EmbedField title=\"유저 정보\" text={<><div>🇰🇷</div><div>LEVEL - 72</div><div>게임 - 1913개</div></>}/>\n          <EmbedField title=\"최근 플레이 게임 (지난 2주간)\" text=\"• 고양이 낙원 - 113.5시간\" />\n          <EmbedFooter image=\"https://images-ext-1.discordapp.net/external/1f_R4CatEN7peDuRS10JSuqTkc-jPnW8KGm4iOo_UUQ/https/upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\" text=\"2010년 4월에 가입\" />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 사용자의 스팀 프로필 정보를 요약해서 표시합니다.</div>\n        <div>스팀 커뮤니티 ID는 사용자 프로필에서 우클릭 {\"->\"} URL복사를 통해 확인하실 수 있습니다.</div>\n        <div>예) https://steamcommunity.com/id/woodneck {\"=>\"} \"woodneck\"</div>\n        <div>예2) https://steamcommunity.com/profiles/12345678901234567 {\"=>\"} \"12345678901234567\"</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.RANDOM} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 랜덤 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={{ avatar: \"https://images-ext-2.discordapp.net/external/Gk53Fo4pzLLTD4xClBFtVWUjfEid88YgIAYbmZ3_FNo/http/media.steampowered.com/steamcommunity/public/images/apps/224480/a2def5192d16c9a997dfff6d4f1febcd28ee83f9.jpg\", name: \"Octodad: Dadliest Catch\" }} />\n          <div>총 플레이 시간: 8.8시간</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 사용자의 계정에서 무작위 게임을 가져와 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.LIBRARY} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 라이브러리 WoodNeck</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>WoodNeck</div>\n          <div>{EMOJI.VIDEO_GAME} Atlas Reactor - 438.9시간</div>\n          <div>{EMOJI.VIDEO_GAME} Team Fortress 2 - 436.5시간</div>\n          <div>{EMOJI.VIDEO_GAME} Killing Floor 2 - 223.3시간</div>\n          <div>{EMOJI.VIDEO_GAME} Dota 2 - 196.1시간</div>\n          <div>{EMOJI.VIDEO_GAME} Tom Clancy's The Division - 190.5시간</div>\n          <div>{EMOJI.VIDEO_GAME} GameMaker: Studio - 187.4시간</div>\n          <div>{EMOJI.VIDEO_GAME} NEKOPARA Vol. 1 - 161.3시간</div>\n          <div>{EMOJI.VIDEO_GAME} Terraria - 138.1시간</div>\n          <div>{EMOJI.VIDEO_GAME} Aseprite - 126.8시간</div>\n          <div>{EMOJI.VIDEO_GAME} FINAL FANTASY XV WINDOWS EDITION - 125.1시간</div>\n          <div>1/5</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>사용자 계정의 게임들을 플레이 시간이 높은 것부터 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.PLAYERS} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 동접 Nekopara Vol.1</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div><a href=\"https://cdn.discordapp.com/attachments/817765838001668116/818511043021897748/1472914171_QQ20160902205022noise_scaleLevel1x2.000000.png\" target=\"_blank\" rel=\"noreferrer\">Nekopara Vol.1</a></div>\n          <div>현재 플레이어 수: 83</div>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>해당 게임의 현재 접속자 수를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={STEAM.TOP} parent={STEAM.STEAM}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 스팀 동접순위</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedField title=\"1. Counter-Strike: Global Offensive\" text=\"• 800,857명 / 1,201,993명\" />\n          <EmbedField title=\"2. Dota 2\" text=\"• 467,223명 / 650,049명\" />\n          <EmbedField title=\"3. PLAYERUNKNOWN'S BATTLEGROUNDS\" text=\"• 330,183명 / 454,613명\" />\n          <EmbedField title=\"4. Valheim\" text=\"• 161,027명 / 330,489명\" />\n          <EmbedField title=\"5. Apex Legends\" text=\"• 157,783명 / 228,948명\" />\n          <EmbedFooter image=\"https://images-ext-1.discordapp.net/external/1f_R4CatEN7peDuRS10JSuqTkc-jPnW8KGm4iOo_UUQ/https/upload.wikimedia.org/wikipedia/commons/thumb/8/83/Steam_icon_logo.svg/512px-Steam_icon_logo.svg.png\" text=\"동접순위 (현재 / 최고) • (1/10)\" />\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 가장 플레이어 수가 많은 게임을 100개까지 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Steam;\n","import \"./CommandInfo.css\";\n\nconst CommandItem: React.FC<{\n  title: string;\n}> = ({ title, children }) => {\n  return <div className=\"command-item command-info\">\n    <div className=\"command-info-title\">{title}</div>\n    {children}\n  </div>\n}\n\nexport default CommandItem;\n","import Josa from \"josa-js\";\n\nimport { dedent } from \"~/util/helper\";\nimport * as EMOJI from \"~/const/emoji\";\nimport { code } from \"~/util/markdown\";\n\nexport const ICON = {\n  CMD: \"아이콘\",\n  DESC: \"아이콘 관리 페이지를 반환한다냥!\",\n  ALIAS: [\"콘\"],\n  TITLE: (guildName: string) => `${EMOJI.LINK} ${guildName}의 아이콘 관리 페이지다냥!`,\n  NAME_MAX_LENGTH: 10\n};\n\nexport const ADD = {\n  CMD: \"추가해줘\",\n  DESC: \"새로운 아이콘을 추가한다냥!\",\n  USAGE: \"[그룹명] 아이콘명\",\n  ALIAS: [\"추가\"],\n  REPLACE_TITLE: \"이미 해당 이름을 가진 아이콘이 존재한다냥! 교체할거냥?\",\n  SUCCESS: (name: string) => `${Josa.r(name, \"을/를\")} 추가했다냥!`,\n  TUTORIAL_URL: \"https://cdn.discordapp.com/attachments/805419701386739722/805419755497848862/icon_add.png\",\n  ERROR: {\n    PROVIDE_NAME_TO_ADD: `추가할 아이콘 이름을 ${code(\"그룹명\")} ${code(\"아이콘명\")}으로 달라냥! 그룹명은 생략 가능하다냥!`,\n    PROVIDE_IMAGES: \"추가할 이미지도 같이 달라냥!\\n아래처럼 이미지를 추가하면서 명령어를 같이 입력하면 된다냥!\",\n    IMAGE_TOO_MANY: \"추가할 이미지는 한 장만 달라냥!\",\n    GROUP_NAME_TOO_LONG: `그룹명이 너무 길다냥! ${ICON.NAME_MAX_LENGTH}자 이내로 달라냥!`,\n    ICON_NAME_TOO_LONG: `아이콘 이름이 너무 길다냥! ${ICON.NAME_MAX_LENGTH}자 이내로 달라냥!`\n  }\n};\n\nexport const REMOVE = {\n  CMD: \"삭제해줘\",\n  DESC: \"기존 아이콘을 삭제한다냥!\",\n  USAGE: \"[그룹명] 아이콘명\",\n  ALIAS: [\"삭제\", \"제거\", \"제거해줘\"],\n  SUCCESS: (name: string) => `${Josa.r(name, \"을/를\")} 삭제했다냥!`,\n  ERROR: {\n    PROVIDE_NAME_TO_REMOVE: `삭제할 아이콘 이름을 ${code(\"그룹명\")} ${code(\"아이콘명\")}으로 달라냥! 그룹명은 생략 가능하다냥!`,\n    NOT_FOUND: \"아이콘을 찾을 수 없다냥!\"\n  }\n};\n\nexport const LIST = {\n  CMD: \"목록\",\n  DESC: dedent`\n    그룹 안의 아이콘 목록을 표시한다냥!\n    그룹 이름을 주지 않을 경우 그룹에 속하지 않은 아이콘들을 표시한다냥!`,\n  USAGE: \"그룹명\",\n  ITEM_PER_PAGE: 10,\n  RECITAL_TIME: 30,\n  TYPE: {\n    GROUP: \"GROUP\",\n    ICON: \"ICON\"\n  },\n  EMOJI: {\n    GROUP: EMOJI.FILE,\n    ICON: EMOJI.PICTURE\n  } as const,\n  ERROR: {\n    NO_GROUP: \"그런 이름을 가진 그룹이 존재하지 않는다냥!\"\n  }\n};\n\nexport const ROLE = {\n  CMD: \"역할설정\",\n  DESC: \"아이콘을 관리할 수 있는 역할을 설정한다냥!\",\n  USAGE: \"[@역할명]\",\n  ALIAS: [\"역할\"],\n  MSG: {\n    SUCCESS_WITH_ROLE: (roleMention: string) => `이제 서버 관리자랑 ${roleMention}만 아이콘을 관리할 수 있다냥!`,\n    SUCCESS_WITHOUT_ROLE: \"아이콘 관리 역할을 제거했다냥! 아무나 아이콘을 관리할 수 있다냥!\"\n  },\n  ERROR: {\n    PROVIDE_EXACTLY_ONE_ROLE: `설정할 역할은 하나만 ${code(\"@멘션\")}해서 달라냥!`,\n    NO_ROLE: \"그런 이름을 가진 그룹이 존재하지 않는다냥!\"\n  }\n};\n","import { Link } from \"react-router-dom\";\n\nimport CommandItem from \"../../component/command/CommandItem\";\nimport CommandInfo from \"../../component/command/CommandInfo\";\nimport ChatBubble from \"../../component/command/ChatBubble\";\nimport ChatContainer from \"../../component/command/ChatContainer\";\nimport CommandDesc from \"../../component/command/CommandDesc\";\nimport EmbedHeader from \"../../component/embed/EmbedHeader\";\nimport EmbedMenu from \"../../component/embed/EmbedMenu\";\nimport Mention from \"../../component/command/Mention\";\n\nimport * as ICON from \"~/const/command/icon\";\nimport * as EMOJI from \"~/const/emoji\";\n\nconst Icon = () => {\n  const siamese = {\n    name: \"샴고양이\",\n    avatar: `${process.env.PUBLIC_URL}/logo20.png`\n  };\n  window.scrollTo(0, 0);\n\n  return <>\n    <CommandInfo title=\"아이콘이란?\">\n      <ChatContainer>\n        <ChatBubble position=\"right\">~케장 그렇군요</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <EmbedHeader author={{\n            name: \"USER\",\n            avatar: \"https://cdn.discordapp.com/embed/avatars/0.png\"\n          }} />\n          <img src=\"https://cdn.discordapp.com/attachments/817765838001668116/820596279734304768/c1e2f05c7e12b6be.png\" />\n        </ChatBubble>\n      </ChatContainer>\n      <div style={{ marginTop: \"20px\" }}>\n        <CommandDesc>\n          <div style={{ color: \"#000\" }}>아이콘은 접두사(~)에 이미지 이름을 붙여 메시지를 보내면 샴고양이가 메시지를 이미지로 변환시켜주는 기능입니다.</div>\n        </CommandDesc>\n        <div style={{ fontSize: \"1.5em\" }}>사용법</div>\n        <div>~[아이콘 그룹명] [아이콘 이름]</div>\n        <div>~[아이콘 이름] (그룹이 없는 경우)</div>\n        <hr />\n        <div><Link to=\"/icon\" style={{ fontSize: \"1.5em\" }}>아이콘 관리 페이지</Link></div>\n        <hr />\n        <div>이미지를 디스코드 서버에 저장하기 때문에, 최대 8MB까지의 이미지들만 업로드 가능합니다.</div>\n      </div>\n    </CommandInfo>\n    <CommandItem command={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <a href=\"https://woodneck.github.io/siamese/#/icon\">\n            {EMOJI.LINK} 샴고양이 개발 서버의 아이콘 관리 페이지다냥!\n          </a>\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>아이콘 관리 페이지 링크를 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.ADD} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">\n          <img src={siamese.avatar} className=\"bot-avatar\" />\n          <div>샴 아이콘 추가해줘 샴고양이</div>\n        </ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          샴고양이를 추가했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>새로운 아이콘을 추가합니다.</div>\n        <img src=\"https://cdn.discordapp.com/attachments/805419701386739722/805419755497848862/icon_add.png\" />\n        <div>위와 같이 이미지를 업로드하면서 명령어를 같이 입력하셔야 합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.REMOVE} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 삭제해줘 샴고양이</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          샴고양이를 삭제했다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>기존 아이콘을 삭제합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.LIST} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 목록</ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          <div>{EMOJI.FILE} 고양</div>\n          <div>{EMOJI.FILE} 케장</div>\n          <div>{EMOJI.PICTURE} 샴고양이</div>\n          <div>1/1</div>\n          <EmbedMenu items={[{ emoji: EMOJI.ARROW_LEFT, count: 1 },{ emoji: EMOJI.ARROW_RIGHT, count: 1 }, { emoji: EMOJI.CROSS, count: 1 }]} />\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>현재 서버의 아이콘 목록을 표시합니다.</div>\n      </CommandDesc>\n    </CommandItem>\n    <CommandItem command={ICON.ROLE} parent={ICON.ICON}>\n      <ChatContainer>\n        <ChatBubble position=\"right\">샴 아이콘 역할설정 <Mention name=\"dev\" /></ChatBubble>\n        <ChatBubble author={siamese} position=\"left\">\n          이제 서버 관리자랑 <Mention name=\"dev\" />만 아이콘을 관리할 수 있다냥!\n        </ChatBubble>\n      </ChatContainer>\n      <CommandDesc>\n        <div>아이콘을 관리할 수 있는 역할을 설정합니다.</div>\n        <div>설정하지 않을 경우, 서버의 모든 사람이 아이콘을 관리할 수 있습니다.</div>\n      </CommandDesc>\n    </CommandItem>\n  </>\n}\n\nexport default Icon;\n","import {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Bot from \"./command/Bot\";\nimport Utility from \"./command/Utility\";\nimport Search from \"./command/Search\";\nimport Sound from \"./command/Sound\";\nimport History from \"./command/History\";\nimport Steam from \"./command/Steam\";\nimport Icon from \"./command/Icon\";\n\nimport NotFound from \"./NotFound\";\n\nimport * as CATEGORY from \"~/const/category\";\n\nimport \"./Command.css\";\n\nconst Command = () => {\n  return (\n    <div className=\"command-container\">\n      <Switch>\n        <Route path={`/command/${CATEGORY.BOT.ID}`} component={Bot} />\n        <Route path={`/command/${CATEGORY.UTILITY.ID}`} component={Utility} />\n        <Route path={`/command/${CATEGORY.SEARCH.ID}`} component={Search} />\n        <Route path={`/command/${CATEGORY.SOUND.ID}`} component={Sound} />\n        <Route path={`/command/${CATEGORY.HISTORY.ID}`} component={History} />\n        <Route path={`/command/${CATEGORY.STEAM.ID}`} component={Steam} />\n        <Route path={`/command/${CATEGORY.ICON.ID}`} component={Icon} />\n        <Route path=\"/command/*\" component={NotFound} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default Command;\n","import \"./Setting.css\";\n\nconst Setting = () => (\n  <div className=\"not-found-container\">\n    <span>만드는 중이에용...</span>\n  </div>\n);\n\nexport default Setting;\n","import { useEffect, useMemo } from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Sidebar from \"./component/Sidebar\";\n\nimport Home from \"./pages/Home\";\nimport Icon from \"./pages/Icon\";\nimport Command from \"./pages/Command\";\nimport Setting from \"./pages/Setting\";\nimport NotFound from \"./pages/NotFound\";\n\nimport { setUser } from \"./redux/actions\";\nimport { RootState } from \"./redux/reducers\";\n\nimport User from \"~/api/type/User\";\n\nimport \"./Main.css\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const hamburger = useSelector((state: RootState) => state.hamburger);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/user`, {\n      credentials: \"include\"\n    }).then(user => user.json())\n      .then(user => dispatch(setUser(user as User)))\n  }, [dispatch]);\n\n  const pageContainerClass = useMemo(() => {\n    const classes = [\"page-container\"];\n    if (hamburger.open) {\n      classes.push(\"noscroll\");\n    }\n    return classes.join(\" \");\n  }, [hamburger]);\n\n  return (\n    <HashRouter>\n      <div className=\"main-container\">\n        <Sidebar />\n        <div className={pageContainerClass}>\n          <Switch>\n            <Route path=\"/icon\" component={Icon} />\n            <Route path=\"/command\" component={Command} />\n            <Route path=\"/setting\" component={Setting} />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_GUILDS } from \"../actionTypes\";\nimport { setGuilds } from \"../actions\";\nimport Guild from \"~/api/type/Guild\";\n\nconst defaultState: Guild[] = [];\n\ntype GuildAction = ReturnType<typeof setGuilds>;\n\nexport default (state = defaultState, action: GuildAction) => {\n  switch (action.type) {\n    case SET_GUILDS: {\n      return [\n        ...action.payload\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_HAMBURGER } from \"../actionTypes\";\nimport { toggleHamburger } from \"../actions\";\n\nconst defaultState = {\n  open: false\n};\n\ntype HamburgerAction = ReturnType<typeof toggleHamburger>;\n\nexport default (state = defaultState, action: HamburgerAction) => {\n  switch (action.type) {\n    case TOGGLE_HAMBURGER: {\n      return {\n        ...state,\n        open: !state.open\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SELECT_ALL_ICON, SET_ICONS, TOGGLE_ICON, UNSELECT_ALL_ICON } from \"../actionTypes\";\nimport { toggleIconChecked, setCheckedIcons, selectAllIcons, unselectAllIcons } from \"../actions\";\n\nconst defaultState: {\n  [id: string]: {\n    checked: boolean;\n  };\n} = {};\n\ntype IconAction =\n  | ReturnType<typeof toggleIconChecked>\n  | ReturnType<typeof setCheckedIcons>\n  | ReturnType<typeof selectAllIcons>\n  | ReturnType<typeof unselectAllIcons>;\n\nexport default (state = defaultState, action: IconAction) => {\n  switch (action.type) {\n    case TOGGLE_ICON: {\n      const { id } = action.payload;\n\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          checked: state[id] ? !state[id].checked : true\n        }\n      };\n    }\n    case SET_ICONS: {\n      const ids = action.payload;\n      return ids.reduce((state, id) => ({\n        ...state,\n        [id]: { checked: false }\n      }), {});\n    }\n    case SELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: true }\n        }\n      }, state);\n    }\n    case UNSELECT_ALL_ICON: {\n      return Object.keys(state).reduce((newState, id) => {\n        return {\n          ...newState,\n          [id]: { checked: false }\n        }\n      }, state);\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport guilds from \"./guilds\";\nimport hamburger from \"./hamburger\";\nimport icon from \"./icon\";\n\nconst rootReducer = combineReducers({\n  user,\n  guilds,\n  hamburger,\n  icon\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { SET_USER } from \"../actionTypes\";\nimport { setUser } from \"../actions\";\nimport User from \"~/api/type/User\";\n\nconst defaultState: User | null = null;\n\ntype UserAction = ReturnType<typeof setUser>;\n\nexport default (state: User | null = defaultState, action: UserAction) => {\n  switch (action.type) {\n    case SET_USER: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\";\n\nimport \"./index.css\";\nimport Main from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}